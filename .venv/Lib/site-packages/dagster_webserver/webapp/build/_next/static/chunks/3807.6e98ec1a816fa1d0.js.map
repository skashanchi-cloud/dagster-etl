{"version":3,"file":"static/chunks/3807.6e98ec1a816fa1d0.js","mappings":"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","sources":["webpack://_N_E/../ui-core/src/app/FeatureFlags.oss.tsx","webpack://_N_E/../ui-core/src/app/DefaultFeatureFlags.oss.tsx","webpack://_N_E/../ui-core/src/util/getJSONForKey.ts","webpack://_N_E/../ui-core/src/app/Flags.tsx","webpack://_N_E/../ui-core/src/workers/WorkerThread.oss.ts","webpack://_N_E/../ui-core/src/workers/fuseSearch.worker.ts","webpack://_N_E/webpack/bootstrap","webpack://_N_E/webpack/runtime/chunk loaded","webpack://_N_E/webpack/runtime/define property getters","webpack://_N_E/webpack/runtime/ensure chunk","webpack://_N_E/webpack/runtime/get javascript chunk filename","webpack://_N_E/webpack/runtime/get mini-css chunk filename","webpack://_N_E/webpack/runtime/hasOwnProperty shorthand","webpack://_N_E/webpack/runtime/trusted types policy","webpack://_N_E/webpack/runtime/trusted types script url","webpack://_N_E/webpack/runtime/publicPath","webpack://_N_E/webpack/runtime/importScripts chunk loading","webpack://_N_E/webpack/runtime/startup chunk dependencies","webpack://_N_E/webpack/before-startup","webpack://_N_E/webpack/startup","webpack://_N_E/webpack/after-startup"],"sourcesContent":["export enum FeatureFlag {\n  flagDebugConsoleLogging = 'flagDebugConsoleLogging',\n  flagDisableWebsockets = 'flagDisableWebsockets',\n  flagSidebarResources = 'flagSidebarResources',\n  flagDisableAutoLoadDefaults = 'flagDisableAutoLoadDefaults',\n  flagAssetNodeFacets = 'flagAssetNodeFacets',\n  flagUseNewObserveUIs = 'flagUseNewObserveUIs',\n  flagMarketplace = 'flagMarketplace',\n\n  // Flags for tests\n  __TestFlagDefaultNone = '__TestFlagDefaultNone',\n  __TestFlagDefaultTrue = '__TestFlagDefaultTrue',\n  __TestFlagDefaultFalse = '__TestFlagDefaultFalse',\n}\n","import {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\n/**\n * Default values for feature flags when they are unset.\n */\nexport const DEFAULT_FEATURE_FLAG_VALUES: Partial<Record<FeatureFlag, boolean>> = {\n  [FeatureFlag.flagAssetNodeFacets]: true,\n\n  // Flags for tests\n  [FeatureFlag.__TestFlagDefaultTrue]: true,\n  [FeatureFlag.__TestFlagDefaultFalse]: false,\n};\n","export function getJSONForKey(key: string) {\n  let stored = undefined;\n  if (typeof localStorage === 'undefined') {\n    return undefined;\n  }\n\n  try {\n    stored = localStorage.getItem(key);\n    if (stored) {\n      return JSON.parse(stored);\n    }\n  } catch {\n    if (typeof stored === 'string') {\n      // With useStateWithStorage, some values like timezone are moving from `UTC` to `\"UTC\"`\n      // in LocalStorage. To read the old values, pass through raw string values. We can\n      // remove this a few months after 0.14.1 is released.\n      return stored;\n    }\n    return undefined;\n  }\n}\n","import {DEFAULT_FEATURE_FLAG_VALUES} from 'shared/app/DefaultFeatureFlags.oss';\nimport {FeatureFlag} from 'shared/app/FeatureFlags.oss';\n\nimport {getJSONForKey} from '../util/getJSONForKey';\n\nexport const DAGSTER_FLAGS_KEY = 'DAGSTER_FLAGS';\n\nexport const WEB_WORKER_FEATURE_FLAGS_KEY = '__featureFlags';\n\n/**\n * Type representing the mapping of feature flags to their boolean states.\n */\ntype FeatureFlagMap = Partial<Record<FeatureFlag, boolean>>;\n\n/**\n * In-memory cache for feature flags, excludes default values.\n */\nlet currentFeatureFlags: FeatureFlagMap = {};\n\nexport const getCurrentFeatureFlags = (): FeatureFlagMap => {\n  return currentFeatureFlags;\n};\n\n/**\n * Initialize the in-memory cache by loading from localStorage and handling migration.\n */\nconst initializeFeatureFlags = () => {\n  let flags = getJSONForKey(DAGSTER_FLAGS_KEY);\n\n  // Handle backward compatibility by migrating array to object\n  if (Array.isArray(flags)) {\n    const migratedFlags: FeatureFlagMap = {};\n    flags.forEach((flag: FeatureFlag) => {\n      migratedFlags[flag] = true;\n    });\n    setFeatureFlagsInternal(migratedFlags);\n    flags = migratedFlags;\n  }\n\n  currentFeatureFlags = flags || {};\n};\n\n/**\n * Internal function to set feature flags without broadcasting.\n * Used during initialization and migration and by web-workers.\n */\nexport const setFeatureFlagsInternal = (flags: FeatureFlagMap) => {\n  if (typeof flags !== 'object' || Array.isArray(flags)) {\n    throw new Error('flags must be an object mapping FeatureFlag to boolean values');\n  }\n  currentFeatureFlags = flags;\n  if (typeof localStorage !== 'undefined') {\n    localStorage.setItem(DAGSTER_FLAGS_KEY, JSON.stringify(flags));\n  }\n};\n\n// Initialize the BroadcastChannel\nexport const featureFlagsChannel = new BroadcastChannel('feature-flags');\n\n// Initialize feature flags on module load\ninitializeFeatureFlags();\n\nexport const getFeatureFlagsWithoutDefaultValues = (): FeatureFlagMap => {\n  return currentFeatureFlags;\n};\n\nexport const getFeatureFlagDefaults = (): FeatureFlagMap => {\n  return DEFAULT_FEATURE_FLAG_VALUES;\n};\n\nexport const getFeatureFlagsWithDefaults = (): FeatureFlagMap => {\n  return {...DEFAULT_FEATURE_FLAG_VALUES, ...currentFeatureFlags};\n};\n\n/**\n * Function to check if a specific feature flag is enabled.\n * Falls back to default values if the flag is unset.\n */\nexport const featureEnabled = (flag: FeatureFlag): boolean => {\n  if (flag in currentFeatureFlags) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return currentFeatureFlags[flag]!;\n  }\n\n  // Return default value if flag is unset\n  return DEFAULT_FEATURE_FLAG_VALUES[flag] ?? false;\n};\n\n/**\n * Function to update feature flags.\n * Updates the in-memory cache, persists to localStorage, and broadcasts the change.\n */\nexport const setFeatureFlags = (flags: FeatureFlagMap, broadcast: boolean = true) => {\n  setFeatureFlagsInternal(flags);\n  if (broadcast) {\n    featureFlagsChannel.postMessage('updated');\n  }\n};\n\nexport const toggleFeatureFlag = (flag: FeatureFlag) => {\n  const flags = getFeatureFlagsWithDefaults();\n  flags[flag] = !flags[flag];\n  setFeatureFlags(flags);\n  featureFlagsChannel.postMessage('updated');\n};\n","import {WEB_WORKER_FEATURE_FLAGS_KEY, setFeatureFlags} from '../app/Flags';\n\nexport const createWorkerThread = (\n  onMessage: (postMessage: (message: any) => void, data: any) => Promise<void>,\n  onError: (postMessage: (message: any) => void, error: Error, event: MessageEvent) => void,\n) => {\n  self.addEventListener('message', async (event: MessageEvent) => {\n    try {\n      if (event.data[WEB_WORKER_FEATURE_FLAGS_KEY]) {\n        // Don't broadcast the feature flags update to the main thread.\n        // or we will end up in an infinite loop.\n        setFeatureFlags(event.data[WEB_WORKER_FEATURE_FLAGS_KEY], false);\n      } else {\n        await onMessage(self.postMessage, event.data);\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        self.postMessage({type: 'error', error: error.message, stack: error.stack});\n      } else {\n        self.postMessage({type: 'error', error: String(error), stack: undefined});\n      }\n      onError(self.postMessage, error as Error, event);\n    }\n  });\n};\n","/**\n * A Web Worker that creates and queries a Fuse object.\n */\n\nimport {createWorkerThread} from 'shared/workers/WorkerThread.oss';\n\nimport {Fuse} from '../search/fuse';\n\nlet fuseObject: null | Fuse<any> = null;\nlet allResults: any = null;\n\ncreateWorkerThread(\n  async (postMessage: (message: any) => void, data: any) => {\n    switch (data.type) {\n      case 'set-results': {\n        if (!fuseObject) {\n          fuseObject = new Fuse(data.results, data.fuseOptions);\n        } else {\n          fuseObject.setCollection(data.results);\n        }\n        allResults = data.results.map(fakeFuseItem);\n        postMessage({type: 'ready'});\n        break;\n      }\n      case 'query': {\n        if (fuseObject) {\n          const {queryString} = data;\n          const results = queryString ? fuseObject.search(queryString) : allResults;\n          postMessage({type: 'results', queryString, results});\n        }\n        break;\n      }\n    }\n  },\n  (_postMessage: (message: any) => void, error: Error) => {\n    console.error(error);\n  },\n);\n\nfunction fakeFuseItem<T>(item: T, refIndex: number = 0): Fuse.FuseResult<T> {\n  return {\n    item,\n    refIndex,\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [1885], () => (__webpack_require__(73807)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/chunks/\" + chunkId + \".\" + \"8e67ebd68e0dab56\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var policy;\n__webpack_require__.tt = () => {\n\t// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.\n\tif (policy === undefined) {\n\t\tpolicy = {\n\t\t\tcreateScriptURL: (url) => (url)\n\t\t};\n\t\tif (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) {\n\t\t\tpolicy = trustedTypes.createPolicy(\"nextjs#bundler\", policy);\n\t\t}\n\t}\n\treturn policy;\n};","__webpack_require__.tu = (url) => (__webpack_require__.tt().createScriptURL(url));","__webpack_require__.p = \"BUILDTIME_ASSETPREFIX_REPLACE_ME/_next/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t3807: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.u(chunkId)));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(1885).then(next);\n};",null,"// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["onMessage","FeatureFlag","flagAssetNodeFacets","DAGSTER_FLAGS_KEY","flags","Array","isArray","localStorage","setItem","JSON","stringify","BroadcastChannel","initializeFeatureFlags","getJSONForKey","stored","undefined","getItem","key","parse","migratedFlags","forEach","flag","setFeatureFlagsInternal","setFeatureFlags","broadcast","featureFlagsChannel","postMessage","fuseObject","allResults","fakeFuseItem","item","refIndex","data","type","setCollection","results","Fuse","fuseOptions","map","queryString","search","onError","_postMessage","error","console","self","addEventListener","event","WEB_WORKER_FEATURE_FLAGS_KEY","Error","message","stack","String"],"sourceRoot":"","ignoreList":[]}
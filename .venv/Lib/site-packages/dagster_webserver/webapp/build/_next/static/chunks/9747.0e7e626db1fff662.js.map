{"version":3,"file":"static/chunks/9747.0e7e626db1fff662.js","mappings":"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","sources":["webpack://_N_E/../dg-docs-components/src/css/ListView.module.css?eed1","webpack://_N_E/../dg-docs-components/src/schema/css/TypeTag.module.css?dcef","webpack://_N_E/../dg-docs-components/src/css/PackageTree.module.css?7e1f","webpack://_N_E/../ui-core/src/pipelines/PipelineExplorerRoot.oss.tsx","webpack://_N_E/../dg-docs-components/src/css/ComponentScaffolding.module.css?eb71","webpack://_N_E/../ui-core/src/workspace/CodeLocationRowSet.tsx","webpack://_N_E/../ui-core/src/code-location/css/CodeLocationDocsPackageTree.module.css?f41b","webpack://_N_E/../dg-docs-components/src/css/CopyButton.module.css?e0f3","webpack://_N_E/../dg-docs-components/src/css/ComponentHeader.module.css?162c","webpack://_N_E/../dg-docs-components/src/css/ComponentDetails.module.css?48da","webpack://_N_E/../ui-core/src/code-location/css/CodeLocationDocsRoot.module.css?b6b9","webpack://_N_E/../dg-docs-components/src/schema/css/ArrayTag.module.css?66a4","webpack://_N_E/../dg-docs-components/src/css/ComponentPageContents.module.css?07f3","webpack://_N_E/../ui-core/src/code-location/css/CodeLocationOverviewRoot.module.css?ea71","webpack://_N_E/../ui-core/src/workspace/GraphRoot.tsx","webpack://_N_E/../ui-core/src/assets/AutomaterializeDaemonStatusTag.tsx","webpack://_N_E/../ui-core/src/assets/AssetGroupRoot.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationPageHeaderTitle.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationPageHeader.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationHasDocsQuery.tsx","webpack://_N_E/../ui-core/src/code-location/findRepositoryInLocation.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationTabs.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationSearchableList.tsx","webpack://_N_E/../ui-core/src/assets/useAssetSearch.tsx","webpack://_N_E/../ui-core/src/workspace/WorkspaceAssetsQuery.tsx","webpack://_N_E/../ui-core/src/ui/usePersistedExpansionState.tsx","webpack://_N_E/../ui-core/src/workspace/useFlattenedGroupedAssetList.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationAssetsList.tsx","webpack://_N_E/../ui-core/src/workspace/WorkspaceGraphsQuery.tsx","webpack://_N_E/../ui-core/src/workspace/extractGraphsForRepo.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationGraphsList.tsx","webpack://_N_E/../ui-core/src/ops/OpCard.tsx","webpack://_N_E/../ui-core/src/ops/OpDetailsRoot.tsx","webpack://_N_E/../ui-core/src/ops/OpsRoot.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationOpsView.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefinitionsMain.tsx","webpack://_N_E/../ui-core/src/ui/SideNavItem.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefinitionsNav.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefinitionsRoot.tsx","webpack://_N_E/../dg-docs-components/src/CopyButton.tsx","webpack://_N_E/../dg-docs-components/src/ComponentExample.tsx","webpack://_N_E/../dg-docs-components/src/ComponentTags.tsx","webpack://_N_E/../dg-docs-components/src/ComponentHeader.tsx","webpack://_N_E/../dg-docs-components/src/ComponentScaffolding.tsx","webpack://_N_E/../dg-docs-components/src/schema/ArrayTag.tsx","webpack://_N_E/../dg-docs-components/src/schema/TypeTag.tsx","webpack://_N_E/../dg-docs-components/src/ComponentSchema.tsx","webpack://_N_E/../dg-docs-components/src/ComponentDetails.tsx","webpack://_N_E/../dg-docs-components/src/ComponentPageContents.tsx","webpack://_N_E/../dg-docs-components/src/ListView.tsx","webpack://_N_E/../dg-docs-components/src/PackageDetails.tsx","webpack://_N_E/../dg-docs-components/src/PackagePageDetails.tsx","webpack://_N_E/../dg-docs-components/src/PackageTree.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDocsPackageTree.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDocsQuery.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDocsRoot.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationAlertsSection.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationServerSection.oss.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefsStateComparison.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefsStateQuery.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationOverviewSectionHeader.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationDefsStateComparisonSection.tsx","webpack://_N_E/../ui-core/src/workspace/CodeLocationNotFound.tsx","webpack://_N_E/../ui-core/src/code-location/CodeLocationOverviewRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineOverviewRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/JobFallthroughRoot.oss.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineOrJobDisambiguationRoot.tsx","webpack://_N_E/../ui-core/src/launchpad/LaunchpadSetupFromRunRoot.tsx","webpack://_N_E/../ui-core/src/launchpad/LaunchpadSetupRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/JobTabs.tsx","webpack://_N_E/../ui-core/src/pipelines/buildJobTabs.oss.tsx","webpack://_N_E/../ui-core/src/nav/LatestRunTag.tsx","webpack://_N_E/../ui-core/src/nav/JobMetadata.tsx","webpack://_N_E/../ui-core/src/nav/PipelineNav.tsx","webpack://_N_E/../ui-core/src/instance/backfill/BackfillTable.tsx","webpack://_N_E/../ui-core/src/partitions/JobBackfillsTable.tsx","webpack://_N_E/../ui-core/src/partitions/PartitionRunStatusCheckboxes.tsx","webpack://_N_E/../ui-core/src/partitions/BackfillSelector.tsx","webpack://_N_E/../ui-core/src/partitions/PartitionGraph.tsx","webpack://_N_E/../ui-core/src/partitions/OpJobPartitionsView.tsx","webpack://_N_E/../ui-core/src/partitions/AssetJobPartitionsView.tsx","webpack://_N_E/../ui-core/src/assets/usePartitionNameForPipeline.tsx","webpack://_N_E/../ui-core/src/partitions/PipelinePartitionsRoot.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRoot.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleAlertDetails.oss.tsx","webpack://_N_E/../ui-core/src/schedules/SchedulePartitionStatus.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleResetButton.tsx","webpack://_N_E/../ui-core/src/ticks/EvaluateScheduleDialog.tsx","webpack://_N_E/../ui-core/src/ticks/EvaluateTickButtonSchedule.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleDetails.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleUtils.tsx","webpack://_N_E/../ui-core/src/schedules/ScheduleRoot.tsx","webpack://_N_E/../ui-core/src/workspace/WorkspaceRoot.tsx","webpack://_N_E/../dg-docs-components/src/css/ComponentTags.module.css?0361","webpack://_N_E/../ui-core/src/workspace/CodeLocationMenu.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRunsEmptyState.tsx","webpack://_N_E/../ui-core/src/pipelines/PipelineRunsFeedRoot.tsx","webpack://_N_E/../dg-docs-components/src/css/ComponentSchema.module.css?c506","webpack://_N_E/../dg-docs-components/src/css/PackagePageDetails.module.css?e758","webpack://_N_E/../dg-docs-components/src/css/ComponentExample.module.css?1a29","webpack://_N_E/../dg-docs-components/src/css/yaml.css?0ced","webpack://_N_E/../dg-docs-components/src/css/PackageDetails.module.css?d55a"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListView_container__yJUD8\",\"emptyState\":\"ListView_emptyState__XHDyO\",\"componentItem\":\"ListView_componentItem__ziM5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"TypeTag_tag__VlKpL\",\"objectType\":\"TypeTag_objectType__dR7sE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchOuter\":\"PackageTree_searchOuter__Rjz7E\",\"searchContainer\":\"PackageTree_searchContainer__KxZc_\",\"icon\":\"PackageTree_icon__hR7Xz\",\"search\":\"PackageTree_search__K73yH\",\"treeContainer\":\"PackageTree_treeContainer__sXDC1\",\"loading\":\"PackageTree_loading__lVul6\",\"pkgItem\":\"PackageTree_pkgItem__M3mLe\",\"expandButton\":\"PackageTree_expandButton__KnD3r\",\"chevron\":\"PackageTree_chevron__XMY7L\",\"expanded\":\"PackageTree_expanded___PEO3\",\"pkgLink\":\"PackageTree_pkgLink___esh8\",\"selected\":\"PackageTree_selected__H_AKG\",\"componentList\":\"PackageTree_componentList__dDioC\",\"componentLink\":\"PackageTree_componentLink__N9Dmt\",\"componentName\":\"PackageTree_componentName__3CMdU\"};","import React, {useEffect, useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {explodeCompositesInHandleGraph} from './CompositeSupport';\nimport {\n  GRAPH_EXPLORER_ASSET_NODE_FRAGMENT,\n  GRAPH_EXPLORER_FRAGMENT,\n  GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT,\n  GraphExplorer,\n  GraphExplorerOptions,\n} from './GraphExplorer';\nimport {NonIdealPipelineQueryResult} from './NonIdealPipelineQueryResult';\nimport {ExplorerPath, explorerPathFromString, explorerPathToString} from './PipelinePathUtils';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  PipelineExplorerRootQuery,\n  PipelineExplorerRootQueryVariables,\n} from './types/PipelineExplorerRoot.oss.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphViewType} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntryFragment';\nimport {Loading} from '../ui/Loading';\nimport {buildPipelineSelector, useJob} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\nexport const PipelineExplorerSnapshotRoot = () => {\n  useTrackPageView();\n\n  const params = useParams();\n  const explorerPath = explorerPathFromString((params as any)['0']);\n  const {pipelineName, snapshotId} = explorerPath;\n  const history = useHistory();\n\n  const openInNewTab = useOpenInNewTab();\n  useDocumentTitle(`Snapshot: ${pipelineName}${snapshotId ? `@${snapshotId.slice(0, 8)}` : ''}`);\n\n  return (\n    <PipelineExplorerContainer\n      explorerPath={explorerPath}\n      onChangeExplorerPath={(path, mode) => {\n        history[mode](`/snapshots/${explorerPathToString(path)}`);\n      }}\n      onNavigateToSourceAssetNode={(e, {assetKey}) => {\n        const path = assetDetailsPathForKey(assetKey);\n        if (e.metaKey) {\n          openInNewTab(path);\n        } else {\n          history.push(assetDetailsPathForKey(assetKey));\n        }\n      }}\n    />\n  );\n};\n\nexport const PipelineExplorerContainer = (props: {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToSourceAssetNode: (\n    e: Pick<React.MouseEvent<any>, 'metaKey'>,\n    node: AssetLocation,\n  ) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n}) => {\n  const {explorerPath, repoAddress} = props;\n  const job = useJob(repoAddress, explorerPath.pipelineName);\n  const [options, setOptions] = useState<GraphExplorerOptions>({\n    explodeComposites: explorerPath.explodeComposites ?? false,\n    preferAssetRendering: true,\n  });\n  const isExternal = !!job && job.externalJobSource !== null;\n  useEffect(() => {\n    if (isExternal !== options.isExternal) {\n      setOptions({...options, isExternal});\n    }\n    return () => {};\n  }, [isExternal, options]);\n  const [hideEdgesToNodesOutsideQuery, setHideEdgesToNodesOutsideQuery] = useStateWithStorage(\n    'hideEdgesToNodesOutsideQuery',\n    (json) => {\n      if (json === 'false' || json === false) {\n        return false;\n      }\n      return true;\n    },\n  );\n\n  if (job && job.isAssetJob && options.preferAssetRendering) {\n    const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n    return (\n      <AssetGraphExplorer\n        key={explorerPath.pipelineName}\n        options={options}\n        setOptions={setOptions}\n        fetchOptions={{pipelineSelector, hideEdgesToNodesOutsideQuery}}\n        explorerPath={explorerPath}\n        onChangeExplorerPath={props.onChangeExplorerPath}\n        onNavigateToSourceAssetNode={props.onNavigateToSourceAssetNode}\n        viewType={AssetGraphViewType.JOB}\n        setHideEdgesToNodesOutsideQuery={setHideEdgesToNodesOutsideQuery}\n      />\n    );\n  }\n\n  return <PipelineOpGraphExplorer {...props} options={options} setOptions={setOptions} />;\n};\n\nconst PipelineOpGraphExplorer = ({\n  explorerPath,\n  repoAddress,\n  onChangeExplorerPath,\n  onNavigateToSourceAssetNode,\n  isGraph = false,\n  options,\n  setOptions,\n}: {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToSourceAssetNode: (\n    e: Pick<React.MouseEvent<any>, 'metaKey'>,\n    node: AssetLocation,\n  ) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n  options: GraphExplorerOptions;\n  setOptions: React.Dispatch<React.SetStateAction<GraphExplorerOptions>>;\n}) => {\n  const parentNames = explorerPath.opNames.slice(0, explorerPath.opNames.length - 1);\n  const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n\n  const pipelineResult = useQuery<PipelineExplorerRootQuery, PipelineExplorerRootQueryVariables>(\n    PIPELINE_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        snapshotPipelineSelector: explorerPath.snapshotId ? undefined : pipelineSelector,\n        snapshotId: explorerPath.snapshotId ? explorerPath.snapshotId : undefined,\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<PipelineExplorerRootQuery> queryResult={pipelineResult}>\n      {({pipelineSnapshotOrError: result}) => {\n        if (result.__typename !== 'PipelineSnapshot') {\n          return (\n            <NonIdealPipelineQueryResult\n              isGraph={isGraph}\n              result={result}\n              repoAddress={repoAddress}\n            />\n          );\n        }\n\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n        const assetNodesPresent = result.solidHandles.some(\n          (h) => h.solid.definition.assetNodes.length > 0,\n        );\n        if (options.preferAssetRendering && assetNodesPresent) {\n          return (\n            <AssetGraphExplorer\n              options={options}\n              setOptions={setOptions}\n              fetchOptions={{pipelineSelector}}\n              explorerPath={explorerPath}\n              onChangeExplorerPath={onChangeExplorerPath}\n              onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n              viewType={AssetGraphViewType.JOB}\n            />\n          );\n        }\n\n        return (\n          <GraphExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={onChangeExplorerPath}\n            container={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            isGraph={isGraph}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nexport const PIPELINE_EXPLORER_ROOT_QUERY = gql`\n  query PipelineExplorerRootQuery(\n    $snapshotPipelineSelector: PipelineSelector\n    $snapshotId: String\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    pipelineSnapshotOrError(\n      snapshotId: $snapshotId\n      activePipelineSelector: $snapshotPipelineSelector\n    ) {\n      ... on PipelineSnapshot {\n        id\n        name\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n        solidHandle(handleID: $rootHandleID) {\n          ...GraphExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n            definition {\n              assetNodes {\n                id\n                ...GraphExplorerAssetNodeFragment\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n        ...GraphExplorerFragment\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n  ${GRAPH_EXPLORER_FRAGMENT}\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${GRAPH_EXPLORER_ASSET_NODE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComponentScaffolding_container__OrcqX\",\"commandContainer\":\"ComponentScaffolding_commandContainer__VX0gJ\",\"buttonContainer\":\"ComponentScaffolding_buttonContainer__2dRGl\"};","import {\n  Box,\n  Button,\n  ButtonLink,\n  CaptionMono,\n  Colors,\n  FontFamily,\n  Icon,\n  MiddleTruncate,\n  Tag,\n  Tooltip,\n  UnstyledButton,\n} from '@dagster-io/ui-components';\nimport {useCallback, useMemo, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\nimport {useCopyToClipboard} from '../app/browser';\nimport {\n  NO_RELOAD_PERMISSION_TEXT,\n  ReloadRepositoryLocationButton,\n} from '../nav/ReloadRepositoryLocationButton';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\nimport {\n  LocationStatusEntryFragment,\n  WorkspaceDisplayMetadataFragment,\n} from './WorkspaceContext/types/WorkspaceQueries.types';\n\nexport const ImageName = ({metadata}: {metadata: WorkspaceDisplayMetadataFragment[]}) => {\n  const copy = useCopyToClipboard();\n  const [didCopy, setDidCopy] = useState(false);\n  const imageKV = metadata.find(({key}) => key === 'image');\n  const value = imageKV?.value || '';\n\n  const onClick = useCallback(async () => {\n    copy(value);\n    setDidCopy(true);\n    const timer = setTimeout(() => {\n      setDidCopy(false);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [copy, value]);\n\n  if (imageKV) {\n    return (\n      <ImageNameBox>\n        <span style={{fontWeight: 500}}>image: </span>\n        <span style={{marginRight: '4px'}}>\n          <CaptionMono>{imageKV.value}</CaptionMono>\n        </span>\n        <Tooltip content={didCopy ? 'Copied!' : 'Click to copy image string'} placement=\"top\">\n          <UnstyledButton onClick={onClick}>\n            <Icon name={didCopy ? 'done' : 'copy'} size={12} />\n          </UnstyledButton>\n        </Tooltip>\n      </ImageNameBox>\n    );\n  }\n  return null;\n};\n\nconst ImageNameBox = styled(Box)`\n  width: 100%;\n  color: ${Colors.textLight()};\n  font-size: 12px;\n\n  .bp5-popover-target {\n    display: inline;\n    overflow: hidden;\n    position: relative;\n    top: 1px;\n  }\n`;\n\nexport const ModuleOrPackageOrFile = ({\n  metadata,\n}: {\n  metadata: WorkspaceDisplayMetadataFragment[];\n}) => {\n  const imageKV = metadata.find(\n    ({key}) =>\n      key === 'module_name' ||\n      key === 'package_name' ||\n      key === 'python_file' ||\n      key === 'autoload_defs_module_name',\n  );\n  if (imageKV) {\n    return (\n      <Box\n        flex={{direction: 'row', gap: 4}}\n        style={{width: '100%', color: Colors.textLight(), fontSize: 12}}\n      >\n        <span style={{fontWeight: 500}}>{imageKV.key}:</span>\n        <div style={MetadataValueButtonStyle}>\n          <MiddleTruncate text={imageKV.value} />\n        </div>\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport const LocationStatus = (props: {\n  locationStatus: LocationStatusEntryFragment | null;\n  locationOrError: WorkspaceRepositoryLocationNode | null;\n}) => {\n  const {locationStatus, locationOrError} = props;\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(\n    () => buildReloadFnForLocation(locationStatus?.name || ''),\n    [locationStatus?.name],\n  );\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationStatus?.loadStatus === 'LOADING') {\n    return (\n      <Tag minimal intent=\"primary\">\n        Updating…\n      </Tag>\n    );\n  }\n\n  if (locationOrError?.versionKey !== locationStatus?.versionKey) {\n    return (\n      <Tag minimal intent=\"primary\">\n        Loading…\n      </Tag>\n    );\n  }\n\n  if (locationStatus && locationOrError?.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <Box flex={{alignItems: 'center', gap: 12}}>\n          <Tag minimal intent=\"danger\">\n            Failed\n          </Tag>\n          <ButtonLink onClick={() => setShowDialog(true)}>\n            <span style={{fontSize: '12px'}}>View error</span>\n          </ButtonLink>\n        </Box>\n        <RepositoryLocationNonBlockingErrorDialog\n          location={locationStatus.name}\n          isOpen={showDialog}\n          error={locationOrError.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Tag minimal intent=\"success\">\n      Loaded\n    </Tag>\n  );\n};\n\nexport const ReloadButton = ({location}: {location: string}) => {\n  return (\n    <ReloadRepositoryLocationButton\n      location={location}\n      ChildComponent={({reloading, tryReload, hasReloadPermission}) => {\n        return (\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n            <Tooltip\n              content={hasReloadPermission ? '' : NO_RELOAD_PERMISSION_TEXT}\n              canShow={!hasReloadPermission}\n              useDisabledButtonTooltipFix\n            >\n              <Button\n                icon={<Icon name=\"code_location_reload\" />}\n                disabled={!hasReloadPermission}\n                loading={reloading}\n                onClick={() => tryReload()}\n              >\n                Reload\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }}\n    />\n  );\n};\n\nconst MetadataValueButtonStyle = {\n  width: '100%',\n  display: 'block',\n  fontFamily: FontFamily.monospace,\n  fontSize: '12px',\n  color: Colors.textLight(),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CodeLocationDocsPackageTree_link__bf3EM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CopyButton_button__FudcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComponentHeader_container__JKqkl\",\"heading\":\"ComponentHeader_heading__JBvO1\",\"icon\":\"ComponentHeader_icon___9SeD\",\"headingContent\":\"ComponentHeader_headingContent__GRXA_\",\"description\":\"ComponentHeader_description__ciNaM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionHeader\":\"ComponentDetails_sectionHeader__9tkjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"CodeLocationDocsRoot_contentContainer__KyP2M\",\"sidebar\":\"CodeLocationDocsRoot_sidebar__b1D1D\",\"main\":\"CodeLocationDocsRoot_main__K4gfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"ArrayTag_tag__1xQK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer\":\"ComponentPageContents_outer___lMOD\",\"container\":\"ComponentPageContents_container__XWpLQ\",\"main\":\"ComponentPageContents_main__w_slE\",\"tableOfContents\":\"ComponentPageContents_tableOfContents__o3F1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageName\":\"CodeLocationOverviewRoot_imageName__Xqm7l\"};","import {Box, NonIdealState, PageHeader, Subtitle1, Tag} from '@dagster-io/ui-components';\nimport {useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {RepoAddress} from './types';\nimport {gql, useQuery} from '../apollo-client';\nimport {GraphExplorerRootQuery, GraphExplorerRootQueryVariables} from './types/GraphRoot.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {explodeCompositesInHandleGraph} from '../pipelines/CompositeSupport';\nimport {\n  GRAPH_EXPLORER_FRAGMENT,\n  GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT,\n  GraphExplorer,\n  GraphExplorerOptions,\n} from '../pipelines/GraphExplorer';\nimport {explorerPathFromString, explorerPathToString} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const GraphRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const params = useParams();\n\n  const path = explorerPathFromString((params as any)[0]);\n\n  // Show the name of the composite solid we are within (-1 is the selection, -2 is current parent)\n  // or the name of the pipeline tweaked to look a bit more like a graph name.\n  const title = path.opNames.length > 1 ? path.opNames[path.opNames.length - 2] : path.pipelineName;\n  useDocumentTitle(`Graph: ${title}`);\n\n  return (\n    <div style={{height: '100%', display: 'flex', flexDirection: 'column'}}>\n      <PageHeader\n        title={<Subtitle1>{title}</Subtitle1>}\n        tags={\n          <Tag icon=\"schema\">\n            Graph in <RepositoryLink repoAddress={repoAddress} />\n          </Tag>\n        }\n      />\n      <Box border=\"top\" style={{minHeight: 0, flex: 1, display: 'flex'}}>\n        <GraphExplorerRoot repoAddress={repoAddress} />\n      </Box>\n    </div>\n  );\n};\n\nconst GraphExplorerRoot = (props: Props) => {\n  const {repoAddress} = props;\n  const params = useParams();\n\n  const explorerPath = explorerPathFromString((params as any)['0']);\n  const history = useHistory();\n  const [options, setOptions] = useState<GraphExplorerOptions>({\n    explodeComposites: false,\n    preferAssetRendering: true,\n  });\n\n  const parentNames = explorerPath.opNames.slice(0, explorerPath.opNames.length - 1);\n  const graphResult = useQuery<GraphExplorerRootQuery, GraphExplorerRootQueryVariables>(\n    GRAPH_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        graphSelector: {\n          repositoryName: repoAddress?.name || '',\n          repositoryLocationName: repoAddress?.location || '',\n          graphName: explorerPath.pipelineName,\n        },\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<GraphExplorerRootQuery> queryResult={graphResult}>\n      {({graphOrError: result}) => {\n        if (result.__typename === 'GraphNotFoundError') {\n          return (\n            <NonIdealState icon=\"error\" title=\"Graph not found\" description={result.message} />\n          );\n        }\n        if (result.__typename === 'PythonError') {\n          return <NonIdealState icon=\"error\" title=\"Query Error\" description={result.message} />;\n        }\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n\n        return (\n          <GraphExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={(path, mode) => {\n              const fullPath = workspacePathFromAddress(\n                props.repoAddress,\n                `/graphs/${explorerPathToString(path)}`,\n              );\n              if (mode === 'push') {\n                history.push(fullPath);\n              } else {\n                history.replace(fullPath);\n              }\n            }}\n            container={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            isGraph={true}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst GRAPH_EXPLORER_ROOT_QUERY = gql`\n  query GraphExplorerRootQuery(\n    $graphSelector: GraphSelector\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    graphOrError(selector: $graphSelector) {\n      ... on Graph {\n        id\n        name\n        solidHandle(handleID: $rootHandleID) {\n          ...GraphExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n        ...GraphExplorerFragment\n      }\n      ... on GraphNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${GRAPH_EXPLORER_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Tag, Tooltip} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {useAutomaterializeDaemonStatus} from './useAutomaterializeDaemonStatus';\n\nexport const AutomaterializeDaemonStatusTag = () => {\n  const {paused} = useAutomaterializeDaemonStatus();\n\n  return (\n    <Tooltip\n      content={\n        paused\n          ? 'Automation condition evaluation is paused. New materializations will not be triggered by automation conditions.'\n          : ''\n      }\n      canShow={paused}\n    >\n      <Link to=\"/health\" style={{outline: 'none'}}>\n        <Tag icon={paused ? 'toggle_off' : 'toggle_on'} intent={paused ? 'warning' : 'success'}>\n          {paused ? 'Auto-materialize off' : 'Auto-materialize on'}\n        </Tag>\n      </Link>\n    </Tooltip>\n  );\n};\n","import {Box, Page, PageHeader, Subtitle1, Tabs, Tag} from '@dagster-io/ui-components';\nimport React, {useCallback, useMemo} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\nimport {AssetGlobalLineageLink} from 'shared/assets/AssetPageHeader.oss';\n\nimport {AssetsCatalogTable} from './AssetsCatalogTable';\nimport {useAutoMaterializeSensorFlag} from './AutoMaterializeSensorFlag';\nimport {AutomaterializeDaemonStatusTag} from './AutomaterializeDaemonStatusTag';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  AssetGroupMetadataQuery,\n  AssetGroupMetadataQueryVariables,\n} from './types/AssetGroupRoot.types';\nimport {useTrackPageView} from '../app/analytics';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetGraphViewType} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {AssetGroupSelector} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n} from '../pipelines/PipelinePathUtils';\nimport {TabLink} from '../ui/TabLink';\nimport {ReloadAllButton} from '../workspace/ReloadAllButton';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface AssetGroupRootParams {\n  groupName: string;\n  prefixPath: string;\n  0: string;\n}\n\nexport const AssetGroupRoot = ({\n  repoAddress,\n  tab,\n}: {\n  repoAddress: RepoAddress;\n  tab: 'lineage' | 'list';\n}) => {\n  useTrackPageView();\n\n  const {groupName, 0: path} = useParams<AssetGroupRootParams>();\n  const history = useHistory();\n\n  useDocumentTitle(`Asset Group: ${groupName}`);\n  const openInNewTab = useOpenInNewTab();\n\n  const groupPath = workspacePathFromAddress(repoAddress, `/asset-groups/${groupName}`);\n  const groupSelector = useMemo(\n    () => ({\n      groupName,\n      repositoryLocationName: repoAddress.location,\n      repositoryName: repoAddress.name,\n    }),\n    [groupName, repoAddress],\n  );\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, mode: 'push' | 'replace') => {\n      history[mode]({\n        pathname: `${groupPath}/${explorerPathToString(path)}`,\n        search: history.location.search,\n      });\n    },\n    [groupPath, history],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (e: Pick<React.MouseEvent<any>, 'metaKey'>, node: AssetLocation) => {\n      let path;\n      if (node.groupName && node.repoAddress) {\n        path = workspacePathFromAddress(\n          node.repoAddress,\n          `/asset-groups/${node.groupName}/lineage/${node.assetKey.path\n            .map(encodeURIComponent)\n            .join('/')}`,\n        );\n      } else {\n        path = assetDetailsPathForKey(node.assetKey, {view: 'definition'});\n      }\n      if (e.metaKey) {\n        openInNewTab(path);\n      } else {\n        history.push(path);\n      }\n    },\n    [history, openInNewTab],\n  );\n\n  const fetchOptions = React.useMemo(() => ({groupSelector, loading: false}), [groupSelector]);\n\n  const lineageOptions = React.useMemo(\n    () => ({preferAssetRendering: true, explodeComposites: true}),\n    [],\n  );\n\n  return (\n    <Page style={{display: 'flex', flexDirection: 'column', paddingBottom: 0}}>\n      <PageHeader\n        title={<Subtitle1>{groupName}</Subtitle1>}\n        right={<ReloadAllButton label=\"Reload definitions\" />}\n        tags={<AssetGroupTags groupSelector={groupSelector} repoAddress={repoAddress} />}\n        tabs={\n          <Box\n            flex={{direction: 'row', justifyContent: 'space-between', alignItems: 'center'}}\n            margin={{right: 4}}\n          >\n            <Tabs selectedTabId={tab}>\n              <TabLink id=\"lineage\" title=\"Lineage\" to={`${groupPath}/lineage`} />\n              <TabLink id=\"list\" title=\"List\" to={`${groupPath}/list`} />\n            </Tabs>\n            <AssetGlobalLineageLink />\n          </Box>\n        }\n      />\n      {tab === 'lineage' ? (\n        <AssetGraphExplorer\n          fetchOptions={fetchOptions}\n          options={lineageOptions}\n          explorerPath={explorerPathFromString(path || 'lineage/')}\n          onChangeExplorerPath={onChangeExplorerPath}\n          onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n          viewType={AssetGraphViewType.GROUP}\n        />\n      ) : (\n        <AssetsCatalogTable\n          groupSelector={groupSelector}\n          prefixPath={path.split('/').map(decodeURIComponent).filter(Boolean)}\n          setPrefixPath={(prefixPath) =>\n            history.push(`${groupPath}/list/${prefixPath.map(encodeURIComponent).join('/')}`)\n          }\n        />\n      )}\n    </Page>\n  );\n};\n\nexport const ASSET_GROUP_METADATA_QUERY = gql`\n  query AssetGroupMetadataQuery($selector: AssetGroupSelector!) {\n    assetNodes(group: $selector) {\n      id\n      automationCondition {\n        __typename\n      }\n    }\n  }\n`;\n\nexport const AssetGroupTags = ({\n  repoAddress,\n  groupSelector,\n}: {\n  groupSelector: AssetGroupSelector;\n  repoAddress: RepoAddress;\n}) => {\n  const automaterializeSensorsFlagState = useAutoMaterializeSensorFlag();\n  const queryResult = useQuery<AssetGroupMetadataQuery, AssetGroupMetadataQueryVariables>(\n    ASSET_GROUP_METADATA_QUERY,\n    {variables: {selector: groupSelector}},\n  );\n  const {data} = queryResult;\n\n  const sensorTag = () => {\n    const assetNodes = data?.assetNodes;\n    if (!assetNodes || assetNodes.length === 0) {\n      return null;\n    }\n\n    if (\n      automaterializeSensorsFlagState === 'has-global-amp' &&\n      assetNodes.some((a) => !!a.automationCondition)\n    ) {\n      return <AutomaterializeDaemonStatusTag />;\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      <Tag icon=\"asset_group\">\n        Asset Group in <RepositoryLink repoAddress={repoAddress} />\n      </Tag>\n      {sensorTag()}\n    </>\n  );\n};\n","import {Box, Subtitle1} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\n\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nexport const CodeLocationPageHeaderTitle = ({repoAddress}: {repoAddress: RepoAddress}) => {\n  return (\n    <Subtitle1>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        <div>\n          <Link to=\"/deployment/locations\">Code locations</Link>\n        </div>\n        <div>/</div>\n        <div>{repoAddressAsHumanString(repoAddress)}</div>\n      </Box>\n    </Subtitle1>\n  );\n};\n","import {JoinedButtons, PageHeader} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\n\nimport {CodeLocationPageHeaderTitle} from './CodeLocationPageHeaderTitle';\nimport {CodeLocationMenu} from '../workspace/CodeLocationMenu';\nimport {ReloadButton} from '../workspace/CodeLocationRowSet';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationPageHeader = ({repoAddress}: Props) => {\n  const {locationEntries, loadingNonAssets: loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n  return (\n    <PageHeader\n      title={<CodeLocationPageHeaderTitle repoAddress={repoAddress} />}\n      right={\n        loading || !locationEntry ? null : (\n          <JoinedButtons>\n            <ReloadButton location={repoAddress.location} />\n            <CodeLocationMenu locationNode={locationEntry} />\n          </JoinedButtons>\n        )\n      }\n    />\n  );\n};\n","import {gql} from '../apollo-client';\n\nexport const CODE_LOCATION_HAS_DOCS_QUERY = gql`\n  query CodeLocationHasDocsQuery($repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        hasLocationDocs\n      }\n    }\n  }\n`;\n","import {WorkspaceLocationNodeFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\n\n// Given a `RepoAddress` and a location entry, try to find the matching repository to determine\n// whether there are actual code object definitions available for this `RepoAddress`.\n// It is possible that we have an errored `locationEntry` at a dunder `RepoAddress`, in which\n// case there are no actual code objects available.\nexport const findRepositoryInLocation = (\n  locationEntry: WorkspaceLocationNodeFragment | null,\n  repoAddress: RepoAddress,\n) => {\n  if (\n    locationEntry?.__typename !== 'WorkspaceLocationEntry' ||\n    locationEntry.locationOrLoadError?.__typename !== 'RepositoryLocation'\n  ) {\n    return null;\n  }\n\n  const location = locationEntry.locationOrLoadError;\n  const matchingLocation = location.repositories.find((repo) => repo.name === repoAddress.name);\n  return matchingLocation || null;\n};\n","import {Box, Tab, Tabs, Tag} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\n\nimport {CODE_LOCATION_HAS_DOCS_QUERY} from './CodeLocationHasDocsQuery';\nimport {findRepositoryInLocation} from './findRepositoryInLocation';\nimport {useQuery} from '../apollo-client';\nimport {TabLink} from '../ui/TabLink';\nimport {WorkspaceLocationNodeFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\nimport {\n  CodeLocationHasDocsQuery,\n  CodeLocationHasDocsQueryVariables,\n} from './types/CodeLocationHasDocsQuery.types';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\n\nexport type CodeLocationTabType = 'overview' | 'docs' | 'definitions';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  selectedTab: CodeLocationTabType;\n  locationEntry: WorkspaceLocationNodeFragment | null;\n}\n\nexport const CodeLocationTabs = (props: Props) => {\n  const {repoAddress, selectedTab, locationEntry} = props;\n\n  const {data} = useQuery<CodeLocationHasDocsQuery, CodeLocationHasDocsQueryVariables>(\n    CODE_LOCATION_HAS_DOCS_QUERY,\n    {\n      variables: {\n        repositorySelector: repoAddressToSelector(repoAddress),\n      },\n      fetchPolicy: 'cache-first',\n    },\n  );\n\n  const hasDocs = useMemo(() => {\n    return (\n      data?.repositoryOrError.__typename === 'Repository' && data.repositoryOrError.hasLocationDocs\n    );\n  }, [data]);\n\n  const repository = useMemo(\n    () => findRepositoryInLocation(locationEntry, repoAddress),\n    [locationEntry, repoAddress],\n  );\n\n  return (\n    <Tabs selectedTabId={selectedTab}>\n      <TabLink id=\"overview\" title=\"Overview\" to={workspacePathFromAddress(repoAddress, '/')} />\n      {hasDocs ? (\n        <TabLink\n          id=\"docs\"\n          title={\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n              <span>Docs</span>\n              <Tag>\n                <span style={{fontWeight: 'normal'}}>Beta</span>\n              </Tag>\n            </Box>\n          }\n          to={workspacePathFromAddress(repoAddress, '/docs')}\n        />\n      ) : null}\n      {repository ? (\n        <TabLink\n          id=\"definitions\"\n          title=\"Definitions\"\n          to={workspacePathFromAddress(repoAddress, '/definitions')}\n        />\n      ) : (\n        <Tab id=\"definitions\" title=\"Definitions\" disabled />\n      )}\n    </Tabs>\n  );\n};\n","import {\n  Box,\n  Colors,\n  Icon,\n  IconName,\n  MiddleTruncate,\n  NonIdealState,\n  TextInput,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {ChangeEvent, ReactNode, useCallback, useRef, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {Container, HeaderCell, HeaderRow, Inner, Row} from '../ui/VirtualizedTable';\n\nconst ROW_HEIGHT = 44;\n\ninterface Props<T> {\n  items: T[];\n  placeholder: string;\n  nameFilter: (item: T, searchValue: string) => boolean;\n  renderRow: (item: T) => ReactNode;\n}\n\nexport const CodeLocationSearchableList = <T,>(props: Props<T>) => {\n  const {items, placeholder, nameFilter, renderRow} = props;\n\n  const [searchValue, setSearchValue] = useState('');\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const trimmedValue = searchValue.trim().toLowerCase();\n  const filteredItems = items.filter((item) => nameFilter(item, trimmedValue));\n\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: filteredItems.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => ROW_HEIGHT,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  return (\n    <Box flex={{direction: 'column'}} style={{overflow: 'hidden'}}>\n      <Box padding={{vertical: 8, horizontal: 24}}>\n        <TextInput\n          value={searchValue}\n          onChange={onChange}\n          placeholder={placeholder}\n          style={{width: '300px'}}\n          icon=\"search\"\n        />\n      </Box>\n      <div style={{flex: 1, overflow: 'hidden'}}>\n        <Container ref={containerRef}>\n          <HeaderRow templateColumns=\"1fr\" sticky>\n            <HeaderCell>Name</HeaderCell>\n          </HeaderRow>\n          {virtualItems.length > 0 ? (\n            <Inner $totalHeight={totalHeight}>\n              {virtualItems.map(({index, key, size, start}) => {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                const item = filteredItems[index]!;\n                return (\n                  <Row key={key} $height={size} $start={start}>\n                    {renderRow(item)}\n                  </Row>\n                );\n              })}\n            </Inner>\n          ) : (\n            <Box flex={{direction: 'row', justifyContent: 'center'}} padding={{top: 32}}>\n              <NonIdealState\n                icon=\"search\"\n                title=\"No matching results\"\n                description={\n                  <>\n                    No matching results for query <strong>{searchValue}</strong> found in this code\n                    location.\n                  </>\n                }\n              />\n            </Box>\n          )}\n        </Container>\n      </div>\n    </Box>\n  );\n};\n\ninterface SearchableListRowProps {\n  iconName: IconName;\n  label: string;\n  path: string;\n}\n\nexport const SearchableListRow = ({iconName, label, path}: SearchableListRowProps) => {\n  return (\n    <Box\n      padding={{horizontal: 24}}\n      border=\"bottom\"\n      flex={{direction: 'column', justifyContent: 'center', alignItems: 'flex-start'}}\n      style={{height: ROW_HEIGHT, overflow: 'hidden'}}\n    >\n      <ListLink to={path} style={{width: '100%', overflow: 'hidden'}}>\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          <Icon name={iconName} color={Colors.linkDefault()} />\n          <div style={{flex: 1, overflow: 'hidden'}}>\n            <MiddleTruncate text={label} />\n          </div>\n        </Box>\n      </ListLink>\n    </Box>\n  );\n};\n\nconst ListLink = styled(Link)`\n  :active,\n  :focus {\n    outline: none;\n  }\n`;\n","import {useMemo} from 'react';\n\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetKeyInput} from '../graphql/types';\n\nconst useSanitizedAssetSearch = (searchValue: string) => {\n  return useMemo(() => {\n    return (searchValue || '')\n      .replace(/(( ?> ?)|\\.|\\/)/g, '/')\n      .toLowerCase()\n      .trim();\n  }, [searchValue]);\n};\n\nexport const useAssetSearch = <A extends {key: AssetKeyInput} | {assetKey: AssetKeyInput}>(\n  searchValue: string,\n  assets: A[],\n): A[] => {\n  const sanitizedSearch = useSanitizedAssetSearch(searchValue);\n\n  return useMemo(() => {\n    // If there is no search value, match everything.\n    if (!sanitizedSearch) {\n      return assets;\n    }\n    return assets.filter((a) =>\n      tokenForAssetKey('assetKey' in a ? a.assetKey : a.key)\n        .toLowerCase()\n        .includes(sanitizedSearch),\n    );\n  }, [assets, sanitizedSearch]);\n};\n","import {gql} from '../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {ASSET_TABLE_DEFINITION_FRAGMENT} from '../assets/AssetTableFragment';\n\nexport const REPO_ASSET_TABLE_FRAGMENT = gql`\n  fragment RepoAssetTableFragment on AssetNode {\n    id\n    assetKey {\n      path\n    }\n    groupName\n    ...AssetTableDefinitionFragment\n  }\n\n  ${ASSET_TABLE_DEFINITION_FRAGMENT}\n`;\n\nexport const WORKSPACE_ASSETS_QUERY = gql`\n  query WorkspaceAssetsQuery($selector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $selector) {\n      ... on Repository {\n        id\n        name\n        assetNodes {\n          id\n          ...RepoAssetTableFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${REPO_ASSET_TABLE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {useCallback, useContext, useMemo} from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nconst validateExpandedKeys = (parsed: unknown) => (Array.isArray(parsed) ? parsed : []);\n/**\n * Use localStorage to persist the expanded/collapsed visual state of rows.\n */\nexport const usePersistedExpansionState = (storageKey: string) => {\n  const {basePath} = useContext(AppContext);\n  const [expandedKeys, setExpandedKeys] = useStateWithStorage<string[]>(\n    `${basePath}:dagster.${storageKey}`,\n    validateExpandedKeys,\n  );\n\n  const onToggle = useCallback(\n    (key: string) => {\n      setExpandedKeys((current) => {\n        const nextExpandedKeys = new Set(current || []);\n        if (nextExpandedKeys.has(key)) {\n          nextExpandedKeys.delete(key);\n        } else {\n          nextExpandedKeys.add(key);\n        }\n        return Array.from(nextExpandedKeys);\n      });\n    },\n    [setExpandedKeys],\n  );\n\n  return useMemo(\n    () => ({\n      expandedKeys,\n      onToggle,\n    }),\n    [expandedKeys, onToggle],\n  );\n};\n","import {useMemo} from 'react';\n\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {RepoAddress} from './types';\nimport {RepoAssetTableFragment} from './types/WorkspaceAssetsQuery.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {usePersistedExpansionState} from '../ui/usePersistedExpansionState';\n\ntype Asset = RepoAssetTableFragment;\n\ntype RowType =\n  | {type: 'group'; name: string; assetCount: number}\n  | {type: 'asset'; id: string; definition: Asset};\n\nconst UNGROUPED_NAME = 'UNGROUPED';\nconst ASSET_GROUPS_EXPANSION_STATE_STORAGE_KEY = 'assets-virtualized-expansion-state';\n\ntype Config = {\n  repoAddress: RepoAddress;\n  assets: Asset[];\n};\n\nexport const useFlattenedGroupedAssetList = ({repoAddress, assets}: Config) => {\n  const repoKey = repoAddressAsHumanString(repoAddress);\n  const {expandedKeys, onToggle} = usePersistedExpansionState(\n    `${repoKey}-${ASSET_GROUPS_EXPANSION_STATE_STORAGE_KEY}`,\n  );\n\n  const grouped: Record<string, Asset[]> = useMemo(() => {\n    const groups: Record<string, Asset[]> = {};\n    for (const asset of assets) {\n      const groupName = asset.groupName || UNGROUPED_NAME;\n      if (!groups[groupName]) {\n        groups[groupName] = [];\n      }\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      groups[groupName]!.push(asset);\n    }\n\n    Object.values(groups).forEach((group) => {\n      group.sort((a, b) =>\n        COMMON_COLLATOR.compare(\n          displayNameForAssetKey(a.assetKey),\n          displayNameForAssetKey(b.assetKey),\n        ),\n      );\n    });\n\n    return groups;\n  }, [assets]);\n\n  const flattened: RowType[] = useMemo(() => {\n    const flat: RowType[] = [];\n    Object.entries(grouped)\n      .sort(([aName], [bName]) => COMMON_COLLATOR.compare(aName, bName))\n      .forEach(([groupName, assetsForGroup]) => {\n        flat.push({type: 'group', name: groupName, assetCount: assetsForGroup.length});\n        if (expandedKeys.includes(groupName)) {\n          assetsForGroup.forEach((asset) => {\n            flat.push({type: 'asset', id: asset.id, definition: asset});\n          });\n        }\n      });\n    return flat;\n  }, [grouped, expandedKeys]);\n\n  return {flattened, expandedKeys: new Set(expandedKeys), onToggle};\n};\n","import {\n  Box,\n  Colors,\n  Icon,\n  IconWrapper,\n  NonIdealState,\n  SpinnerWithText,\n  Tag,\n  TextInput,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport {ChangeEvent, useCallback, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {SearchableListRow} from './CodeLocationSearchableList';\nimport {useQuery} from '../apollo-client';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useAssetSearch} from '../assets/useAssetSearch';\nimport {Container, HeaderCell, HeaderRow, Inner, Row} from '../ui/VirtualizedTable';\nimport {WORKSPACE_ASSETS_QUERY} from '../workspace/WorkspaceAssetsQuery';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {\n  WorkspaceAssetsQuery,\n  WorkspaceAssetsQueryVariables,\n} from '../workspace/types/WorkspaceAssetsQuery.types';\nimport {useFlattenedGroupedAssetList} from '../workspace/useFlattenedGroupedAssetList';\n\nconst UNGROUPED_NAME = 'UNGROUPED';\nconst ROW_HEIGHT = 44;\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationAssetsList = ({repoAddress}: Props) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const repoName = repoAddressAsHumanString(repoAddress);\n  const selector = repoAddressToSelector(repoAddress);\n  const queryResultOverview = useQuery<WorkspaceAssetsQuery, WorkspaceAssetsQueryVariables>(\n    WORKSPACE_ASSETS_QUERY,\n    {\n      variables: {selector},\n    },\n  );\n  const {data, loading} = queryResultOverview;\n\n  const assetNodes = useMemo(() => {\n    if (data?.repositoryOrError.__typename === 'Repository') {\n      return data.repositoryOrError.assetNodes;\n    }\n    return [];\n  }, [data]);\n\n  const filteredBySearch = useAssetSearch(searchValue, assetNodes);\n  const {flattened, expandedKeys, onToggle} = useFlattenedGroupedAssetList({\n    repoAddress,\n    assets: filteredBySearch,\n  });\n\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  }, []);\n\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: flattened.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => ROW_HEIGHT,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  const content = () => {\n    if (loading && !data) {\n      return (\n        <Box flex={{direction: 'row', justifyContent: 'center'}} padding={32}>\n          <SpinnerWithText label=\"Loading assets…\" />\n        </Box>\n      );\n    }\n\n    if (!filteredBySearch.length) {\n      if (searchValue.trim().length > 0) {\n        return (\n          <Box padding={{top: 20}}>\n            <NonIdealState\n              icon=\"search\"\n              title=\"No matching assets\"\n              description={\n                <div>\n                  No assets matching <strong>{searchValue}</strong> were found in {repoName}\n                </div>\n              }\n            />\n          </Box>\n        );\n      }\n\n      return (\n        <Box padding={{top: 20}}>\n          <NonIdealState\n            icon=\"search\"\n            title=\"No assets\"\n            description={`No assets were found in ${repoName}`}\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Container ref={containerRef}>\n        <HeaderRow templateColumns=\"1fr\" sticky>\n          <HeaderCell>Name</HeaderCell>\n        </HeaderRow>\n        <Inner $totalHeight={totalHeight}>\n          {virtualItems.map(({index, key, size, start}) => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const item = flattened[index]!;\n            if (item.type === 'group') {\n              return (\n                <GroupNameRow\n                  key={key}\n                  height={size}\n                  start={start}\n                  expanded={expandedKeys.has(item.name)}\n                  groupName={item.name}\n                  assetCount={item.assetCount}\n                  onToggle={onToggle}\n                />\n              );\n            }\n\n            const {path} = item.definition.assetKey;\n            return (\n              <Row key={key} $height={size} $start={start}>\n                <SearchableListRow\n                  iconName=\"asset\"\n                  label={displayNameForAssetKey({path})}\n                  path={assetDetailsPathForKey({path})}\n                />\n              </Row>\n            );\n          })}\n        </Inner>\n      </Container>\n    );\n  };\n\n  return (\n    <Box flex={{direction: 'column'}} style={{overflow: 'hidden'}}>\n      <Box padding={{vertical: 8, horizontal: 24}}>\n        <TextInput\n          value={searchValue}\n          onChange={onChange}\n          placeholder=\"Search assets by key…\"\n          style={{width: '300px'}}\n          icon=\"search\"\n        />\n      </Box>\n      <div style={{flex: 1, overflow: 'hidden'}}>{content()}</div>\n    </Box>\n  );\n};\n\ninterface GroupNameRowProps {\n  groupName: string;\n  assetCount: number;\n  expanded: boolean;\n  height: number;\n  start: number;\n  onToggle: (groupName: string) => void;\n}\n\nconst GroupNameRow = (props: GroupNameRowProps) => {\n  const {groupName, assetCount, expanded, height, start, onToggle} = props;\n  return (\n    <ClickableRow\n      $height={height}\n      $start={start}\n      onClick={() => onToggle(groupName)}\n      $open={expanded}\n      tabIndex={0}\n      onKeyDown={(e) => {\n        if (e.code === 'Space' || e.code === 'Enter') {\n          e.preventDefault();\n          onToggle(groupName);\n        }\n      }}\n    >\n      <Box\n        background={Colors.backgroundLight()}\n        flex={{direction: 'row', alignItems: 'center', gap: 8, justifyContent: 'space-between'}}\n        padding={{horizontal: 24}}\n        border=\"bottom\"\n        style={{height: '100%'}}\n      >\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          <Icon name=\"asset_group\" />\n          {groupName === UNGROUPED_NAME ? (\n            <div>Ungrouped assets</div>\n          ) : (\n            <strong>{groupName}</strong>\n          )}\n        </Box>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <Tag>{assetCount === 1 ? '1 asset' : `${assetCount} assets`}</Tag>\n          <Icon name=\"arrow_drop_down\" size={20} />\n        </Box>\n      </Box>\n    </ClickableRow>\n  );\n};\n\nconst ClickableRow = styled(Row)<{$open: boolean}>`\n  cursor: pointer;\n\n  :focus,\n  :active {\n    outline: none;\n  }\n\n  ${IconWrapper}[aria-label=\"arrow_drop_down\"] {\n    transition: transform 100ms linear;\n    ${({$open}) => ($open ? null : `transform: rotate(-90deg);`)}\n  }\n`;\n","import {gql} from '../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\n\nconst REPOSITORY_GRAPHS_FRAGMENT = gql`\n  fragment RepositoryGraphsFragment on Repository {\n    id\n    usedSolids {\n      definition {\n        ... on CompositeSolidDefinition {\n          id\n          name\n          description\n        }\n      }\n      invocations {\n        pipeline {\n          id\n          name\n        }\n        solidHandle {\n          handleID\n        }\n      }\n    }\n    pipelines {\n      id\n      name\n      isJob\n      graphName\n    }\n  }\n`;\n\nexport const WORSKPACE_GRAPHS_QUERY = gql`\n  query WorkspaceGraphsQuery($selector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $selector) {\n      ... on Repository {\n        id\n        ...RepositoryGraphsFragment\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${REPOSITORY_GRAPHS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {RepositoryGraphsFragment} from './types/WorkspaceGraphsQuery.types';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\n\ntype Graph = {name: string; path: string; description: string | null};\n\nexport const extractGraphsForRepo = (repo: RepositoryGraphsFragment) => {\n  const jobGraphNames = new Set<string>(\n    repo.pipelines.filter((p) => p.isJob && !isHiddenAssetGroupJob(p.name)).map((p) => p.graphName),\n  );\n\n  const items: Graph[] = Array.from(jobGraphNames).map((graphName) => ({\n    name: graphName,\n    path: `/graphs/${graphName}`,\n    description: null,\n  }));\n\n  repo.usedSolids.forEach((s) => {\n    if (s.definition.__typename === 'CompositeSolidDefinition') {\n      const invocation = s.invocations[0];\n      if (invocation) {\n        items.push({\n          name: s.definition.name,\n          path: `/graphs/${invocation.pipeline.name}/${invocation.solidHandle.handleID}/`,\n          description: s.definition.description,\n        });\n      }\n    }\n  });\n\n  return items.sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name));\n};\n","import {Box, NonIdealState, SpinnerWithText} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\n\nimport {CodeLocationSearchableList, SearchableListRow} from './CodeLocationSearchableList';\nimport {useQuery} from '../apollo-client';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {WORSKPACE_GRAPHS_QUERY} from '../workspace/WorkspaceGraphsQuery';\nimport {extractGraphsForRepo} from '../workspace/extractGraphsForRepo';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {\n  WorkspaceGraphsQuery,\n  WorkspaceGraphsQueryVariables,\n} from '../workspace/types/WorkspaceGraphsQuery.types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationGraphsList = (props: Props) => {\n  const {repoAddress} = props;\n\n  const selector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<WorkspaceGraphsQuery, WorkspaceGraphsQueryVariables>(\n    WORSKPACE_GRAPHS_QUERY,\n    {variables: {selector}},\n  );\n\n  const {data, loading} = queryResult;\n\n  const graphs = useMemo(() => {\n    const repo = data?.repositoryOrError;\n    if (!repo || repo.__typename !== 'Repository') {\n      return [];\n    }\n\n    return extractGraphsForRepo(repo);\n  }, [data]);\n\n  const repoString = repoAddressAsHumanString(repoAddress);\n\n  if (loading) {\n    return (\n      <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n        <SpinnerWithText label=\"Loading graphs…\" />\n      </Box>\n    );\n  }\n\n  if (!data || !data.repositoryOrError) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"graph\"\n          title=\"An unexpected error occurred\"\n          description={`An error occurred while loading graphs for ${repoString}`}\n        />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'PythonError') {\n    return (\n      <Box padding={64}>\n        <PythonErrorInfo error={data.repositoryOrError} />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'RepositoryNotFoundError') {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"Repository not found\"\n          description={`The repository ${repoString} could not be found in this workspace.`}\n        />\n      </Box>\n    );\n  }\n\n  if (!graphs.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"graph\"\n          title=\"No graphs found\"\n          description={`The repository ${repoString} does not contain any graphs.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={graphs}\n      placeholder=\"Search graphs by name…\"\n      nameFilter={(graph, value) => graph.name.toLowerCase().includes(value)}\n      renderRow={(graph) => (\n        <SearchableListRow\n          iconName=\"graph\"\n          label={graph.name}\n          path={workspacePathFromAddress(repoAddress, graph.path)}\n        />\n      )}\n    />\n  );\n};\n","import {Box} from '@dagster-io/ui-components';\nimport styled from 'styled-components';\n\nimport {gql} from '../apollo-client';\nimport {OpCardSolidDefinitionFragment} from './types/OpCard.types';\nimport {OP_NODE_DEFINITION_FRAGMENT, OpNode} from '../graph/OpNode';\nimport {layoutOp} from '../graph/asyncGraphLayout';\n\ninterface OpCardProps {\n  definition: OpCardSolidDefinitionFragment;\n}\n\nexport const OpCard = (props: OpCardProps) => {\n  const {name, inputDefinitions, outputDefinitions} = props.definition;\n  const layout = layoutOp(\n    {\n      name,\n      inputs: inputDefinitions.map((d) => ({\n        definition: d,\n        dependsOn: [],\n      })),\n      outputs: outputDefinitions.map((d) => ({\n        definition: d,\n        dependedBy: [],\n      })),\n      definition: {\n        description: null,\n        assetNodes: [],\n      },\n    },\n    {x: 0, y: 0},\n  );\n\n  return (\n    <Box padding={24}>\n      <OpCardContainer style={{height: layout.bounds.height}}>\n        <OpNode\n          invocation={undefined}\n          definition={props.definition}\n          minified={false}\n          onClick={() => {}}\n          onDoubleClick={() => {}}\n          onEnterComposite={() => {}}\n          onHighlightEdges={() => {}}\n          layout={layout}\n          selected={false}\n          focused={false}\n          highlightedEdges={[]}\n          dim={false}\n        />\n      </OpCardContainer>\n    </Box>\n  );\n};\n\nexport const OP_CARD_SOLID_DEFINITION_FRAGMENT = gql`\n  fragment OpCardSolidDefinitionFragment on ISolidDefinition {\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    inputDefinitions {\n      name\n    }\n    outputDefinitions {\n      name\n    }\n    ...OpNodeDefinitionFragment\n  }\n\n  ${OP_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst OpCardContainer = styled.div`\n  flex: 1;\n  max-width: 450px;\n  position: relative;\n`;\n","import styled from 'styled-components';\n\nimport {OP_CARD_SOLID_DEFINITION_FRAGMENT, OpCard} from './OpCard';\nimport {gql, useQuery} from '../apollo-client';\nimport {UsedSolidDetailsQuery, UsedSolidDetailsQueryVariables} from './types/OpDetailsRoot.types';\nimport {\n  SIDEBAR_OP_DEFINITION_FRAGMENT,\n  SidebarOpDefinition,\n} from '../pipelines/SidebarOpDefinition';\nimport {SidebarOpInvocationInfo} from '../pipelines/SidebarOpHelpers';\nimport {Loading} from '../ui/Loading';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface UsedSolidDetailsProps {\n  name: string;\n  onClickInvocation: (arg: SidebarOpInvocationInfo) => void;\n  repoAddress: RepoAddress;\n}\n\nexport const UsedSolidDetails = (props: UsedSolidDetailsProps) => {\n  const {name, onClickInvocation, repoAddress} = props;\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<UsedSolidDetailsQuery, UsedSolidDetailsQueryVariables>(\n    USED_SOLID_DETAILS_QUERY,\n    {\n      variables: {\n        name,\n        repositorySelector,\n      },\n    },\n  );\n\n  return (\n    <Loading queryResult={queryResult}>\n      {({repositoryOrError}) => {\n        if (!(repositoryOrError?.__typename === 'Repository' && repositoryOrError.usedSolid)) {\n          return null;\n        }\n        const usedSolid = repositoryOrError.usedSolid;\n        return (\n          <>\n            <OpCard definition={usedSolid.definition} />\n            <SidebarOpDefinition\n              definition={usedSolid.definition}\n              showingSubgraph={false}\n              onClickInvocation={onClickInvocation}\n              getInvocations={() => {\n                return usedSolid.invocations.map((i) => ({\n                  handleID: i.solidHandle.handleID,\n                  pipelineName: i.pipeline.name,\n                }));\n              }}\n            />\n          </>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst USED_SOLID_DETAILS_QUERY = gql`\n  query UsedSolidDetailsQuery($name: String!, $repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        usedSolid(name: $name) {\n          definition {\n            ...OpCardSolidDefinitionFragment\n            ...SidebarOpDefinitionFragment\n          }\n          invocations {\n            pipeline {\n              id\n              name\n            }\n            solidHandle {\n              handleID\n            }\n          }\n        }\n      }\n    }\n  }\n\n  ${OP_CARD_SOLID_DEFINITION_FRAGMENT}\n  ${SIDEBAR_OP_DEFINITION_FRAGMENT}\n`;\n\nexport const OpDetailScrollContainer = styled.div`\n  overflow-y: scroll;\n  flex: 1;\n`;\n","import {\n  Box,\n  Colors,\n  MiddleTruncate,\n  NonIdealState,\n  SplitPanelContainer,\n  SuggestionProvider,\n  TokenizingField,\n  TokenizingFieldValue,\n  stringFromValue,\n  tokenizedValuesFromString,\n} from '@dagster-io/ui-components';\nimport {useVirtualizer} from '@tanstack/react-virtual';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {useMemo, useRef} from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {OpDetailScrollContainer, UsedSolidDetails} from './OpDetailsRoot';\nimport {OP_TYPE_SIGNATURE_FRAGMENT} from './OpTypeSignature';\nimport {gql, useQuery} from '../apollo-client';\nimport {OpsRootQuery, OpsRootQueryVariables, OpsRootUsedSolidFragment} from './types/OpsRoot.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {useTrackPageView} from '../app/analytics';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {Loading} from '../ui/Loading';\nimport {Container, Inner, Row} from '../ui/VirtualizedTable';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nfunction flatUniq(arrs: string[][]) {\n  const results: {[key: string]: boolean} = {};\n  for (const arr of arrs) {\n    for (const item of arr) {\n      results[item] = true;\n    }\n  }\n  return Object.keys(results).sort((a, b) => a.localeCompare(b));\n}\n\ntype Solid = OpsRootUsedSolidFragment;\n\nfunction searchSuggestionsForOps(solids: Solid[]): SuggestionProvider[] {\n  return [\n    {\n      token: 'name',\n      values: () => solids.map((s) => s.definition.name),\n    },\n    {\n      token: 'job',\n      values: () =>\n        flatUniq(\n          solids.map((s) =>\n            s.invocations.filter((i) => !i.pipeline.isJob).map((i) => i.pipeline.name),\n          ),\n        ),\n    },\n    {\n      token: 'pipeline',\n      values: () =>\n        flatUniq(\n          solids.map((s) =>\n            s.invocations.filter((i) => i.pipeline.isJob).map((i) => i.pipeline.name),\n          ),\n        ),\n    },\n    {\n      token: 'input',\n      values: () =>\n        flatUniq(solids.map((s) => s.definition.inputDefinitions.map((d) => d.type.displayName))),\n    },\n    {\n      token: 'output',\n      values: () =>\n        flatUniq(solids.map((s) => s.definition.outputDefinitions.map((d) => d.type.displayName))),\n    },\n  ];\n}\n\nfunction filterSolidsWithSearch(solids: Solid[], search: TokenizingFieldValue[]) {\n  return solids.filter((s) => {\n    for (const item of search) {\n      if (\n        (item.token === 'name' || item.token === undefined) &&\n        !s.definition.name.startsWith(item.value)\n      ) {\n        return false;\n      }\n      if (\n        (item.token === 'pipeline' || item.token === 'job') &&\n        !s.invocations.some((i) => i.pipeline.name === item.value)\n      ) {\n        return false;\n      }\n      if (\n        item.token === 'input' &&\n        !s.definition.inputDefinitions.some((i) => i.type.displayName.startsWith(item.value))\n      ) {\n        return false;\n      }\n      if (\n        item.token === 'output' &&\n        !s.definition.outputDefinitions.some((i) => i.type.displayName.startsWith(item.value))\n      ) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const OpsRoot = (props: Props) => {\n  useTrackPageView();\n  useDocumentTitle('Ops');\n\n  const {name} = useParams<{name?: string}>();\n  const {repoAddress} = props;\n\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<OpsRootQuery, OpsRootQueryVariables>(OPS_ROOT_QUERY, {\n    variables: {repositorySelector},\n  });\n\n  return (\n    <div style={{flex: 1, minHeight: 0}}>\n      <Loading queryResult={queryResult}>\n        {({repositoryOrError}) => {\n          if (repositoryOrError?.__typename === 'Repository' && repositoryOrError.usedSolids) {\n            return (\n              <OpsRootWithData\n                {...props}\n                name={name}\n                repoAddress={repoAddress}\n                usedSolids={repositoryOrError.usedSolids}\n              />\n            );\n          }\n          return null;\n        }}\n      </Loading>\n    </div>\n  );\n};\n\ninterface OpsRootWithDataProps extends Props {\n  name?: string;\n  usedSolids: Solid[];\n}\n\nexport const OpsRootWithData = (props: OpsRootWithDataProps) => {\n  const {name, repoAddress, usedSolids} = props;\n  const history = useHistory();\n  const location = useLocation();\n\n  const {q, typeExplorer} = qs.parse(location.search, {ignoreQueryPrefix: true});\n  const suggestions = searchSuggestionsForOps(usedSolids);\n  const search = tokenizedValuesFromString((q as string) || '', suggestions);\n  const filtered = filterSolidsWithSearch(usedSolids, search);\n\n  const sorted = useMemo(() => {\n    return [...filtered].sort((a, b) =>\n      COMMON_COLLATOR.compare(a.definition.name, b.definition.name),\n    );\n  }, [filtered]);\n\n  const selected = usedSolids.find((s) => s.definition.name === name);\n\n  const onSearch = (search: TokenizingFieldValue[]) => {\n    history.replace({\n      search: `?${qs.stringify({q: stringFromValue(search)})}`,\n    });\n  };\n\n  const onClickOp = (defName: string) => {\n    history.replace(workspacePathFromAddress(repoAddress, `/ops/${defName}?${qs.stringify({q})}`));\n  };\n\n  React.useEffect(() => {\n    // If the user has typed in a search that brings us to a single result, autoselect it\n    if (sorted.length === 1 && (!selected || sorted[0] !== selected)) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      onClickOp(sorted[0]!.definition.name);\n    }\n\n    // If the user has clicked a type, translate it into a search\n    if (typeof typeExplorer === 'string') {\n      onSearch([...search, {token: 'input', value: typeExplorer}]);\n    }\n  });\n\n  const onClickInvocation: React.ComponentProps<typeof UsedSolidDetails>['onClickInvocation'] =\n    React.useCallback(\n      ({pipelineName, handleID}) => {\n        history.push(\n          workspacePathFromAddress(\n            repoAddress,\n            `/pipeline_or_job/${pipelineName}/${handleID.split('.').join('/')}`,\n          ),\n        );\n      },\n      [history, repoAddress],\n    );\n\n  return (\n    <div style={{height: '100%', display: 'flex'}}>\n      <SplitPanelContainer\n        identifier=\"ops\"\n        firstInitialPercent={40}\n        firstMinSize={448}\n        first={\n          <OpListColumnContainer>\n            <Box padding={{vertical: 12, horizontal: 24}} border=\"bottom\">\n              <TokenizingField\n                values={search}\n                onChange={(search) => onSearch(search)}\n                suggestionProviders={suggestions}\n                placeholder=\"Filter by name or input/output type...\"\n              />\n            </Box>\n            <div style={{flex: 1, overflow: 'hidden'}}>\n              <OpList selected={selected} onClickOp={onClickOp} items={sorted} />\n            </div>\n          </OpListColumnContainer>\n        }\n        second={\n          selected ? (\n            <OpDetailScrollContainer>\n              <UsedSolidDetails\n                name={selected.definition.name}\n                onClickInvocation={onClickInvocation}\n                repoAddress={repoAddress}\n              />\n            </OpDetailScrollContainer>\n          ) : (\n            <Box padding={{vertical: 64}}>\n              <NonIdealState\n                icon=\"no-results\"\n                title=\"No op selected\"\n                description=\"Select an op to see its definition and invocations\"\n              />\n            </Box>\n          )\n        }\n      />\n    </div>\n  );\n};\n\ninterface OpListProps {\n  items: Solid[];\n  selected: Solid | undefined;\n  onClickOp: (name: string) => void;\n}\n\nconst OpList = (props: OpListProps) => {\n  const {items, selected} = props;\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rowVirtualizer = useVirtualizer({\n    count: items.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => 42,\n    overscan: 10,\n  });\n\n  const totalHeight = rowVirtualizer.getTotalSize();\n  const virtualItems = rowVirtualizer.getVirtualItems();\n\n  const selectedIndex = selected ? items.findIndex((item) => item === selected) : undefined;\n\n  return (\n    <Container ref={containerRef}>\n      <Inner $totalHeight={totalHeight}>\n        {virtualItems.map(({index, size, start}) => {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          const solid = items[index]!;\n          return (\n            <Row key={solid.definition.name} $height={size} $start={start}>\n              <OpListItem\n                $selected={selectedIndex === index}\n                onClick={() => props.onClickOp(solid.definition.name)}\n              >\n                <MiddleTruncate text={solid.definition.name} />\n              </OpListItem>\n            </Row>\n          );\n        })}\n      </Inner>\n    </Container>\n  );\n};\n\nexport const OPS_ROOT_QUERY = gql`\n  query OpsRootQuery($repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        usedSolids {\n          ...OpsRootUsedSolid\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment OpsRootUsedSolid on UsedSolid {\n    definition {\n      name\n      ...OpTypeSignatureFragment\n    }\n    invocations {\n      pipeline {\n        id\n        isJob\n        name\n      }\n    }\n  }\n\n  ${OP_TYPE_SIGNATURE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst OpListItem = styled.div<{$selected: boolean}>`\n  background: ${({$selected}) =>\n    $selected ? Colors.backgroundLight() : Colors.backgroundDefault()};\n  box-shadow:\n    ${({$selected}) => ($selected ? Colors.accentBlue() : 'transparent')} 4px 0 0 inset,\n    ${Colors.keylineDefault()} 0 -1px 0 inset;\n  color: ${({$selected}) => ($selected ? Colors.textDefault() : Colors.textLight())};\n  cursor: pointer;\n  font-size: 14px;\n  gap: 8px;\n  padding: 12px 24px;\n  user-select: none;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst OpListColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n","import {Box, NonIdealState, SpinnerWithText} from '@dagster-io/ui-components';\nimport {useParams} from 'react-router-dom';\n\nimport {useQuery} from '../apollo-client';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {OPS_ROOT_QUERY, OpsRootWithData} from '../ops/OpsRoot';\nimport {OpsRootQuery, OpsRootQueryVariables} from '../ops/types/OpsRoot.types';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationOpsView = ({repoAddress}: Props) => {\n  const {name} = useParams<{name?: string}>();\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const queryResult = useQuery<OpsRootQuery, OpsRootQueryVariables>(OPS_ROOT_QUERY, {\n    variables: {repositorySelector},\n  });\n\n  const {data, loading} = queryResult;\n\n  const repoString = repoAddressAsHumanString(repoAddress);\n\n  if (loading) {\n    return (\n      <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n        <SpinnerWithText label=\"Loading ops…\" />\n      </Box>\n    );\n  }\n\n  if (!data || !data.repositoryOrError) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"An unexpected error occurred\"\n          description={`An error occurred while loading ops for ${repoString}`}\n        />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'PythonError') {\n    return (\n      <Box padding={64}>\n        <PythonErrorInfo error={data.repositoryOrError} />\n      </Box>\n    );\n  }\n\n  if (data.repositoryOrError.__typename === 'RepositoryNotFoundError') {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"Repository not found\"\n          description={`The repository ${repoString} could not be found in this workspace.`}\n        />\n      </Box>\n    );\n  }\n\n  const {repositoryOrError} = data;\n  const {usedSolids} = repositoryOrError;\n\n  if (!usedSolids.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"op\"\n          title=\"No ops found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any ops.`}\n        />\n      </Box>\n    );\n  }\n\n  return <OpsRootWithData name={name} repoAddress={repoAddress} usedSolids={usedSolids} />;\n};\n","import {Box, NonIdealState} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\nimport {Switch} from 'react-router-dom';\n\nimport {CodeLocationAssetsList} from './CodeLocationAssetsList';\nimport {CodeLocationGraphsList} from './CodeLocationGraphsList';\nimport {CodeLocationOpsView} from './CodeLocationOpsView';\nimport {CodeLocationSearchableList, SearchableListRow} from './CodeLocationSearchableList';\nimport {Route} from '../app/Route';\nimport {COMMON_COLLATOR} from '../app/Util';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {WorkspaceRepositoryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  repository: WorkspaceRepositoryFragment;\n}\n\nexport const CodeLocationDefinitionsMain = ({repoAddress, repository}: Props) => {\n  return (\n    <Box flex={{direction: 'column', alignItems: 'stretch'}} style={{flex: 1, overflow: 'hidden'}}>\n      <Switch>\n        <Route path=\"/locations/:repoPath/assets\">\n          <CodeLocationAssetsList repoAddress={repoAddress} />\n        </Route>\n        <Route path=\"/locations/:repoPath/jobs\">\n          <CodeLocationJobsList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/sensors\">\n          <CodeLocationSensorsList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/schedules\">\n          <CodeLocationSchedulesList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/resources\">\n          <CodeLocationResourcesList repoAddress={repoAddress} repository={repository} />\n        </Route>\n        <Route path=\"/locations/:repoPath/graphs\">\n          <CodeLocationGraphsList repoAddress={repoAddress} />\n        </Route>\n        <Route path=\"/locations/:repoPath/ops/:name?\">\n          <CodeLocationOpsView repoAddress={repoAddress} />\n        </Route>\n      </Switch>\n    </Box>\n  );\n};\n\nconst CodeLocationJobsList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const jobs = useMemo(\n    () =>\n      repository.pipelines\n        .filter(({name}) => !isHiddenAssetGroupJob(name))\n        .sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name)),\n    [repository],\n  );\n\n  if (!jobs.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"job\"\n          title=\"No jobs found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any jobs.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={jobs}\n      placeholder=\"Search jobs by name…\"\n      nameFilter={(job, value) => job.name.toLowerCase().includes(value)}\n      renderRow={(job) => (\n        <SearchableListRow\n          iconName=\"job\"\n          label={job.name}\n          path={workspacePathFromAddress(repoAddress, `/jobs/${job.name}`)}\n        />\n      )}\n    />\n  );\n};\n\nconst CodeLocationSensorsList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const sensors = useMemo(\n    () => [...repository.sensors].sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name)),\n    [repository],\n  );\n\n  if (!sensors.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"sensors\"\n          title=\"No sensors found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any sensors.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={sensors}\n      placeholder=\"Search sensors by name…\"\n      nameFilter={(sensor, value) => sensor.name.toLowerCase().includes(value)}\n      renderRow={(sensor) => (\n        <SearchableListRow\n          iconName=\"sensors\"\n          label={sensor.name}\n          path={workspacePathFromAddress(repoAddress, `/sensors/${sensor.name}`)}\n        />\n      )}\n    />\n  );\n};\n\nconst CodeLocationSchedulesList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const schedules = useMemo(\n    () => [...repository.schedules].sort((a, b) => COMMON_COLLATOR.compare(a.name, b.name)),\n    [repository],\n  );\n\n  if (!schedules.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"schedule\"\n          title=\"No schedules found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any schedules.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={schedules}\n      placeholder=\"Search schedules by name…\"\n      nameFilter={(schedule, value) => schedule.name.toLowerCase().includes(value)}\n      renderRow={(schedule) => (\n        <SearchableListRow\n          iconName=\"schedule\"\n          label={schedule.name}\n          path={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}\n        />\n      )}\n    />\n  );\n};\n\nconst CodeLocationResourcesList = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const resources = useMemo(\n    () =>\n      [...repository.allTopLevelResourceDetails].sort((a, b) =>\n        COMMON_COLLATOR.compare(a.name, b.name),\n      ),\n    [repository],\n  );\n\n  if (!resources.length) {\n    return (\n      <Box padding={64}>\n        <NonIdealState\n          icon=\"resource\"\n          title=\"No resources found\"\n          description={`The repository ${repoAddressAsHumanString(\n            repoAddress,\n          )} does not contain any resources.`}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <CodeLocationSearchableList\n      items={resources}\n      placeholder=\"Search resources by name…\"\n      nameFilter={(resource, value) => resource.name.toLowerCase().includes(value)}\n      renderRow={(resource) => (\n        <SearchableListRow\n          iconName=\"resource\"\n          label={resource.name}\n          path={workspacePathFromAddress(repoAddress, `/resources/${resource.name}`)}\n        />\n      )}\n    />\n  );\n};\n","import {Box, Colors, IconWrapper, Tooltip, UnstyledButton} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport styled, {css} from 'styled-components';\n\ninterface SideNavItemInterface {\n  key: string;\n  icon: React.ReactNode;\n  label: React.ReactNode;\n  disabled?: boolean;\n  rightElement?: React.ReactNode;\n  tooltip?: string;\n  onClick?: () => void;\n}\n\nexport interface SideNavItemLinkConfig extends SideNavItemInterface {\n  type: 'link';\n  path: string;\n}\n\nexport interface SideNavItemButtonConfig extends SideNavItemInterface {\n  type: 'button';\n  onClick: () => void;\n}\n\nexport type SideNavItemConfig = SideNavItemLinkConfig | SideNavItemButtonConfig;\n\ninterface Props {\n  active?: boolean;\n  item: SideNavItemConfig;\n}\n\nexport const SideNavItem = (props: Props) => {\n  const {active = false, item} = props;\n  const {type, icon, label, rightElement, tooltip = '', disabled = false} = item;\n  const content = (\n    <Box\n      padding={{vertical: 4, left: 12, right: 8}}\n      flex={{direction: 'row', gap: 8, alignItems: 'center', justifyContent: 'space-between'}}\n    >\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}} className=\"iconAndLabel\">\n        {icon}\n        {label}\n      </Box>\n      <div>{rightElement}</div>\n    </Box>\n  );\n\n  if (type === 'link' && !disabled) {\n    return (\n      <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n        <StyledSideNavLink to={item.path} $active={active}>\n          {content}\n        </StyledSideNavLink>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Tooltip canShow={!!tooltip} content={tooltip} placement=\"right\" display=\"block\">\n      <StyledSideNavButton $active={active} disabled={disabled} onClick={item.onClick}>\n        {content}\n      </StyledSideNavButton>\n    </Tooltip>\n  );\n};\n\nconst sharedSideNavItemStyle = css<{$active: boolean}>`\n  background-color: ${({$active}) => ($active ? Colors.backgroundBlue() : 'transparent')};\n  border-radius: 8px;\n  color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n  display: block;\n  font-size: 14px;\n  line-height: 20px;\n  text-decoration: none;\n  transition: 100ms background-color linear;\n  user-select: none;\n  width: 100%;\n\n  :focus {\n    outline: none;\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLight()};\n  }\n\n  :hover,\n  :active {\n    background-color: ${({$active}) =>\n      $active ? Colors.backgroundBlue() : Colors.backgroundLightHover()};\n    color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    text-decoration: none;\n  }\n\n  .iconAndLabel {\n    ${IconWrapper} {\n      background-color: ${({$active}) => ($active ? Colors.textBlue() : Colors.textDefault())};\n    }\n  }\n`;\n\nconst StyledSideNavLink = styled(Link)<{$active: boolean}>`\n  ${sharedSideNavItemStyle}\n`;\n\nconst StyledSideNavButton = styled(UnstyledButton)<{$active: boolean}>`\n  ${sharedSideNavItemStyle}\n`;\n","import {Box, Icon, Tag} from '@dagster-io/ui-components';\nimport {useLocation} from 'react-router-dom';\n\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {SideNavItem, SideNavItemConfig} from '../ui/SideNavItem';\nimport {numberFormatter} from '../ui/formatters';\nimport {WorkspaceRepositoryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  repository: WorkspaceRepositoryFragment;\n}\n\nexport const CodeLocationDefinitionsNav = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const {pathname} = useLocation();\n  const assetGroupCount = repository.assetGroups.length;\n  const jobCount = repository.pipelines.filter(({name}) => !isHiddenAssetGroupJob(name)).length;\n  const scheduleCount = repository.schedules.length;\n  const sensorCount = repository.sensors.length;\n  const resourceCount = repository.allTopLevelResourceDetails.length;\n\n  const items: SideNavItemConfig[] = [\n    {\n      key: 'assets',\n      type: 'link',\n      icon: <Icon name=\"asset\" />,\n      label: 'Assets',\n      path: workspacePathFromAddress(repoAddress, '/assets'),\n      rightElement: assetGroupCount ? (\n        <Tag icon=\"asset_group\">{numberFormatter.format(assetGroupCount)}</Tag>\n      ) : null,\n    },\n    {\n      key: 'jobs',\n      type: 'link',\n      icon: <Icon name=\"job\" />,\n      label: 'Jobs',\n      path: workspacePathFromAddress(repoAddress, '/jobs'),\n      rightElement: jobCount ? <Tag>{numberFormatter.format(jobCount)}</Tag> : null,\n    },\n    {\n      key: 'sensors',\n      type: 'link',\n      icon: <Icon name=\"sensors\" />,\n      label: 'Sensors',\n      path: workspacePathFromAddress(repoAddress, '/sensors'),\n      rightElement: sensorCount ? <Tag>{numberFormatter.format(sensorCount)}</Tag> : null,\n    },\n    {\n      key: 'schedules',\n      type: 'link',\n      icon: <Icon name=\"schedule\" />,\n      label: 'Schedules',\n      path: workspacePathFromAddress(repoAddress, '/schedules'),\n      rightElement: scheduleCount ? <Tag>{numberFormatter.format(scheduleCount)}</Tag> : null,\n    },\n    {\n      key: 'resources',\n      type: 'link',\n      icon: <Icon name=\"resource\" />,\n      label: 'Resources',\n      path: workspacePathFromAddress(repoAddress, '/resources'),\n      rightElement: resourceCount ? <Tag>{numberFormatter.format(resourceCount)}</Tag> : null,\n    },\n    {\n      key: 'graphs',\n      type: 'link',\n      icon: <Icon name=\"graph\" />,\n      label: 'Graphs',\n      path: workspacePathFromAddress(repoAddress, '/graphs'),\n    },\n    {\n      key: 'ops',\n      type: 'link',\n      icon: <Icon name=\"op\" />,\n      label: 'Ops',\n      path: workspacePathFromAddress(repoAddress, '/ops'),\n    },\n  ];\n\n  return (\n    <>\n      <Box padding={{bottom: 12}}>\n        {items.map((item) => {\n          return (\n            <SideNavItem\n              key={item.key}\n              item={item}\n              active={item.type === 'link' && pathname === item.path}\n            />\n          );\n        })}\n      </Box>\n    </>\n  );\n};\n","import {Box} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {CodeLocationPageHeader} from 'shared/code-location/CodeLocationPageHeader.oss';\nimport {CodeLocationTabs} from 'shared/code-location/CodeLocationTabs.oss';\n\nimport {CodeLocationDefinitionsMain} from './CodeLocationDefinitionsMain';\nimport {CodeLocationDefinitionsNav} from './CodeLocationDefinitionsNav';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {WorkspaceRepositoryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  repository: WorkspaceRepositoryFragment;\n}\n\nexport const CodeLocationDefinitionsRoot = (props: Props) => {\n  const {repoAddress, repository} = props;\n  const {locationEntries, loadingNonAssets: loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n\n  if (!locationEntry) {\n    if (!loading) {\n      return <Redirect to=\"/deployment/locations\" />;\n    }\n    return <div />;\n  }\n\n  return (\n    <Box style={{height: '100%', overflow: 'hidden'}} flex={{direction: 'column'}}>\n      <CodeLocationPageHeader repoAddress={repoAddress} />\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <CodeLocationTabs\n          selectedTab=\"definitions\"\n          repoAddress={repoAddress}\n          locationEntry={locationEntry}\n        />\n      </Box>\n      <Box style={{overflow: 'hidden'}} flex={{direction: 'row', grow: 1}}>\n        <Box\n          style={{flex: '0 0 292px', overflowY: 'auto'}}\n          padding={{vertical: 16, horizontal: 12}}\n          border=\"right\"\n        >\n          <CodeLocationDefinitionsNav repoAddress={repoAddress} repository={repository} />\n        </Box>\n        <Box\n          flex={{direction: 'column', alignItems: 'stretch'}}\n          style={{flex: 1, overflow: 'hidden'}}\n        >\n          <CodeLocationDefinitionsMain repoAddress={repoAddress} repository={repository} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","'use client';\n\nimport {useState} from 'react';\n\nimport styles from './css/CopyButton.module.css';\n\ninterface Props {\n  content: string;\n}\n\nexport default function CopyButton({content}: Props) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopied(true);\n      setTimeout(() => {\n        setCopied(false);\n      }, 2000);\n    } catch (e) {\n      console.error('Failed to copy text:', e);\n    }\n  };\n\n  const icon = copied ? (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.49967 13.5L3.99967 10L2.83301 11.1667L7.49967 15.8334L17.4997 5.83335L16.333 4.66669L7.49967 13.5Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ) : (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M7.5 15C7.04167 15 6.64931 14.8368 6.32292 14.5104C5.99653 14.184 5.83333 13.7917 5.83333 13.3334V3.33335C5.83333 2.87502 5.99653 2.48266 6.32292 2.15627C6.64931 1.82988 7.04167 1.66669 7.5 1.66669H15C15.4583 1.66669 15.8507 1.82988 16.1771 2.15627C16.5035 2.48266 16.6667 2.87502 16.6667 3.33335V13.3334C16.6667 13.7917 16.5035 14.184 16.1771 14.5104C15.8507 14.8368 15.4583 15 15 15H7.5ZM7.5 13.3334H15V3.33335H7.5V13.3334ZM4.16667 18.3334C3.70833 18.3334 3.31597 18.1702 2.98958 17.8438C2.66319 17.5174 2.5 17.125 2.5 16.6667V5.00002H4.16667V16.6667H13.3333V18.3334H4.16667Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n\n  return (\n    <button className={styles.button} onClick={handleCopy}>\n      {icon}\n    </button>\n  );\n}\n","import hljs from 'highlight.js/lib/core';\nimport hljsYaml from 'highlight.js/lib/languages/yaml';\n\nimport CopyButton from './CopyButton';\nimport styles from './css/ComponentExample.module.css';\n\nimport './css/yaml.css';\n\nhljs.registerLanguage('yaml', hljsYaml);\n\ninterface Props {\n  yaml: string;\n}\n\nexport default function ComponentExample({yaml}: Props) {\n  const highlightedYaml = hljs.highlight(yaml, {language: 'yaml'}).value;\n  return (\n    <div className={styles.container}>\n      <pre dangerouslySetInnerHTML={{__html: highlightedYaml}} className={styles.code} />\n      <div className={styles.buttonContainer}>\n        <CopyButton content={yaml} />\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n\nimport styles from './css/ComponentTags.module.css';\n\nexport default function ComponentTags({owners, tags}: {owners: string[]; tags: string[]}) {\n  return (\n    <div className={styles.tags}>\n      {owners.map((owner) => (\n        <div key={owner} className={clsx(styles.tag, styles.authorTag)}>\n         owner: {owner}\n        </div>\n      ))}\n      {tags.map((tag) => (\n        <div key={tag} className={styles.tag}>\n          tag: {tag}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import {HTMLProps, useMemo} from 'react';\nimport Markdown, {Components} from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {remark} from 'remark';\nimport styles from './css/ComponentHeader.module.css';\nimport strip from 'strip-markdown';\n\nimport ComponentTags from './ComponentTags';\nimport {ComponentType} from './types';\n\ninterface Props {\n  config: ComponentType;\n  descriptionStyle: 'truncated' | 'full';\n}\n\nexport default function ComponentHeader({config, descriptionStyle}: Props) {\n  const {description, name} = config;\n\n  // For truncated display, use only the first text block in the description.\n  const displayedDescription = useMemo(\n    () =>\n      descriptionStyle === 'truncated'\n        ? (markdownToPlaintext(description || '')\n            .split('\\n\\n')\n            .find((str) => str.trim().length > 0) ?? '')\n        : description,\n    [descriptionStyle, description],\n  );\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.heading}>\n        <svg\n          className={styles.icon}\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M9.16667 16.1875V10.4791L4.16667 7.58329V13.2916L9.16667 16.1875ZM10.8333 16.1875L15.8333 13.2916V7.58329L10.8333 10.4791V16.1875ZM10 9.04163L14.9375 6.18746L10 3.33329L5.0625 6.18746L10 9.04163ZM3.33333 14.75C3.06944 14.5972 2.86458 14.3958 2.71875 14.1458C2.57292 13.8958 2.5 13.618 2.5 13.3125V6.68746C2.5 6.3819 2.57292 6.10413 2.71875 5.85413C2.86458 5.60413 3.06944 5.40274 3.33333 5.24996L9.16667 1.89579C9.43056 1.74301 9.70833 1.66663 10 1.66663C10.2917 1.66663 10.5694 1.74301 10.8333 1.89579L16.6667 5.24996C16.9306 5.40274 17.1354 5.60413 17.2812 5.85413C17.4271 6.10413 17.5 6.3819 17.5 6.68746V13.3125C17.5 13.618 17.4271 13.8958 17.2812 14.1458C17.1354 14.3958 16.9306 14.5972 16.6667 14.75L10.8333 18.1041C10.5694 18.2569 10.2917 18.3333 10 18.3333C9.70833 18.3333 9.43056 18.2569 9.16667 18.1041L3.33333 14.75Z\"\n            fill=\"currentColor\"\n          />\n        </svg>\n        <div className={styles.headingContent}>\n          <h1>{name}</h1>\n          <div className={styles.description}>\n            <Markdown\n              remarkPlugins={[remarkGfm]}\n              components={descriptionStyle === 'truncated' ? componentsMinusLinks : undefined}\n            >\n              {displayedDescription}\n            </Markdown>\n          </div>\n        </div>\n      </div>\n      {config.tags && config.tags.length > 0 ? (\n        <ComponentTags owners={config.owners} tags={config.tags} />\n      ) : null}\n    </div>\n  );\n}\n\nconst componentsMinusLinks: Components = {\n  a: ({children}: HTMLProps<HTMLAnchorElement>) => <span>{children}</span>,\n};\n\nconst Remark = remark().use(strip);\n\nexport const markdownToPlaintext = (md: string) => {\n  return Remark.processSync(md).toString().replace(/\\\\/g, '').trim();\n};\n","import CopyButton from './CopyButton';\nimport styles from './css/ComponentScaffolding.module.css';\n\nexport default function ComponentScaffolding({componentName}: {componentName: string}) {\n  const command = `dg scaffold defs ${componentName} {component_name}`;\n  return (\n    <div className={styles.container}>\n      <div>\n        Use the scaffolding command to generate the necessary files and configuration for your\n        component.\n      </div>\n      <div className={styles.commandContainer}>\n        <pre>{command}</pre>\n        <div className={styles.buttonContainer}>\n          <CopyButton content={command} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {JSONSchema7, JSONSchema7Definition} from 'json-schema';\n\nimport styles from './css/ArrayTag.module.css';\n\ninterface Props {\n  items: JSONSchema7['items'];\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}\n\nexport default function ArrayTag({items, defs}: Props) {\n  const itemName = getItemName(items, defs);\n  return <div className={styles.tag}>Array&lt;{itemName}&gt;</div>;\n}\n\nfunction getItemName(\n  items: JSONSchema7['items'],\n  defs: Record<string, JSONSchema7Definition> | undefined,\n): string {\n  if (items === undefined) {\n    return 'undefined';\n  }\n\n  if (items === true) {\n    return 'true';\n  }\n\n  if (items === false) {\n    return 'false';\n  }\n\n  if (Array.isArray(items)) {\n    return items\n      .map((item) => getItemName(item, defs))\n      .flat()\n      .join(' | ');\n  }\n\n  if (items.$ref) {\n    const refName = items.$ref.split('/').pop();\n    if (refName) {\n      return refName;\n    }\n    return 'unknown';\n  }\n\n  const type = items.type;\n  if (type && typeof type === 'string') {\n    return type;\n  }\n\n  return 'Array';\n}\n","import clsx from 'clsx';\nimport {JSONSchema7TypeName} from 'json-schema';\n\nimport styles from './css/TypeTag.module.css';\n\nconst basicTypes = new Set<JSONSchema7TypeName>([\n  'string',\n  'number',\n  'boolean',\n  'object',\n  'array',\n  'null',\n]);\n\ninterface Props {\n  name: string;\n}\n\nexport default function TypeTag({name}: Props) {\n  return (\n    <span\n      className={clsx(\n        styles.tag,\n        !basicTypes.has(name as JSONSchema7TypeName) ? styles.objectType : null,\n      )}\n    >\n      {name}\n    </span>\n  );\n}\n","'use client';\n\nimport clsx from 'clsx';\nimport {JSONSchema7, JSONSchema7Definition, JSONSchema7TypeName} from 'json-schema';\nimport {useState} from 'react';\n\nimport styles from './css/ComponentSchema.module.css';\nimport ArrayTag from './schema/ArrayTag';\nimport TypeTag from './schema/TypeTag';\n\ninterface Props {\n  schema: string;\n}\n\nexport default function ComponentSchema({schema}: Props) {\n  let json;\n  try {\n    json = JSON.parse(schema);\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (!json) {\n    return <div>Invalid schema</div>;\n  }\n\n  const jsonSchema: JSONSchema7 = json;\n  return <SchemaRoot schema={jsonSchema} defs={jsonSchema.$defs} />;\n}\n\nfunction SchemaRoot({\n  schema,\n  defs,\n}: {\n  schema: JSONSchema7;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  const title = schema.title;\n  const properties = schema.properties ?? {};\n\n  return (\n    <div className={styles.schemaContainer}>\n      {title ? <div className={styles.schemaTitle}>{title}</div> : null}\n      {Object.entries(properties).map(([key, property]) => (\n        <Property key={key} name={key} property={property} defs={defs} />\n      ))}\n    </div>\n  );\n}\n\nfunction Property({\n  name,\n  property,\n  defs,\n}: {\n  name: string;\n  property: JSONSchema7Definition;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  const onToggleExpansion = () => {\n    setExpanded((current) => !current);\n  };\n\n  if (property === true || property === false) {\n    return null;\n  }\n\n  const {anyOf, type, description, $ref, required, examples} = property;\n\n  const expandable = isExpandableProperty(property);\n\n  const firstExample = examples ? (Array.isArray(examples) ? examples[0] : examples) : null;\n\n  const defaultValue =\n    property.default && property.default !== '__DAGSTER_UNSET_DEFAULT__' ? property.default : null;\n\n  return (\n    <div className={styles.propertyContainer}>\n      <button\n        disabled={!expandable}\n        className={clsx(styles.expandButton, expanded && styles.expanded)}\n        onClick={onToggleExpansion}\n      >\n        <div className={styles.property}>\n          <div className={styles.propertyNameAndTypes}>\n            <div className={styles.propertyName}>{name}</div>\n            {$ref ? <PropertyRef $ref={$ref} defs={defs} /> : null}\n            {type ? <PropertyType property={property} defs={defs} /> : null}\n            {anyOf ? <PropertyAnyOf anyOf={anyOf} defs={defs} /> : null}\n            {required ? <div className={styles.required}>required</div> : null}\n          </div>\n          {expandable ? (\n            <div className={styles.chevronContainer}>\n              <Chevron />\n            </div>\n          ) : null}\n        </div>\n        {description || defaultValue || examples ? (\n          <div className={styles.propertyDescriptionContainer}>\n            <div className={styles.propertyDescription}>{description}</div>\n            {defaultValue ? (\n              <div className={styles.propertyDefault}>\n                default:{' '}\n                <div className={styles.propertyDefaultValue}>{JSON.stringify(defaultValue)}</div>\n              </div>\n            ) : null}\n            {firstExample ? (\n              <div className={styles.propertyExamples}>\n                example:{' '}\n                <div className={styles.propertyExamplesValue}>{JSON.stringify(firstExample)}</div>\n              </div>\n            ) : null}\n          </div>\n        ) : null}\n      </button>\n      {expanded ? (\n        <div className={styles.expansionContainer}>\n          <ExpandedRoot property={property} defs={defs} />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction isExpandableProperty(property: JSONSchema7): boolean {\n  const {type, anyOf, $ref} = property;\n\n  if ($ref) {\n    return true;\n  }\n\n  if (type === 'array') {\n    const {items} = property;\n    if (items === undefined || items === true || items === false) {\n      return false;\n    }\n\n    if (Array.isArray(items)) {\n      return items\n        .filter((item): item is JSONSchema7 => filterSchema(item))\n        .some((item) => isExpandableProperty(item));\n    }\n\n    return isExpandableProperty(items);\n  }\n\n  if (anyOf) {\n    return anyOf\n      .filter((item): item is JSONSchema7 => filterSchema(item))\n      .some((item) => isExpandableProperty(item));\n  }\n\n  return false;\n}\n\nfunction filterSchema(property: JSONSchema7Definition) {\n  return property !== undefined && property !== true && property !== false;\n}\n\nfunction ExpandedRoot({\n  property,\n  defs,\n}: {\n  property: JSONSchema7Definition;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  if (property === true || property === false || !property) {\n    return null;\n  }\n\n  const {properties, anyOf, $ref, type} = property;\n\n  if (properties) {\n    return (\n      <div className={styles.expansion}>\n        <SchemaRoot schema={property} defs={defs} />\n      </div>\n    );\n  }\n\n  if (type === 'array') {\n    const items = Array.isArray(property.items)\n      ? property.items\n      : property.items\n        ? [property.items]\n        : [];\n\n    return (\n      <div className={styles.expansion}>\n        {items\n          .filter((item) => typeof item !== 'boolean' && typeof item !== 'undefined')\n          .map((item, ii) => {\n            return <ExpandedRoot key={ii} property={item} defs={defs} />;\n          })}\n      </div>\n    );\n  }\n\n  if (anyOf) {\n    return (\n      <div className={styles.expansion}>\n        {anyOf\n          .filter((item) => typeof item !== 'boolean' && typeof item !== 'undefined')\n          .map((item, ii) => {\n            return <ExpandedRoot key={ii} property={item} defs={defs} />;\n          })}\n      </div>\n    );\n  }\n\n  if ($ref) {\n    const refName = $ref.split('/').pop();\n    if (refName) {\n      const definition = defs?.[refName];\n      if (typeof definition !== 'boolean' && typeof definition !== 'undefined') {\n        return (\n          <div className={styles.expansion}>\n            <SchemaRoot schema={definition} defs={defs} />\n          </div>\n        );\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction propertyTypeToString(typeName: JSONSchema7TypeName) {\n  switch (typeName) {\n    case 'object':\n      return 'object';\n    case 'array':\n      return 'array';\n    case 'string':\n      return 'string';\n    case 'number':\n      return 'number';\n    case 'integer':\n      return 'integer';\n    case 'boolean':\n      return 'boolean';\n    case 'null':\n      return 'null';\n    default:\n      return typeName;\n  }\n}\n\nfunction PropertyRef({\n  $ref,\n  defs,\n}: {\n  $ref: string;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  const refName = $ref.split('/').pop();\n  if (refName) {\n    const definition = defs?.[refName];\n    if (definition) {\n      return <PropertyType title={refName} property={definition} defs={defs} />;\n    }\n  }\n  return null;\n}\n\nfunction PropertyType({\n  title,\n  property,\n  defs,\n}: {\n  title?: string;\n  property: JSONSchema7Definition;\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  if (property === true || property === false) {\n    return <TypeTag name={String(property)} />;\n  }\n\n  if (!property) {\n    return null;\n  }\n\n  const type = property.type;\n  if (Array.isArray(type)) {\n    const items = Array.isArray(type) ? type : type === undefined ? [] : [type];\n    return (\n      <div>\n        {items.map((item) => (\n          <TypeTag key={item} name={propertyTypeToString(item)} />\n        ))}\n      </div>\n    );\n  }\n\n  if (type === 'array') {\n    return (\n      <div>\n        <ArrayTag items={property.items} defs={defs} />\n      </div>\n    );\n  }\n\n  const ref = property.$ref;\n  if (ref) {\n    const refName = ref.split('/').pop();\n    if (refName) {\n      const definition = defs?.[refName];\n      if (definition !== undefined) {\n        return <PropertyType title={refName} property={definition} defs={defs} />;\n      }\n    }\n    return null;\n  }\n\n  if (title) {\n    return <TypeTag name={title} />;\n  }\n\n  switch (type) {\n    case 'object':\n      return <TypeTag name={propertyTypeToString(type)} />;\n    case 'string':\n    case 'number':\n    case 'boolean':\n    case 'integer':\n    case 'null':\n      return <TypeTag name={propertyTypeToString(type)} />;\n    default:\n      return <div>none</div>;\n  }\n}\n\nfunction PropertyAnyOf({\n  anyOf,\n  defs,\n}: {\n  anyOf: JSONSchema7['anyOf'];\n  defs: Record<string, JSONSchema7Definition> | undefined;\n}) {\n  return (\n    <div className={styles.anyOf}>\n      <div className={styles.anyOfLabel}>Any of:</div>\n      {(anyOf ?? []).map((definition, ii) => {\n        return <PropertyType key={ii} property={definition} defs={defs} />;\n      })}\n    </div>\n  );\n}\n\nconst Chevron = () => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={styles.chevron}\n  >\n    <path\n      d=\"M6.175 7.15837L5 8.33337L10 13.3334L15 8.33337L13.825 7.15837L10 10.975L6.175 7.15837Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import styles from './css/ComponentDetails.module.css';\n\nimport ComponentExample from './ComponentExample';\nimport ComponentHeader from './ComponentHeader';\nimport ComponentScaffolding from './ComponentScaffolding';\nimport ComponentSchema from './ComponentSchema';\nimport {ComponentType} from './types';\n\ninterface Props {\n  config: ComponentType;\n}\n\nexport default function ComponentDetails({config}: Props) {\n  return (\n    <div>\n      <ComponentHeader config={config} descriptionStyle=\"full\" />\n      <div className={styles.sectionHeader} id=\"scaffolding\">\n        <h2>Scaffolding</h2>\n        <a href=\"#scaffolding\">#</a>\n      </div>\n      <ComponentScaffolding componentName={config.name} />\n      <div className={styles.sectionHeader} id=\"schema\">\n        <h2>Schema</h2>\n        <a href=\"#schema\">#</a>\n      </div>\n      <ComponentSchema schema={config.schema} />\n      <div className={styles.sectionHeader} id=\"example\">\n        <h2>\n          Example <code>defs.yaml</code>\n        </h2>\n        <a href=\"#example\">#</a>\n      </div>\n      <ComponentExample yaml={config.example} />\n    </div>\n  );\n}\n","import ComponentDetails from './ComponentDetails';\nimport {ComponentType} from './types';\n\nimport styles from './css/ComponentPageContents.module.css';\n\ninterface Props {\n  componentConfig: ComponentType;\n}\nexport default function ComponentPageContents({componentConfig}: Props) {\n  return (\n    <div className={styles.outer}>\n      <div className={styles.container}>\n        <div className={styles.main}>\n          <ComponentDetails config={componentConfig} />\n        </div>\n      </div>\n      <div className={styles.tableOfContents}>\n        <ol>\n          <li>\n            <a href=\"#scaffolding\">Scaffolding</a>\n          </li>\n          <li>\n            <a href=\"#schema\">Schema</a>\n          </li>\n          <li>\n            <a href=\"#example\">\n              Example <code>defs.yaml</code>\n            </a>\n          </li>\n        </ol>\n      </div>\n    </div>\n  );\n}\n","import {HTMLProps, ReactNode} from 'react';\nimport {Contents} from './types';\nimport ComponentHeader from './ComponentHeader';\nimport styles from './css/ListView.module.css';\n\ninterface Props {\n  contents: Contents | null;\n  loading: boolean;\n  renderLink: (props: HTMLProps<HTMLAnchorElement>) => ReactNode;\n}\n\nexport default function ListView({contents, renderLink, loading}: Props) {\n  if (loading) {\n    return <div className={styles.emptyState}>Loading…</div>;\n  }\n\n  if (!contents) {\n    return <div className={styles.emptyState}>No components found.</div>;\n  }\n\n  const allComponents = contents\n    .map((pkg) => {\n      return pkg.componentTypes.map((component) => ({\n        component,\n        packageName: pkg.name,\n      }));\n    })\n    .flat();\n\n  return (\n    <div className={styles.container}>\n      {allComponents.map(({component, packageName}) =>\n        renderLink({\n          key: component.name,\n          href: `/packages/${packageName}/${component.name}`,\n          className: styles.componentItem,\n          children: <ComponentHeader config={component} descriptionStyle=\"truncated\" />,\n        }),\n      )}\n    </div>\n  );\n}\n","'use client';\n\nimport {Fragment, ReactNode} from 'react';\n\nimport styles from './css/PackageDetails.module.css';\n\nimport ComponentHeader from './ComponentHeader';\nimport {DocsLinkProps, Package} from './types';\n\ninterface Props {\n  pkg: Package;\n  renderLink: (props: DocsLinkProps) => ReactNode;\n}\n\nexport default function PackageDetails({pkg, renderLink}: Props) {\n  return (\n    <div className={styles.container}>\n      {pkg.componentTypes.map((component) => (\n        <Fragment key={component.name}>\n          {renderLink({\n            key: component.name,\n            href: `/packages/${pkg.name}/${component.name}`,\n            className: styles.componentItem,\n            children: <ComponentHeader config={component} descriptionStyle=\"truncated\" />,\n          })}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n","'use client';\n\nimport {DocsLinkProps, Package} from './types';\nimport PackageDetails from './PackageDetails';\nimport styles from './css/PackagePageDetails.module.css';\nimport {ReactNode} from 'react';\n\nexport default function PackagePageDetails({\n  pkg,\n  renderLink,\n}: {\n  pkg: Package;\n  renderLink: (props: DocsLinkProps) => ReactNode;\n}) {\n  return (\n    <div className={styles.container}>\n      <PackageDetails pkg={pkg} renderLink={renderLink} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport {Fragment, HTMLProps, ReactNode, useLayoutEffect, useState} from 'react';\n\nimport styles from './css/PackageTree.module.css';\n\nimport {Contents} from './types';\n\nfunction extractFromPathname(pathname: string) {\n  const [selectedPkg, selectedComponent] = pathname.split('/').slice(2);\n  return {selectedPkg, selectedComponent};\n}\ninterface Props {\n  contents: Contents | null;\n  loading?: boolean;\n  pathname: string;\n  renderLink: (props: HTMLProps<HTMLAnchorElement>) => ReactNode;\n}\n\nexport default function PackageTree({contents, loading, pathname, renderLink}: Props) {\n  const {selectedPkg, selectedComponent} = extractFromPathname(pathname);\n  const [expandedPkgs, setExpandedPkgs] = useState<Set<string>>(\n    () => new Set(selectedPkg ? [selectedPkg] : []),\n  );\n\n  useLayoutEffect(() => {\n    setExpandedPkgs((current) => {\n      const {selectedPkg} = extractFromPathname(pathname);\n      const copy = new Set(current);\n      if (selectedPkg) {\n        copy.add(selectedPkg);\n      }\n      return copy;\n    });\n  }, [pathname]);\n\n  const [search, setSearch] = useState('');\n\n  const onTogglePkg = (pkg: string) => {\n    setExpandedPkgs((prev) => {\n      const copy = new Set(prev);\n      if (copy.has(pkg)) {\n        copy.delete(pkg);\n      } else {\n        copy.add(pkg);\n      }\n      return copy;\n    });\n  };\n\n  const listContent = () => {\n    if (contents === null && loading) {\n      return <div className={styles.loading}>Loading…</div>;\n    }\n\n    return (\n      <>\n        {contents?.map((pkg) => (\n          <div key={pkg.name}>\n            <div className={styles.pkgItem}>\n              <button\n                className={clsx(\n                  styles.expandButton,\n                  expandedPkgs.has(pkg.name) ? styles.expanded : null,\n                )}\n                onClick={() => onTogglePkg(pkg.name)}\n              >\n                <svg\n                  className={styles.chevron}\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M5.83301 8.33337L9.99967 12.5L14.1663 8.33337H5.83301Z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              </button>\n              {renderLink({\n                key: pkg.name,\n                href: `/packages/${pkg.name}`,\n                className: clsx(\n                  styles.pkgLink,\n                  expandedPkgs.has(pkg.name) ? styles.expanded : null,\n                  selectedPkg === pkg.name && !selectedComponent ? styles.selected : null,\n                ),\n                children: (\n                  <>\n                    <TempFolderIcon />\n                    <div className={styles.pkgName}>{pkg.name}</div>\n                  </>\n                ),\n              })}\n            </div>\n            {expandedPkgs.has(pkg.name) ? (\n              <div className={styles.componentList}>\n                {pkg.componentTypes.map((componentType) => {\n                  const isSelected =\n                    selectedPkg === pkg.name && selectedComponent === componentType.name;\n                  return (\n                    <Fragment key={componentType.name}>\n                      {renderLink({\n                        key: componentType.name,\n                        href: `/packages/${pkg.name}/${componentType.name}`,\n                        className: clsx(styles.componentLink, isSelected ? styles.selected : null),\n                        children: (\n                          <>\n                            <TempIcon />\n                            <span className={styles.componentName}>{componentType.name}</span>\n                          </>\n                        ),\n                      })}\n                    </Fragment>\n                  );\n                })}\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.searchOuter}>\n        <div className={styles.searchContainer}>\n          <svg\n            className={styles.icon}\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12.9167 11.6667H12.2583L12.025 11.4417C12.8699 10.4617 13.3343 9.21058 13.3333 7.91667C13.3333 6.84535 13.0157 5.7981 12.4205 4.90733C11.8253 4.01656 10.9793 3.3223 9.98954 2.91232C8.99977 2.50235 7.91066 2.39508 6.85993 2.60408C5.8092 2.81309 4.84404 3.32897 4.08651 4.08651C3.32897 4.84404 2.81309 5.8092 2.60408 6.85993C2.39508 7.91066 2.50235 8.99977 2.91232 9.98954C3.3223 10.9793 4.01656 11.8253 4.90733 12.4205C5.7981 13.0157 6.84535 13.3333 7.91667 13.3333C9.25834 13.3333 10.4917 12.8417 11.4417 12.025L11.6667 12.2583V12.9167L15.8333 17.075L17.075 15.8333L12.9167 11.6667ZM7.91667 11.6667C5.84167 11.6667 4.16667 9.99167 4.16667 7.91667C4.16667 5.84167 5.84167 4.16667 7.91667 4.16667C9.99167 4.16667 11.6667 5.84167 11.6667 7.91667C11.6667 9.99167 9.99167 11.6667 7.91667 11.6667Z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n          <input\n            type=\"text\"\n            placeholder=\"Jump to…\"\n            value={search}\n            className={styles.search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className={styles.treeContainer}>{listContent()}</div>\n    </div>\n  );\n}\n\nconst TempFolderIcon = () => {\n  return (\n    <svg\n      className={styles.icon}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.667 5.00004H10.0003L8.33366 3.33337H3.33366C2.41699 3.33337 1.67533 4.08337 1.67533 5.00004L1.66699 15C1.66699 15.9167 2.41699 16.6667 3.33366 16.6667H16.667C17.5837 16.6667 18.3337 15.9167 18.3337 15V6.66671C18.3337 5.75004 17.5837 5.00004 16.667 5.00004ZM16.667 15H3.33366V6.66671H16.667V15Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nconst TempIcon = () => {\n  return (\n    <svg\n      className={styles.icon}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M9.16667 16.1875V10.4791L4.16667 7.58329V13.2916L9.16667 16.1875ZM10.8333 16.1875L15.8333 13.2916V7.58329L10.8333 10.4791V16.1875ZM10 9.04163L14.9375 6.18746L10 3.33329L5.0625 6.18746L10 9.04163ZM3.33333 14.75C3.06944 14.5972 2.86458 14.3958 2.71875 14.1458C2.57292 13.8958 2.5 13.618 2.5 13.3125V6.68746C2.5 6.3819 2.57292 6.10413 2.71875 5.85413C2.86458 5.60413 3.06944 5.40274 3.33333 5.24996L9.16667 1.89579C9.43056 1.74301 9.70833 1.66663 10 1.66663C10.2917 1.66663 10.5694 1.74301 10.8333 1.89579L16.6667 5.24996C16.9306 5.40274 17.1354 5.60413 17.2812 5.85413C17.4271 6.10413 17.5 6.3819 17.5 6.68746V13.3125C17.5 13.618 17.4271 13.8958 17.2812 14.1458C17.1354 14.3958 16.9306 14.5972 16.6667 14.75L10.8333 18.1041C10.5694 18.2569 10.2917 18.3333 10 18.3333C9.70833 18.3333 9.43056 18.2569 9.16667 18.1041L3.33333 14.75Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n","import PackageTree from '@dagster-io/dg-docs-components/PackageTree';\nimport {Contents} from '@dagster-io/dg-docs-components/types';\nimport clsx from 'clsx';\nimport {Link} from 'react-router-dom';\n\nimport {repoAddressAsURLString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport styles from './css/CodeLocationDocsPackageTree.module.css';\n\ninterface Props {\n  loading?: boolean;\n  contents: Contents | null;\n  repoAddress: RepoAddress;\n  pathname: string;\n}\n\nexport const CodeLocationDocsPackageTree = ({loading, contents, repoAddress, pathname}: Props) => {\n  return (\n    <PackageTree\n      contents={contents}\n      pathname={pathname}\n      loading={loading}\n      renderLink={({key, href, children, className, ...rest}) => {\n        const url = href ? `/locations/${repoAddressAsURLString(repoAddress)}/docs${href}` : '#';\n        return (\n          <Link key={key} to={url} {...rest} className={clsx(styles.link, className)}>\n            {children}\n          </Link>\n        );\n      }}\n    />\n  );\n};\n","import {gql} from '../apollo-client';\n\nexport const CODE_LOCATION_DOCS_QUERY = gql`\n  query CodeLocationDocsQuery($repositorySelector: RepositorySelector!) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      ... on Repository {\n        id\n        locationDocsJsonOrError {\n          ... on LocationDocsJson {\n            json\n          }\n          ... on PythonError {\n            message\n          }\n        }\n      }\n    }\n  }\n`;\n","import ComponentPageContents from '@dagster-io/dg-docs-components/ComponentPageContents';\nimport ListView from '@dagster-io/dg-docs-components/ListView';\nimport PackagePageDetails from '@dagster-io/dg-docs-components/PackagePageDetails';\nimport {Contents} from '@dagster-io/dg-docs-components/types';\nimport {Box} from '@dagster-io/ui-components';\nimport {memo, useContext, useMemo} from 'react';\nimport {Link, Redirect, useParams} from 'react-router-dom';\nimport {CodeLocationPageHeader} from 'shared/code-location/CodeLocationPageHeader.oss';\nimport {CodeLocationTabs} from 'shared/code-location/CodeLocationTabs.oss';\n\nimport {useQuery} from '../apollo-client';\nimport {CodeLocationDocsPackageTree} from './CodeLocationDocsPackageTree';\nimport {CODE_LOCATION_DOCS_QUERY} from './CodeLocationDocsQuery';\nimport styles from './css/CodeLocationDocsRoot.module.css';\nimport {\n  CodeLocationDocsQuery,\n  CodeLocationDocsQueryVariables,\n} from './types/CodeLocationDocsQuery.types';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {repoAddressAsURLString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const CodeLocationDocsRoot = (props: Props) => {\n  const params = useParams<{\n    repoPath: string;\n    packageName?: string;\n    componentName?: string;\n  }>();\n\n  const {repoAddress} = props;\n  const {locationEntries, loadingNonAssets: loading} = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n\n  if (!locationEntry) {\n    if (!loading) {\n      return <Redirect to=\"/deployment/locations\" />;\n    }\n    return <div />;\n  }\n\n  return (\n    <Box flex={{direction: 'column'}} style={{height: '100%', overflow: 'hidden'}}>\n      <CodeLocationPageHeader repoAddress={repoAddress} />\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <CodeLocationTabs\n          repoAddress={repoAddress}\n          selectedTab=\"docs\"\n          locationEntry={locationEntry}\n        />\n      </Box>\n      <div className={styles.contentContainer}>\n        <QueryfulCodeLocationDocs\n          repoAddress={repoAddress}\n          packageName={params.packageName}\n          componentName={params.componentName}\n        />\n      </div>\n    </Box>\n  );\n};\n\ninterface QueryfulCodeLocationDocsProps {\n  repoAddress: RepoAddress;\n  packageName?: string;\n  componentName?: string;\n}\nconst QueryfulCodeLocationDocs = memo(\n  ({repoAddress, packageName, componentName}: QueryfulCodeLocationDocsProps) => {\n    const {data, loading} = useQuery<CodeLocationDocsQuery, CodeLocationDocsQueryVariables>(\n      CODE_LOCATION_DOCS_QUERY,\n      {\n        variables: {\n          repositorySelector: {\n            repositoryName: repoAddress.name,\n            repositoryLocationName: repoAddress.location,\n          },\n        },\n      },\n    );\n\n    const contents = useMemo(() => {\n      const repo = data?.repositoryOrError;\n      if (repo?.__typename !== 'Repository') {\n        return null;\n      }\n\n      const json =\n        repo.locationDocsJsonOrError.__typename === 'LocationDocsJson'\n          ? repo.locationDocsJsonOrError.json\n          : null;\n\n      if (typeof json === 'string') {\n        try {\n          return JSON.parse(json) as Contents;\n        } catch (e) {\n          console.error(e);\n          return null;\n        }\n      }\n\n      return null;\n    }, [data]);\n\n    const mainContent = () => {\n      if (packageName) {\n        if (componentName) {\n          const componentConfig = contents\n            ?.find((pkg) => pkg.name === packageName)\n            ?.componentTypes.find((component) => component.name === componentName);\n          if (!componentConfig) {\n            return <div className={styles.error}>Component not found</div>;\n          }\n          return <ComponentPageContents componentConfig={componentConfig} />;\n        }\n\n        const matchingPackage = contents?.find((pkg) => pkg.name === packageName);\n        if (!matchingPackage) {\n          return <div className={styles.error}>Package not found</div>;\n        }\n\n        return (\n          <PackagePageDetails\n            pkg={matchingPackage}\n            renderLink={({key, href, children, ...rest}) => {\n              return (\n                <Link\n                  key={key}\n                  to={`/locations/${repoAddressAsURLString(repoAddress)}/docs${href || '#'}`}\n                  {...rest}\n                >\n                  {children}\n                </Link>\n              );\n            }}\n          />\n        );\n      }\n\n      return (\n        <ListView\n          loading={loading}\n          contents={contents}\n          renderLink={({key, href, children, ...rest}) => {\n            return (\n              <Link\n                key={key}\n                to={`/locations/${repoAddressAsURLString(repoAddress)}/docs${href || '#'}`}\n                {...rest}\n              >\n                {children}\n              </Link>\n            );\n          }}\n        />\n      );\n    };\n\n    const pathname = packageName\n      ? `/packages/${packageName}${componentName ? `/${componentName}` : ''}`\n      : '';\n\n    return (\n      <>\n        <div className={styles.sidebar}>\n          <CodeLocationDocsPackageTree\n            loading={loading}\n            contents={contents}\n            repoAddress={repoAddress}\n            pathname={pathname}\n          />\n        </div>\n        <div className={styles.main}>{mainContent()}</div>\n      </>\n    );\n  },\n);\n\nQueryfulCodeLocationDocs.displayName = 'QueryfulCodeLocationDocs';\n","export const CodeLocationAlertsSection = ({locationName: _}: {locationName: string}) => null;\n","export const CodeLocationServerSection = ({locationName: _}: {locationName: string}) => null;\n","import {Box, Colors, FontFamily, Icon, Table, Tag} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\n\nimport {DefsStateInfo} from '../graphql/types';\nimport {TimeFromNow} from '../ui/TimeFromNow';\n\ninterface Props {\n  latestDefsStateInfo: DefsStateInfo | null;\n  defsStateInfo: DefsStateInfo | null;\n}\n\nexport const CodeLocationDefsStateComparison = ({latestDefsStateInfo, defsStateInfo}: Props) => {\n  const comparisonData = useMemo(() => {\n    // Use the current defs state info as the primary source for table rows\n    const currentKeys = new Set<string>();\n    defsStateInfo?.keyStateInfo.forEach((entry) => {\n      if (entry) {\n        currentKeys.add(entry.name);\n      }\n    });\n\n    // Build comparison data only for keys that exist in the current state\n    return Array.from(currentKeys)\n      .map((key) => {\n        const latestEntry = latestDefsStateInfo?.keyStateInfo?.find((entry) => entry?.name === key);\n        const currentEntry = defsStateInfo?.keyStateInfo?.find((entry) => entry?.name === key);\n\n        return {\n          key,\n          latestVersion: latestEntry?.info?.version || null,\n          latestTimestamp: latestEntry?.info?.createTimestamp || null,\n          currentVersion: currentEntry?.info?.version || null,\n          currentTimestamp: currentEntry?.info?.createTimestamp || null,\n        };\n      })\n      .sort((a, b) => a.key.localeCompare(b.key));\n  }, [latestDefsStateInfo, defsStateInfo]);\n\n  const truncateVersion = (version: string | null) => {\n    if (!version) {\n      return '—';\n    }\n    return version.length > 8 ? version.substring(0, 8) : version;\n  };\n\n  const renderVersionCell = (version: string | null, timestamp: number | null) => {\n    if (!version || !timestamp) {\n      return '—';\n    }\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        <span style={{fontFamily: FontFamily.monospace}}>{truncateVersion(version)}</span>\n        <Tag>\n          <TimeFromNow unixTimestamp={timestamp} />\n        </Tag>\n      </Box>\n    );\n  };\n\n  const renderStatusCell = (\n    latestVersion: string | null,\n    currentVersion: string | null,\n    key: string,\n  ) => {\n    if (!latestVersion) {\n      return (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n          <Icon name=\"warning\" color={Colors.accentYellow()} size={16} />\n          <span style={{color: Colors.textYellow()}}>No state available</span>\n        </Box>\n      );\n    } else if (latestVersion === currentVersion) {\n      return (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n          <Icon name=\"check_circle\" color={Colors.accentGreen()} size={16} />\n          <span style={{color: Colors.textGreen()}}>Up to date</span>\n        </Box>\n      );\n    } else {\n      const latestEntry = latestDefsStateInfo?.keyStateInfo?.find((e) => e?.name === key);\n      return (\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n          <Icon name=\"warning\" color={Colors.accentYellow()} size={16} />\n          <span style={{color: Colors.textYellow()}}>Update available</span>\n          <Tag>\n            <TimeFromNow unixTimestamp={latestEntry?.info?.createTimestamp || 0} />\n          </Tag>\n        </Box>\n      );\n    }\n  };\n\n  return (\n    <Box>\n      <Table style={{width: '100%'}}>\n        <thead>\n          <tr>\n            <th\n              style={{\n                textAlign: 'left',\n                padding: '8px 12px',\n                borderBottom: `1px solid ${Colors.keylineDefault()}`,\n                width: '25%',\n              }}\n            >\n              Definition Key\n            </th>\n            <th\n              style={{\n                textAlign: 'left',\n                padding: '8px 12px',\n                borderBottom: `1px solid ${Colors.keylineDefault()}`,\n                width: '20%',\n              }}\n            >\n              Current State\n            </th>\n            <th\n              style={{\n                textAlign: 'left',\n                padding: '8px 12px',\n                borderBottom: `1px solid ${Colors.keylineDefault()}`,\n                width: '55%',\n              }}\n            >\n              Status\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {comparisonData.map(({key, currentVersion, currentTimestamp, latestVersion}) => (\n            <tr key={key}>\n              <td style={{padding: '8px 12px', fontFamily: FontFamily.monospace}}>{key}</td>\n              <td style={{padding: '8px 12px'}}>\n                {renderVersionCell(currentVersion, currentTimestamp)}\n              </td>\n              <td style={{padding: '8px 12px'}}>\n                {renderStatusCell(latestVersion, currentVersion, key)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Box>\n  );\n};\n","import {gql} from '../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\n\nexport const CODE_LOCATION_DEFS_STATE_QUERY = gql`\n  query CodeLocationDefsStateQuery($locationName: String!) {\n    latestDefsStateInfo {\n      keyStateInfo {\n        name\n        info {\n          version\n          createTimestamp\n        }\n      }\n    }\n    workspaceLocationEntryOrError(name: $locationName) {\n      ... on WorkspaceLocationEntry {\n        id\n        defsStateInfo {\n          keyStateInfo {\n            name\n            info {\n              version\n              createTimestamp\n            }\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Box, Colors, Subheading} from '@dagster-io/ui-components';\nimport {ComponentProps, ReactNode} from 'react';\n\nexport const CodeLocationOverviewSectionHeader = ({\n  label,\n  border = null,\n}: {\n  label: ReactNode;\n  border?: ComponentProps<typeof Box>['border'];\n}) => (\n  <Box\n    background={Colors.backgroundLight()}\n    border={border}\n    padding={{horizontal: 24, vertical: 8}}\n  >\n    <Subheading>{label}</Subheading>\n  </Box>\n);\n","import {Box, SpinnerWithText} from '@dagster-io/ui-components';\n\nimport {useQuery} from '../apollo-client';\nimport {CodeLocationDefsStateComparison} from './CodeLocationDefsStateComparison';\nimport {CODE_LOCATION_DEFS_STATE_QUERY} from './CodeLocationDefsStateQuery';\nimport {CodeLocationOverviewSectionHeader} from './CodeLocationOverviewSectionHeader';\nimport {\n  CodeLocationDefsStateQuery,\n  CodeLocationDefsStateQueryVariables,\n} from './types/CodeLocationDefsStateQuery.types';\n\ninterface Props {\n  locationName: string;\n}\n\nexport const CodeLocationDefsStateComparisonSection = ({locationName}: Props) => {\n  const {data, loading} = useQuery<CodeLocationDefsStateQuery, CodeLocationDefsStateQueryVariables>(\n    CODE_LOCATION_DEFS_STATE_QUERY,\n    {\n      variables: {locationName},\n      fetchPolicy: 'cache-and-network',\n    },\n  );\n\n  if (loading && !data) {\n    return (\n      <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n        <SpinnerWithText label=\"Loading defs state comparison…\" />\n      </Box>\n    );\n  }\n\n  const defsStateInfo =\n    data?.workspaceLocationEntryOrError?.__typename === 'WorkspaceLocationEntry'\n      ? data.workspaceLocationEntryOrError.defsStateInfo\n      : null;\n\n  // Don't show the section if there are no versions available in the current state\n  if (!defsStateInfo?.keyStateInfo || defsStateInfo.keyStateInfo.length === 0) {\n    return null;\n  }\n\n  const latestDefsStateInfo = data?.latestDefsStateInfo ?? null;\n  return (\n    <>\n      <CodeLocationOverviewSectionHeader label=\"Defs state versions\" />\n      <CodeLocationDefsStateComparison\n        latestDefsStateInfo={latestDefsStateInfo}\n        defsStateInfo={defsStateInfo}\n      />\n    </>\n  );\n};\n","import {Box, Button, Icon, NonIdealState} from '@dagster-io/ui-components';\nimport {useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {RepositoryLocationNonBlockingErrorDialog} from './RepositoryLocationErrorDialog';\nimport {WorkspaceLocationNodeFragment} from './WorkspaceContext/types/WorkspaceQueries.types';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {RepoAddress} from './types';\nimport {\n  buildReloadFnForLocation,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  locationEntry: WorkspaceLocationNodeFragment | null;\n}\n\nexport const CodeLocationNotFound = ({repoAddress, locationEntry}: Props) => {\n  const displayName = repoAddressAsHumanString(repoAddress);\n  const locationName = repoAddress.location;\n\n  const [showDialog, setShowDialog] = useState(false);\n\n  const reloadFn = useMemo(() => buildReloadFnForLocation(locationName), [locationName]);\n  const {reloading, tryReload} = useRepositoryLocationReload({\n    scope: 'location',\n    reloadFn,\n  });\n\n  if (locationEntry?.locationOrLoadError?.__typename === 'PythonError') {\n    return (\n      <>\n        <NonIdealState\n          icon=\"error_outline\"\n          title=\"Error loading code location\"\n          description={\n            <Box flex={{direction: 'column', gap: 12}} style={{wordBreak: 'break-word'}}>\n              <div>\n                Code location <strong>{displayName}</strong> failed to load due to errors.\n              </div>\n              <div>\n                <Button icon={<Icon name=\"error_outline\" />} onClick={() => setShowDialog(true)}>\n                  View errors\n                </Button>\n              </div>\n            </Box>\n          }\n        />\n        <RepositoryLocationNonBlockingErrorDialog\n          location={locationName}\n          isOpen={showDialog}\n          error={locationEntry.locationOrLoadError}\n          reloading={reloading}\n          onDismiss={() => setShowDialog(false)}\n          onTryReload={() => tryReload()}\n        />\n      </>\n    );\n  }\n\n  return (\n    <NonIdealState\n      icon=\"code_location\"\n      title=\"Code location not found\"\n      description={\n        <Box flex={{direction: 'column', gap: 12}} style={{wordBreak: 'break-word'}}>\n          <div>\n            Code location <strong>{displayName}</strong> is not available in this workspace.\n          </div>\n          <div>\n            Check your <Link to=\"/deployment\">deployment settings</Link> for errors.\n          </div>\n        </Box>\n      }\n    />\n  );\n};\n","import {\n  Box,\n  Colors,\n  FontFamily,\n  Icon,\n  Mono,\n  SpinnerWithText,\n  Table,\n  Tooltip,\n  UnstyledButton,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport {useCallback, useContext, useMemo, useState} from 'react';\nimport {CodeLocationAlertsSection} from 'shared/code-location/CodeLocationAlertsSection.oss';\nimport {CodeLocationPageHeader} from 'shared/code-location/CodeLocationPageHeader.oss';\nimport {CodeLocationServerSection} from 'shared/code-location/CodeLocationServerSection.oss';\nimport {CodeLocationTabs} from 'shared/code-location/CodeLocationTabs.oss';\nimport {createGlobalStyle} from 'styled-components';\nimport * as yaml from 'yaml';\n\nimport {CodeLocationDefsStateComparisonSection} from './CodeLocationDefsStateComparisonSection';\nimport {CodeLocationOverviewSectionHeader} from './CodeLocationOverviewSectionHeader';\nimport {useCopyToClipboard} from '../app/browser';\nimport {TimeFromNow} from '../ui/TimeFromNow';\nimport {CodeLocationNotFound} from '../workspace/CodeLocationNotFound';\nimport {LocationStatus} from '../workspace/CodeLocationRowSet';\nimport {\n  WorkspaceContext,\n  WorkspaceRepositoryLocationNode,\n} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {LocationStatusEntryFragment} from '../workspace/WorkspaceContext/types/WorkspaceQueries.types';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport styles from './css/CodeLocationOverviewRoot.module.css';\n\nconst RIGHT_COLUMN_WIDTH = '280px';\n\ntype MetadataRowKey = 'image';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  locationEntry: WorkspaceRepositoryLocationNode | null;\n  locationStatus: LocationStatusEntryFragment | null;\n}\n\nexport const CodeLocationOverviewRoot = (props: Props) => {\n  const {repoAddress, locationStatus, locationEntry} = props;\n\n  const {displayMetadata} = locationEntry || {};\n  const metadataForDetails: Record<MetadataRowKey, {key: string; value: string} | null> =\n    useMemo(() => {\n      return {\n        image: displayMetadata?.find(({key}) => key === 'image') || null,\n      };\n    }, [displayMetadata]);\n\n  const metadataAsYaml = useMemo(() => {\n    return yaml.stringify(\n      Object.fromEntries((displayMetadata || []).map(({key, value}) => [key, value])),\n    );\n  }, [displayMetadata]);\n\n  const libraryVersions = useMemo(() => {\n    return locationEntry?.locationOrLoadError?.__typename === 'RepositoryLocation'\n      ? locationEntry?.locationOrLoadError.dagsterLibraryVersions\n      : null;\n  }, [locationEntry]);\n\n  const copy = useCopyToClipboard();\n  const [didCopy, setDidCopy] = useState(false);\n\n  const onClickCopy = useCallback(() => {\n    let timer: NodeJS.Timeout | null = null;\n    if (metadataForDetails.image) {\n      copy(metadataForDetails.image.value);\n      setDidCopy(true);\n      timer = setTimeout(() => {\n        setDidCopy(false);\n      }, 3000);\n    }\n\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, [copy, metadataForDetails.image]);\n\n  return (\n    <>\n      <Box padding={{horizontal: 24}} border=\"bottom\">\n        <CodeLocationTabs\n          selectedTab=\"overview\"\n          repoAddress={repoAddress}\n          locationEntry={locationEntry}\n        />\n      </Box>\n      <CodeLocationOverviewSectionHeader label=\"Details\" />\n      {/* Fixed table layout to contain overflowing strings in right column */}\n      <Table style={{width: '100%', tableLayout: 'fixed'}}>\n        <tbody>\n          <tr>\n            <td\n              style={{\n                width: RIGHT_COLUMN_WIDTH,\n                minWidth: RIGHT_COLUMN_WIDTH,\n                verticalAlign: 'middle',\n              }}\n            >\n              Status\n            </td>\n            <td>\n              <LocationStatus locationStatus={locationStatus} locationOrError={locationEntry} />\n            </td>\n          </tr>\n          <tr>\n            <td>Updated</td>\n            <td>\n              {locationStatus ? (\n                <div style={{whiteSpace: 'nowrap'}}>\n                  <TimeFromNow unixTimestamp={locationStatus.updateTimestamp} />\n                </div>\n              ) : null}\n            </td>\n          </tr>\n          {metadataForDetails.image ? (\n            <tr>\n              <td>Image</td>\n              <td style={{fontFamily: FontFamily.monospace}}>\n                <div className={styles.imageName}>\n                  <span style={{marginRight: '4px'}}>{metadataForDetails.image.value}</span>\n                  <Tooltip\n                    content={didCopy ? 'Copied!' : 'Click to copy image string'}\n                    placement=\"top\"\n                  >\n                    <UnstyledButton onClick={onClickCopy}>\n                      <Icon name={didCopy ? 'done' : 'copy'} size={16} />\n                    </UnstyledButton>\n                  </Tooltip>\n                </div>\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </Table>\n      <CodeLocationServerSection locationName={repoAddress.location} />\n      {libraryVersions?.length ? (\n        <>\n          <CodeLocationOverviewSectionHeader label=\"Libraries\" />\n          <Table>\n            <tbody>\n              {libraryVersions.map((version) => (\n                <tr key={version.name}>\n                  <td style={{width: RIGHT_COLUMN_WIDTH}}>\n                    <Mono>{version.name}</Mono>\n                  </td>\n                  <td>\n                    <Mono>{version.version}</Mono>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      ) : null}\n      <CodeLocationDefsStateComparisonSection locationName={repoAddress.location} />\n      <CodeLocationAlertsSection locationName={repoAddress.location} />\n      <CodeLocationOverviewSectionHeader label=\"Metadata\" border=\"bottom\" />\n      <CodeLocationMetadataStyle />\n      <div style={{height: '320px'}}>\n        <StyledRawCodeMirror\n          options={{readOnly: true, lineNumbers: false}}\n          theme={['code-location-metadata']}\n          value={metadataAsYaml}\n        />\n      </div>\n    </>\n  );\n};\n\nconst QueryfulCodeLocationOverviewRoot = ({repoAddress}: {repoAddress: RepoAddress}) => {\n  const {\n    locationEntries,\n    locationStatuses,\n    loadingNonAssets: loading,\n  } = useContext(WorkspaceContext);\n  const locationEntry = locationEntries.find((entry) => entry.name === repoAddress.location);\n  const locationStatus = locationStatuses[repoAddress.location];\n\n  const content = () => {\n    if (!locationEntry || !locationStatus) {\n      const displayName = repoAddressAsHumanString(repoAddress);\n      if (loading) {\n        return (\n          <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n            <SpinnerWithText label={`Loading ${displayName}…`} />\n          </Box>\n        );\n      }\n\n      if (!locationEntry && !locationStatus) {\n        return (\n          <Box padding={64} flex={{direction: 'row', justifyContent: 'center'}}>\n            <CodeLocationNotFound repoAddress={repoAddress} locationEntry={locationEntry || null} />\n          </Box>\n        );\n      }\n    }\n\n    return (\n      <CodeLocationOverviewRoot\n        repoAddress={repoAddress}\n        locationEntry={locationEntry || null}\n        locationStatus={locationStatus || null}\n      />\n    );\n  };\n\n  return (\n    <>\n      <CodeLocationPageHeader repoAddress={repoAddress} />\n      {content()}\n    </>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default QueryfulCodeLocationOverviewRoot;\n\nconst CodeLocationMetadataStyle = createGlobalStyle`\n  .CodeMirror.cm-s-code-location-metadata.cm-s-code-location-metadata {\n    background-color: ${Colors.backgroundDefault()};\n    padding: 12px 20px;\n    height: 300px;\n  }\n`;\n","import {useCallback, useMemo} from 'react';\nimport {useHistory, useLocation, useParams} from 'react-router-dom';\nimport {PipelineExplorerContainer} from 'shared/pipelines/PipelineExplorerRoot.oss';\n\nimport {\n  ExplorerPath,\n  explorerPathFromString,\n  explorerPathToString,\n  useStripSnapshotFromPath,\n} from './PipelinePathUtils';\nimport {useJobTitle} from './useJobTitle';\nimport {useTrackPageView} from '../app/analytics';\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useOpenInNewTab} from '../hooks/useOpenInNewTab';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineOverviewRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const history = useHistory();\n  const location = useLocation();\n  const params = useParams();\n  const pathStr = (params as any)['0'];\n  const explorerPath = useMemo(() => explorerPathFromString(pathStr), [pathStr]);\n\n  const openInNewTab = useOpenInNewTab();\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, explorerPath.pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n  useStripSnapshotFromPath({pipelinePath: explorerPathToString(explorerPath)});\n\n  const onChangeExplorerPath = useCallback(\n    (path: ExplorerPath, action: 'push' | 'replace') => {\n      history[action]({\n        search: location.search,\n        pathname: workspacePathFromAddress(\n          repoAddress,\n          `/${isJob ? 'jobs' : 'pipelines'}/${explorerPathToString(path)}`,\n        ),\n      });\n    },\n    [history, location.search, repoAddress, isJob],\n  );\n\n  const onNavigateToSourceAssetNode = useCallback(\n    (e: Pick<React.MouseEvent<any>, 'metaKey'>, node: AssetLocation) => {\n      if (!node.jobName || !node.opNames.length || !node.repoAddress) {\n        // This op has no definition in any loaded repository (source asset).\n        // The best we can do is show the asset page. This will still be mostly empty,\n        // but there can be a description.\n        const path = assetDetailsPathForKey(node.assetKey, {view: 'definition'});\n        if (e.metaKey) {\n          openInNewTab(path);\n        } else {\n          history.push(path);\n        }\n        return;\n      }\n\n      // Note: asset location can be in another job AND in another repo! Need\n      // to build a full job URL using the `node` info here.\n      history.replace({\n        search: location.search,\n        pathname: workspacePathFromAddress(\n          node.repoAddress,\n          `/jobs/${explorerPathToString({\n            ...explorerPath,\n            opNames: [tokenForAssetKey(node.assetKey)],\n            opsQuery: '',\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            pipelineName: node.jobName!,\n          })}`,\n        ),\n      });\n    },\n    [explorerPath, history, location.search, openInNewTab],\n  );\n\n  return (\n    <PipelineExplorerContainer\n      repoAddress={repoAddress}\n      explorerPath={explorerPath}\n      onChangeExplorerPath={onChangeExplorerPath}\n      onNavigateToSourceAssetNode={onNavigateToSourceAssetNode}\n    />\n  );\n};\n","import {PipelineOverviewRoot} from './PipelineOverviewRoot';\nimport {RepoAddress} from '../workspace/types';\n\nexport const JobFallthroughRoot = ({repoAddress}: {repoAddress: RepoAddress}) => {\n  return <PipelineOverviewRoot repoAddress={repoAddress} />;\n};\n","import {useContext} from 'react';\nimport {Redirect, useLocation, useParams} from 'react-router-dom';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PermissionsContext} from '../app/Permissions';\nimport {useBlockTraceUntilTrue} from '../performance/TraceContext';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineOrJobDisambiguationRoot = (props: Props) => {\n  const {repoAddress} = props;\n  const location = useLocation();\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n\n  const {loadingNonAssets: loading} = useContext(WorkspaceContext);\n  const {loading: permissionsLoading} = useContext(PermissionsContext);\n  const repo = useRepository(repoAddress);\n\n  useBlockTraceUntilTrue('Workspace', !loading);\n  useBlockTraceUntilTrue('Permissions', !permissionsLoading);\n\n  if (loading || permissionsLoading) {\n    return null;\n  }\n\n  const {pipelineName: pipelineOrJobName} = explorerPathFromString(pipelinePath);\n  const isJob = isThisThingAJob(repo, pipelineOrJobName);\n  const {pathname, search} = location;\n\n  const replacedPath = pathname.replace('/pipeline_or_job/', isJob ? '/jobs/' : '/pipelines/');\n\n  return <Redirect to={`${replacedPath}${search}`} />;\n};\n","import {Redirect, useParams} from 'react-router-dom';\n\nimport {LaunchpadSessionError} from './LaunchpadSessionError';\nimport {LaunchpadSessionLoading} from './LaunchpadSessionLoading';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  ConfigForRunQuery,\n  ConfigForRunQueryVariables,\n} from './types/LaunchpadSetupFromRunRoot.types';\nimport {\n  IExecutionSession,\n  applyCreateSession,\n  useExecutionSessionStorage,\n} from '../app/ExecutionSessionStorage';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {useBlockTraceUntilTrue} from '../performance/TraceContext';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nexport const LaunchpadSetupFromRunRoot = (props: {repoAddress: RepoAddress}) => {\n  const {repoAddress} = props;\n  const {\n    permissions: {canLaunchPipelineExecution},\n    loading,\n  } = usePermissionsForLocation(repoAddress.location);\n  const {repoPath, pipelinePath, runId} = useParams<{\n    repoPath: string;\n    pipelinePath: string;\n    runId: string;\n  }>();\n\n  useBlockTraceUntilTrue('Permissions', !loading);\n  if (loading) {\n    return null;\n  }\n  if (!canLaunchPipelineExecution) {\n    return <Redirect to={`/locations/${repoPath}/pipeline_or_job/${pipelinePath}`} />;\n  }\n  return (\n    <LaunchpadSetupFromRunAllowedRoot\n      pipelinePath={pipelinePath}\n      repoAddress={repoAddress}\n      runId={runId}\n    />\n  );\n};\n\ninterface Props {\n  pipelinePath: string;\n  repoAddress: RepoAddress;\n  runId: string;\n}\n\n/**\n * For a given run ID, retrieve the run config and populate a new Launchpad session with its\n * values, then redirect to the launchpad. The newly created session will be the open launchpad\n * config tab.\n */\nconst LaunchpadSetupFromRunAllowedRoot = (props: Props) => {\n  const {pipelinePath, repoAddress, runId} = props;\n\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [_, onSave] = useExecutionSessionStorage(repoAddress, pipelineName);\n\n  const queryResult = useQuery<ConfigForRunQuery, ConfigForRunQueryVariables>(\n    CONFIG_FOR_RUN_QUERY,\n    {\n      variables: {runId},\n      onCompleted: (data: ConfigForRunQuery) => {\n        const runOrError = data?.runOrError;\n        const run = runOrError?.__typename === 'Run' ? runOrError : null;\n        if (!run) {\n          return;\n        }\n\n        const {runConfigYaml, mode, solidSelection} = run;\n        if (!runConfigYaml && !mode && !solidSelection) {\n          return;\n        }\n\n        // Name the session after this run ID.\n        const newSession: Partial<IExecutionSession> = {name: `From run ${run.id.slice(0, 8)}`};\n\n        if (typeof runConfigYaml === 'string') {\n          newSession.runConfigYaml = runConfigYaml;\n        }\n        if (typeof mode === 'string') {\n          newSession.mode = mode;\n        }\n\n        let solidSelectionValue = null;\n        if (solidSelection instanceof Array && solidSelection.length > 0) {\n          solidSelectionValue = solidSelection as string[];\n        } else if (typeof solidSelection === 'string' && solidSelection) {\n          solidSelectionValue = [solidSelection];\n        }\n\n        newSession.solidSelection = solidSelectionValue;\n        newSession.solidSelectionQuery = solidSelectionValue ? solidSelectionValue.join(',') : '*';\n\n        onSave((storageData) => applyCreateSession(storageData, newSession));\n      },\n    },\n  );\n  const {data, loading} = queryResult;\n\n  const runOrError = data?.runOrError;\n\n  if (loading) {\n    return <LaunchpadSessionLoading />;\n  }\n\n  if (!runOrError || runOrError.__typename === 'RunNotFoundError') {\n    return (\n      <LaunchpadSessionError\n        icon=\"error\"\n        title=\"No run found\"\n        description=\"The run with this ID does not exist or has been cleaned up.\"\n      />\n    );\n  }\n\n  if (runOrError.__typename === 'PythonError') {\n    return (\n      <LaunchpadSessionError icon=\"error\" title=\"Python error\" description={runOrError.message} />\n    );\n  }\n\n  return (\n    <Redirect\n      to={{\n        pathname: workspacePathFromAddress(\n          repoAddress,\n          `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/playground`,\n        ),\n      }}\n    />\n  );\n};\n\nconst CONFIG_FOR_RUN_QUERY = gql`\n  query ConfigForRunQuery($runId: ID!) {\n    runOrError(runId: $runId) {\n      ... on Run {\n        id\n        mode\n        runConfigYaml\n        solidSelection\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import qs from 'qs';\nimport {useEffect} from 'react';\nimport {Redirect, useParams} from 'react-router-dom';\n\nimport {\n  IExecutionSession,\n  applyCreateSession,\n  useExecutionSessionStorage,\n} from '../app/ExecutionSessionStorage';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {useBlockTraceUntilTrue} from '../performance/TraceContext';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nexport const LaunchpadSetupRoot = (props: {repoAddress: RepoAddress}) => {\n  const {repoAddress} = props;\n  const {\n    permissions: {canLaunchPipelineExecution},\n    loading,\n  } = usePermissionsForLocation(repoAddress.location);\n\n  useBlockTraceUntilTrue('Permissions', !loading);\n\n  const {repoPath, pipelinePath} = useParams<{repoPath: string; pipelinePath: string}>();\n  if (loading) {\n    return null;\n  }\n\n  if (!canLaunchPipelineExecution) {\n    return <Redirect to={`/locations/${repoPath}/pipeline_or_job/${pipelinePath}`} />;\n  }\n  return <LaunchpadSetupAllowedRoot pipelinePath={pipelinePath} repoAddress={repoAddress} />;\n};\n\ninterface Props {\n  pipelinePath: string;\n  repoAddress: RepoAddress;\n}\n\nconst LaunchpadSetupAllowedRoot = (props: Props) => {\n  const {pipelinePath, repoAddress} = props;\n\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [_, onSave] = useExecutionSessionStorage(repoAddress, pipelineName);\n  const queryString = qs.parse(window.location.search, {ignoreQueryPrefix: true});\n\n  useEffect(() => {\n    if (\n      queryString.config ||\n      queryString.mode ||\n      queryString.solidSelection ||\n      queryString.tags ||\n      queryString.assetSelection\n    ) {\n      const newSession: Partial<IExecutionSession> = {};\n      if (typeof queryString.config === 'string') {\n        newSession.runConfigYaml = queryString.config;\n      }\n      if (typeof queryString.mode === 'string') {\n        newSession.mode = queryString.mode;\n      }\n      if (queryString.solidSelection instanceof Array && queryString.solidSelection.length > 0) {\n        newSession.solidSelection = queryString.solidSelection as string[];\n      } else if (typeof queryString.solidSelection === 'string' && queryString.solidSelection) {\n        newSession.solidSelection = [queryString.solidSelection];\n      }\n      if (typeof queryString.solidSelectionQuery === 'string') {\n        newSession.solidSelectionQuery = queryString.solidSelectionQuery;\n      }\n\n      if (Array.isArray(queryString.tags)) {\n        newSession.tags = queryString.tags as any;\n      }\n\n      if (Array.isArray(queryString.assetSelection)) {\n        newSession.assetSelection = queryString.assetSelection as any;\n      }\n\n      onSave((data) => applyCreateSession(data, newSession));\n    }\n  });\n\n  return (\n    <Redirect\n      to={{\n        pathname: workspacePathFromAddress(\n          repoAddress,\n          `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/playground`,\n        ),\n      }}\n    />\n  );\n};\n","import {Tab, Tabs, Tooltip} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\n\nimport {ExplorerPath, explorerPathToString} from './PipelinePathUtils';\nimport {PermissionResult, PermissionsState, permissionResultForKey} from '../app/Permissions';\nimport {TabLink} from '../ui/TabLink';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nexport const DEFAULT_JOB_TAB_ORDER = ['overview', 'playground', 'runs', 'partitions'];\n\ninterface Props {\n  repoAddress: RepoAddress;\n  isJob: boolean;\n  explorerPath: ExplorerPath;\n  matchingTab?: string;\n  permissions: PermissionsState;\n  tabs: JobTabConfig[];\n}\n\nexport const JobTabs = (props: Props) => {\n  const {repoAddress, isJob, explorerPath, matchingTab = '', permissions, tabs} = props;\n\n  const explorerPathForTab = explorerPathToString({\n    ...explorerPath,\n    opNames: [],\n  });\n\n  const selectedTab = useMemo(() => {\n    return (\n      tabs.find((tab) => tab.pathComponent === matchingTab) ||\n      tabs.find((tab) => tab.pathComponent === '')\n    );\n  }, [matchingTab, tabs]);\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    <Tabs size=\"large\" selectedTabId={selectedTab!.id}>\n      {tabs\n        .filter((tab) => !tab.isHidden)\n        .map((tab) => {\n          const {id, title: text, getPermissionsResult} = tab;\n          const permissionsResult = getPermissionsResult ? getPermissionsResult(permissions) : null;\n          const disabled = !!(permissionsResult && !permissionsResult.enabled);\n          const title =\n            permissionsResult && disabled ? (\n              <Tooltip content={permissionsResult.disabledReason} placement=\"top\">\n                {text}\n              </Tooltip>\n            ) : (\n              text\n            );\n\n          const href = workspacePathFromAddress(\n            repoAddress,\n            `/${isJob ? 'jobs' : 'pipelines'}/${explorerPathForTab}${tab.pathComponent}`,\n          );\n\n          if (disabled) {\n            return <Tab disabled key={id} id={id} title={title} />;\n          }\n\n          return <TabLink key={id} id={id} title={title} disabled={disabled} to={href} />;\n        })}\n    </Tabs>\n  );\n};\n\nexport type JobTabConfigInput = {\n  hasLaunchpad: boolean;\n  hasPartitionSet: boolean;\n};\n\nexport interface JobTabConfig {\n  id: string;\n  title: string;\n  pathComponent: string;\n  getPermissionsResult?: (permissionsState: PermissionsState) => PermissionResult;\n  isHidden?: boolean;\n}\n\n/**\n * Define the default set of job tabs.\n */\nexport const buildJobTabMap = (input: JobTabConfigInput): Record<string, JobTabConfig> => {\n  const {hasLaunchpad, hasPartitionSet} = input;\n  return {\n    overview: {\n      id: 'overview',\n      title: 'Overview',\n      pathComponent: '',\n    },\n    playground: {\n      id: 'launchpad',\n      title: 'Launchpad',\n      pathComponent: 'playground',\n      getPermissionsResult: (permissionsState: PermissionsState) =>\n        permissionResultForKey(permissionsState, 'canLaunchPipelineExecution'),\n      isHidden: !hasLaunchpad,\n    },\n    runs: {\n      id: 'runs',\n      title: 'Runs',\n      pathComponent: 'runs',\n    },\n    partitions: {\n      id: 'partitions',\n      title: 'Partitions',\n      pathComponent: 'partitions',\n      isHidden: !hasPartitionSet,\n    },\n  };\n};\n","import {DEFAULT_JOB_TAB_ORDER, JobTabConfig, JobTabConfigInput, buildJobTabMap} from './JobTabs';\n\nexport const buildJobTabs = (input: JobTabConfigInput): JobTabConfig[] => {\n  const tabConfigs = buildJobTabMap(input);\n  return DEFAULT_JOB_TAB_ORDER.map((tabId) => tabConfigs[tabId]).filter(\n    (tab): tab is JobTabConfig => !!tab && !tab.isHidden,\n  );\n};\n","import {Box, Colors, StyledTable, Tag, Tooltip} from '@dagster-io/ui-components';\nimport {useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {LatestRunTagQuery, LatestRunTagQueryVariables} from './types/LatestRunTag.types';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {RunStatus} from '../graphql/types';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {timingStringForStatus} from '../runs/RunTimingDetails';\nimport {RUN_TIME_FRAGMENT, RunTime} from '../runs/RunUtils';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: false};\n\nexport const LatestRunTag = ({\n  pipelineName,\n  repoAddress,\n}: {\n  pipelineName: string;\n  repoAddress: RepoAddress;\n}) => {\n  const lastRunQuery = useQuery<LatestRunTagQuery, LatestRunTagQueryVariables>(\n    LATEST_RUN_TAG_QUERY,\n    {\n      variables: {\n        runsFilter: {\n          pipelineName,\n          tags: [\n            {\n              key: DagsterTag.RepositoryLabelTag,\n              value: repoAddressAsTag(repoAddress),\n            },\n          ],\n        },\n      },\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  useQueryRefreshAtInterval(lastRunQuery, FIFTEEN_SECONDS);\n\n  const run = useMemo(() => {\n    const runsOrError = lastRunQuery.data?.pipelineRunsOrError;\n    if (runsOrError && runsOrError.__typename === 'Runs') {\n      return runsOrError.results[0] || null;\n    }\n    return null;\n  }, [lastRunQuery]);\n\n  if (!run) {\n    return null;\n  }\n\n  const stats = {start: run.startTime, end: run.endTime, status: run.status};\n  const intent = () => {\n    switch (run.status) {\n      case RunStatus.SUCCESS:\n        return 'success';\n      case RunStatus.CANCELED:\n      case RunStatus.CANCELING:\n      case RunStatus.FAILURE:\n        return 'danger';\n      default:\n        return 'none';\n    }\n  };\n\n  return (\n    <Tag intent={intent()}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={run.status} size={10} />\n        Latest run:\n        {stats ? (\n          <Tooltip\n            placement=\"bottom\"\n            content={\n              <StyledTable>\n                <tbody>\n                  <tr>\n                    <td style={{color: Colors.textLighter()}}>\n                      <Box padding={{right: 16}}>Started</Box>\n                    </td>\n                    <td>\n                      {stats.start ? (\n                        <TimestampDisplay timestamp={stats.start} timeFormat={TIME_FORMAT} />\n                      ) : (\n                        timingStringForStatus(stats.status)\n                      )}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{color: Colors.textLighter()}}>Ended</td>\n                    <td>\n                      {stats.end ? (\n                        <TimestampDisplay timestamp={stats.end} timeFormat={TIME_FORMAT} />\n                      ) : (\n                        timingStringForStatus(stats.status)\n                      )}\n                    </td>\n                  </tr>\n                </tbody>\n              </StyledTable>\n            }\n          >\n            <Link to={`/runs/${run.id}`}>\n              <RunTime run={run} />\n            </Link>\n          </Tooltip>\n        ) : null}\n      </Box>\n    </Tag>\n  );\n};\n\nexport const LATEST_RUN_TAG_QUERY = gql`\n  query LatestRunTagQuery($runsFilter: RunsFilter) {\n    pipelineRunsOrError(filter: $runsFilter, limit: 1) {\n      ... on Runs {\n        results {\n          id\n          status\n          ...RunTimeFragment\n        }\n      }\n    }\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Tag,\n} from '@dagster-io/ui-components';\nimport uniq from 'lodash/uniq';\nimport {useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LatestRunTag} from './LatestRunTag';\nimport {ScheduleOrSensorTag} from './ScheduleOrSensorTag';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  JobMetadataAssetNodeFragment,\n  JobMetadataFragment,\n  JobMetadataQuery,\n  JobMetadataQueryVariables,\n  RunMetadataFragment,\n} from './types/JobMetadata.types';\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {AutomaterializeDaemonStatusTag} from '../assets/AutomaterializeDaemonStatusTag';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RUN_TIME_FRAGMENT} from '../runs/RunUtils';\nimport {SCHEDULE_SWITCH_FRAGMENT} from '../schedules/ScheduleSwitchFragment';\nimport {SENSOR_SWITCH_FRAGMENT} from '../sensors/SensorSwitchFragment';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\ntype JobMetadata = {\n  assetNodes: JobMetadataAssetNodeFragment[] | null;\n  job: JobMetadataFragment | null;\n  runsForAssetScan: RunMetadataFragment[];\n};\n\nfunction useJobNavMetadata(repoAddress: RepoAddress, pipelineName: string) {\n  const queryResult = useQuery<JobMetadataQuery, JobMetadataQueryVariables>(JOB_METADATA_QUERY, {\n    variables: {\n      runsFilter: {\n        pipelineName,\n        tags: [\n          {\n            key: DagsterTag.RepositoryLabelTag,\n            value: repoAddressAsTag(repoAddress),\n          },\n        ],\n      },\n      params: {\n        pipelineName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      },\n    },\n  });\n  const data = queryResult.data;\n\n  return useMemo<JobMetadata>(() => {\n    return {\n      assetNodes: data?.assetNodes || null,\n      job:\n        data?.pipelineOrError && data.pipelineOrError.__typename === 'Pipeline'\n          ? data.pipelineOrError\n          : null,\n      runsForAssetScan:\n        data?.pipelineRunsOrError && data.pipelineRunsOrError.__typename === 'Runs'\n          ? data.pipelineRunsOrError.results\n          : [],\n    };\n  }, [data]);\n}\n\ninterface Props {\n  pipelineName: string;\n  repoAddress: RepoAddress;\n}\n\nexport const JobMetadata = (props: Props) => {\n  const {pipelineName, repoAddress} = props;\n  const metadata = useJobNavMetadata(repoAddress, pipelineName);\n\n  return (\n    <>\n      {metadata.job ? (\n        <JobScheduleOrSensorTag job={metadata.job} repoAddress={repoAddress} />\n      ) : null}\n      <LatestRunTag pipelineName={pipelineName} repoAddress={repoAddress} />\n      {metadata.assetNodes && metadata.assetNodes.some((a) => !!a.automationCondition) && (\n        <AutomaterializeDaemonStatusTag />\n      )}\n      {metadata.runsForAssetScan ? (\n        <RelatedAssetsTag relatedAssets={getRelatedAssets(metadata)} />\n      ) : null}\n    </>\n  );\n};\n\nconst JobScheduleOrSensorTag = ({\n  job,\n  repoAddress,\n}: {\n  job: JobMetadataFragment;\n  repoAddress: RepoAddress;\n}) => {\n  const matchingSchedules = useMemo(() => {\n    if (job?.__typename === 'Pipeline' && job.schedules.length) {\n      return job.schedules;\n    }\n    return [];\n  }, [job]);\n\n  const matchingSensors = useMemo(() => {\n    if (job?.__typename === 'Pipeline' && job.sensors.length) {\n      return job.sensors;\n    }\n    return [];\n  }, [job]);\n\n  return (\n    <ScheduleOrSensorTag\n      schedules={matchingSchedules}\n      sensors={matchingSensors}\n      repoAddress={repoAddress}\n    />\n  );\n};\n\nfunction getRelatedAssets(metadata: JobMetadata) {\n  if (metadata.assetNodes) {\n    return metadata.assetNodes.map((node) => tokenForAssetKey(node.assetKey));\n  }\n\n  return uniq(\n    metadata.runsForAssetScan.flatMap((r) => r.assets.map((a) => tokenForAssetKey(a.key))),\n  );\n}\n\nconst RelatedAssetsTag = ({relatedAssets}: {relatedAssets: string[]}) => {\n  const [open, setOpen] = useState(false);\n\n  if (relatedAssets.length === 0) {\n    return null;\n  }\n\n  if (relatedAssets.length === 1) {\n    const key = relatedAssets[0];\n    return (\n      <Tag icon=\"asset\">\n        Asset: <Link to={`/assets/${key}`}>{key}</Link>\n      </Tag>\n    );\n  }\n\n  return (\n    <>\n      <Tag icon=\"asset\">\n        <ButtonLink\n          color={Colors.linkDefault()}\n          onClick={() => setOpen(true)}\n        >{`View ${relatedAssets.length} assets`}</ButtonLink>\n      </Tag>\n      <Dialog\n        title=\"Related assets\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        isOpen={open}\n        onClose={() => setOpen(false)}\n        style={{maxWidth: '80%', minWidth: '500px', width: 'auto'}}\n      >\n        {relatedAssets.map((key, ii) => (\n          <Box\n            key={key}\n            padding={{vertical: 12, horizontal: 20}}\n            border={ii < relatedAssets.length - 1 ? 'bottom' : null}\n          >\n            <Link key={key} to={`/assets/${key}`} style={{wordBreak: 'break-word'}}>\n              {key}\n            </Link>\n          </Box>\n        ))}\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={() => setOpen(false)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n\nexport const JOB_METADATA_QUERY = gql`\n  query JobMetadataQuery($params: PipelineSelector!, $runsFilter: RunsFilter!) {\n    pipelineOrError(params: $params) {\n      ... on Pipeline {\n        id\n        ...JobMetadataFragment\n      }\n    }\n    assetNodes(pipeline: $params) {\n      id\n      ...JobMetadataAssetNode\n    }\n    pipelineRunsOrError(filter: $runsFilter, limit: 5) {\n      ... on PipelineRuns {\n        results {\n          id\n          ...RunMetadataFragment\n        }\n      }\n    }\n  }\n\n  fragment JobMetadataAssetNode on AssetNode {\n    id\n    automationCondition {\n      __typename\n    }\n    assetKey {\n      path\n    }\n  }\n\n  fragment JobMetadataFragment on Pipeline {\n    id\n    isJob\n    name\n    schedules {\n      id\n      mode\n      ...ScheduleSwitchFragment\n    }\n    sensors {\n      id\n      targets {\n        pipelineName\n        mode\n      }\n      ...SensorSwitchFragment\n    }\n  }\n\n  fragment RunMetadataFragment on PipelineRun {\n    id\n    status\n    assets {\n      id\n      key {\n        path\n      }\n    }\n    ...RunTimeFragment\n  }\n\n  ${SCHEDULE_SWITCH_FRAGMENT}\n  ${SENSOR_SWITCH_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n","import {Box, PageHeader, Subtitle1, Tag} from '@dagster-io/ui-components';\nimport {Link, useRouteMatch} from 'react-router-dom';\nimport {buildJobTabs} from 'shared/pipelines/buildJobTabs.oss';\n\nimport {JobMetadata} from './JobMetadata';\nimport {RepositoryLink} from './RepositoryLink';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {JobTabs} from '../pipelines/JobTabs';\nimport {explorerPathFromString} from '../pipelines/PipelinePathUtils';\nimport {useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineNav = (props: Props) => {\n  const {repoAddress} = props;\n  const permissions = usePermissionsForLocation(repoAddress.location);\n\n  const match = useRouteMatch<{tab?: string; selector: string}>([\n    '/locations/:repoPath/pipelines/:selector/:tab?',\n    '/locations/:repoPath/jobs/:selector/:tab?',\n    '/locations/:repoPath/pipeline_or_job/:selector/:tab?',\n  ]);\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const explorerPath = explorerPathFromString(match!.params.selector);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const repoJobEntry = repo?.repository.pipelines.find(\n    (pipelineOrJob) => pipelineOrJob.name === pipelineName,\n  );\n  const isJob = !!repoJobEntry?.isJob;\n  const isAssetJob = !!repoJobEntry?.isAssetJob;\n\n  // If using pipeline:mode tuple (crag flag), check for partition sets that are for this specific\n  // pipeline:mode tuple. Otherwise, just check for a pipeline name match.\n  const partitionSets = repo?.repository.partitionSets || [];\n  const hasLaunchpad = !isAssetJob && !repoJobEntry?.externalJobSource;\n  const hasPartitionSet = partitionSets.some(\n    (partitionSet) => partitionSet.pipelineName === pipelineName,\n  );\n\n  const tabs = buildJobTabs({hasLaunchpad, hasPartitionSet});\n\n  return (\n    <>\n      <PageHeader\n        title={\n          <Subtitle1 style={{display: 'flex', flexDirection: 'row', gap: 4}}>\n            <Link to=\"/jobs\">Jobs</Link>\n            <span>/</span>\n            {pipelineName}\n          </Subtitle1>\n        }\n        tags={\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8, wrap: 'wrap'}}>\n            <Tag icon=\"job\">\n              {isJob ? 'Job in ' : 'Pipeline in '}\n              <RepositoryLink repoAddress={repoAddress} />\n            </Tag>\n            {snapshotId ? null : (\n              <JobMetadata pipelineName={pipelineName} repoAddress={repoAddress} />\n            )}\n          </Box>\n        }\n        tabs={\n          <JobTabs\n            repoAddress={repoAddress}\n            isJob={isJob}\n            explorerPath={explorerPath}\n            permissions={permissions}\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            matchingTab={match!.params.tab}\n            tabs={tabs}\n          />\n        }\n      />\n    </>\n  );\n};\n","import {Table} from '@dagster-io/ui-components';\nimport {useState} from 'react';\n\nimport {\n  BACKFILL_ACTIONS_BACKFILL_FRAGMENT,\n  PARTITION_SET_FOR_BACKFILL_TABLE_FRAGMENT,\n} from './BackfillFragments';\nimport {BackfillPartitionsRequestedDialog} from './BackfillPartitionsRequestedDialog';\nimport {BackfillRow} from './BackfillRow';\nimport {BackfillTableFragment} from './types/BackfillTable.types';\nimport {gql} from '../../apollo-client';\nimport {PYTHON_ERROR_FRAGMENT} from '../../app/PythonErrorFragment';\n\nexport const BackfillTable = ({\n  showBackfillTarget = true,\n  allPartitions,\n  backfills,\n  refetch,\n}: {\n  allPartitions?: string[];\n  backfills: BackfillTableFragment[];\n  refetch: () => void;\n  showBackfillTarget?: boolean;\n}) => {\n  const [partitionsRequestedBackfill, setPartitionsRequestedBackfill] = useState<string>();\n\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th>Backfill ID</th>\n            <th>Created</th>\n            {showBackfillTarget ? <th>Backfill target</th> : null}\n            <th>Requested</th>\n            <th>Launched by</th>\n            <th>Backfill status</th>\n            <th style={{width: 80}} />\n          </tr>\n        </thead>\n        <tbody>\n          {backfills.map((backfill) => (\n            <BackfillRow\n              key={backfill.id}\n              showBackfillTarget={showBackfillTarget}\n              backfill={backfill}\n              allPartitions={allPartitions}\n              onShowPartitionsRequested={setPartitionsRequestedBackfill}\n              refetch={refetch}\n            />\n          ))}\n        </tbody>\n      </Table>\n\n      <BackfillPartitionsRequestedDialog\n        backfillId={partitionsRequestedBackfill}\n        onClose={() => setPartitionsRequestedBackfill(undefined)}\n      />\n    </>\n  );\n};\n\nexport const BACKFILL_TABLE_FRAGMENT = gql`\n  fragment BackfillTableFragment on PartitionBackfill {\n    id\n    status\n    isAssetBackfill\n    isValidSerialization\n    numPartitions\n    timestamp\n    partitionSetName\n    partitionSet {\n      id\n      ...PartitionSetForBackfillTableFragment\n    }\n    assetSelection {\n      path\n    }\n    tags {\n      key\n      value\n    }\n    error {\n      ...PythonErrorFragment\n    }\n    ...BackfillActionsBackfillFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${BACKFILL_ACTIONS_BACKFILL_FRAGMENT}\n  ${PARTITION_SET_FOR_BACKFILL_TABLE_FRAGMENT}\n`;\n","import {\n  Box,\n  CursorPaginationControls,\n  CursorPaginationProps,\n  NonIdealState,\n} from '@dagster-io/ui-components';\nimport {useEffect, useState} from 'react';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {JobBackfillsQuery, JobBackfillsQueryVariables} from './types/JobBackfillsTable.types';\nimport {RepositorySelector} from '../graphql/types';\nimport {BACKFILL_TABLE_FRAGMENT, BackfillTable} from '../instance/backfill/BackfillTable';\nimport {Loading} from '../ui/Loading';\n\nconst BACKFILL_PAGE_SIZE = 10;\n\nexport const JobBackfillsTable = ({\n  partitionSetName,\n  partitionNames,\n  repositorySelector,\n  refetchCounter,\n}: {\n  partitionSetName: string;\n  partitionNames: string[];\n  repositorySelector: RepositorySelector;\n  refetchCounter: number;\n}) => {\n  const [cursorStack, setCursorStack] = useState<string[]>(() => []);\n  const [cursor, setCursor] = useState<string | undefined>();\n  const queryResult = useQuery<JobBackfillsQuery, JobBackfillsQueryVariables>(JOB_BACKFILLS_QUERY, {\n    variables: {\n      partitionSetName,\n      repositorySelector,\n      cursor,\n      limit: BACKFILL_PAGE_SIZE,\n    },\n  });\n\n  const refetch = queryResult.refetch;\n  useEffect(() => {\n    if (refetchCounter) {\n      refetch();\n    }\n  }, [refetch, refetchCounter]);\n\n  return (\n    <Loading queryResult={queryResult}>\n      {({partitionSetOrError}) => {\n        if (partitionSetOrError.__typename === 'PartitionSetNotFoundError') {\n          return (\n            <Box margin={{vertical: 20}}>\n              <NonIdealState title=\"Partition set not found.\" icon=\"no-results\" />\n            </Box>\n          );\n        }\n\n        if (partitionSetOrError.__typename === 'PythonError') {\n          return (\n            <Box margin={{vertical: 20}}>\n              <NonIdealState title=\"An error occurred.\" icon=\"no-results\" />\n            </Box>\n          );\n        }\n\n        const {backfills, pipelineName} = partitionSetOrError;\n\n        if (!backfills.length) {\n          return (\n            <Box margin={{vertical: 20}}>\n              <NonIdealState title={`No backfills for ${pipelineName}`} icon=\"no-results\" />\n            </Box>\n          );\n        }\n\n        const paginationProps: CursorPaginationProps = {\n          hasPrevCursor: !!cursor,\n          hasNextCursor: backfills && backfills.length === BACKFILL_PAGE_SIZE,\n          popCursor: () => {\n            const nextStack = [...cursorStack];\n            setCursor(nextStack.pop());\n            setCursorStack(nextStack);\n          },\n          advanceCursor: () => {\n            if (cursor) {\n              setCursorStack((current) => [...current, cursor]);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const nextCursor = backfills && backfills[backfills.length - 1]!.id;\n            if (!nextCursor) {\n              return;\n            }\n            setCursor(nextCursor);\n          },\n          reset: () => {\n            setCursorStack([]);\n            setCursor(undefined);\n          },\n        };\n        return (\n          <>\n            <BackfillTable\n              backfills={backfills}\n              refetch={refetch}\n              showBackfillTarget={false}\n              allPartitions={partitionNames}\n            />\n            <CursorPaginationControls {...paginationProps} />\n          </>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst JOB_BACKFILLS_QUERY = gql`\n  query JobBackfillsQuery(\n    $partitionSetName: String!\n    $repositorySelector: RepositorySelector!\n    $cursor: String\n    $limit: Int\n  ) {\n    partitionSetOrError(\n      repositorySelector: $repositorySelector\n      partitionSetName: $partitionSetName\n    ) {\n      ... on PartitionSet {\n        id\n        pipelineName\n        backfills(cursor: $cursor, limit: $limit) {\n          id\n          ...BackfillTableFragment\n        }\n      }\n    }\n  }\n\n  ${BACKFILL_TABLE_FRAGMENT}\n`;\n","import {Box, Checkbox} from '@dagster-io/ui-components';\n\nimport {RunStatus} from '../graphql/types';\nimport {runStatusToBackfillStateString} from '../runs/RunStatusTag';\nimport {testId} from '../testing/testId';\n\nexport function countsByState(partitionKeysForCounts: {partitionKey: string; state: RunStatus}[]) {\n  const result: {[status: string]: number} = {\n    [RunStatus.SUCCESS]: 0,\n    [RunStatus.NOT_STARTED]: 0,\n    [RunStatus.FAILURE]: 0,\n    [RunStatus.QUEUED]: 0,\n    [RunStatus.STARTED]: 0,\n  };\n  for (const key of partitionKeysForCounts) {\n    result[key.state] = (result[key.state] || 0) + 1;\n  }\n  return result;\n}\n\nexport const PartitionRunStatusCheckboxes = ({\n  counts,\n  value,\n  onChange,\n  allowed,\n  disabled,\n}: {\n  counts: {[status: string]: number};\n  value: RunStatus[];\n  allowed: RunStatus[];\n  onChange: (selected: RunStatus[]) => void;\n  disabled?: boolean;\n}) => {\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 12}} style={{overflow: 'hidden'}}>\n      {allowed.map((status) => (\n        <Checkbox\n          key={status}\n          data-testid={testId(`run-status-${status}-checkbox`)}\n          disabled={disabled}\n          style={{marginBottom: 0, marginLeft: 10, minWidth: 200}}\n          checked={value.includes(status) && !disabled}\n          label={`${runStatusToBackfillStateString(status)} (${counts[status]})`}\n          onChange={() =>\n            onChange(\n              value.includes(status) ? value.filter((v) => v !== status) : [...value, status],\n            )\n          }\n        />\n      ))}\n    </Box>\n  );\n};\n","import {\n  Body2,\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Subheading,\n  Tooltip,\n} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {\n  DAEMON_NOT_RUNNING_ALERT_INSTANCE_FRAGMENT,\n  DaemonNotRunningAlert,\n  USING_DEFAULT_LAUNCHER_ALERT_INSTANCE_FRAGMENT,\n  UsingDefaultLauncherAlert,\n  isBackfillDaemonHealthy,\n  showBackfillErrorToast,\n  showBackfillSuccessToast,\n} from './BackfillMessaging';\nimport {DimensionRangeWizard} from './DimensionRangeWizard';\nimport {PartitionRunStatusCheckboxes, countsByState} from './PartitionRunStatusCheckboxes';\nimport {gql, useMutation, useQuery} from '../apollo-client';\nimport {\n  BackfillSelectorQuery,\n  BackfillSelectorQueryVariables,\n} from './types/BackfillSelector.types';\nimport {PipelineRunTag} from '../app/ExecutionSessionStorage';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {isTimeseriesPartition} from '../assets/MultipartitioningSupport';\nimport {GanttChartMode} from '../gantt/GanttChart';\nimport {buildLayout} from '../gantt/GanttChartLayout';\nimport {PartitionDefinitionType, RunStatus} from '../graphql/types';\nimport {LAUNCH_PARTITION_BACKFILL_MUTATION} from '../instance/backfill/BackfillUtils';\nimport {\n  LaunchPartitionBackfillMutation,\n  LaunchPartitionBackfillMutationVariables,\n} from '../instance/backfill/types/BackfillUtils.types';\nimport {LaunchButton} from '../launchpad/LaunchButton';\nimport {TagContainer, TagEditor} from '../launchpad/TagEditor';\nimport {tagsWithUIExecutionTags} from '../launchpad/uiExecutionTags';\nimport {explodeCompositesInHandleGraph} from '../pipelines/CompositeSupport';\nimport {GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT} from '../pipelines/GraphExplorer';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface BackfillOptions {\n  reexecute: boolean;\n  fromFailure: boolean;\n}\n\nexport const BackfillPartitionSelector = ({\n  partitionSetName,\n  onLaunch,\n  onCancel,\n  onSubmit,\n  repoAddress,\n  runStatusData,\n  refreshing,\n  pipelineName,\n  partitionNames,\n}: {\n  partitionSetName: string;\n  partitionNames: string[];\n  runStatusData: {[partitionName: string]: RunStatus};\n  refreshing: boolean;\n  pipelineName: string;\n  onLaunch?: (backfillId: string, stepQuery: string) => void;\n  onCancel?: () => void;\n  onSubmit: () => void;\n  repoAddress: RepoAddress;\n}) => {\n  const [range, _setRange] = React.useState<string[]>(\n    Object.keys(runStatusData).filter(\n      (k) => !runStatusData[k] || runStatusData[k] === RunStatus.FAILURE,\n    ),\n  );\n  const [stateFilters, setStateFilters] = React.useState<RunStatus[]>([\n    RunStatus.NOT_STARTED,\n    RunStatus.FAILURE,\n  ]);\n\n  const selected = React.useMemo(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return range.filter((r) => stateFilters.includes(runStatusData[r]!));\n  }, [range, stateFilters, runStatusData]);\n\n  const [tagEditorOpen, setTagEditorOpen] = React.useState<boolean>(false);\n  const [tags, setTags] = React.useState<PipelineRunTag[]>([]);\n  const [query, setQuery] = React.useState<string>('');\n  const [options, setOptions] = React.useState<BackfillOptions>({\n    reexecute: false,\n    fromFailure: false,\n  });\n  const repositorySelector = repoAddressToSelector(repoAddress);\n\n  const {data} = useQuery<BackfillSelectorQuery, BackfillSelectorQueryVariables>(\n    BACKFILL_SELECTOR_QUERY,\n    {\n      variables: {\n        pipelineSelector: {\n          ...repositorySelector,\n          pipelineName,\n        },\n      },\n      fetchPolicy: 'network-only',\n    },\n  );\n\n  const mounted = React.useRef(true);\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [onLaunch]);\n\n  const onSuccess = (backfillId: string) => {\n    showBackfillSuccessToast(backfillId);\n    onLaunch?.(backfillId, query);\n  };\n\n  const onError = (data: LaunchPartitionBackfillMutation | null | undefined) => {\n    showBackfillErrorToast(data);\n  };\n\n  if (!data) {\n    return (\n      <Box margin={{vertical: 32}} flex={{justifyContent: 'center'}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  if (data.pipelineSnapshotOrError.__typename !== 'PipelineSnapshot') {\n    return (\n      <Box margin={20}>\n        <NonIdealState icon=\"error\" title=\"Could not fetch job details\" />\n      </Box>\n    );\n  }\n\n  const {pipelineSnapshotOrError: pipelineSnapshot, instance} = data;\n  const solids = explodeCompositesInHandleGraph(pipelineSnapshot.solidHandles).map(\n    (h: any) => h.solid,\n  );\n  const solidsFiltered = filterByQuery(solids, query);\n  const layout = buildLayout({nodes: solidsFiltered.all, mode: GanttChartMode.FLAT});\n  const stepRows = layout.boxes.map((box) => ({\n    x: box.x,\n    name: box.node.name,\n  }));\n\n  const isFailed = (name: string) => runStatusData[name] === RunStatus.FAILURE;\n  const failedPartitions = partitionNames.filter(isFailed);\n\n  const setRange = (selection: string[]) => {\n    const selectionSet = new Set(selection);\n    // first order the partition names, according to the order given by partition names, which\n    // is the order determined from the partition definition set in user code\n    _setRange(partitionNames.filter((name) => selectionSet.has(name)));\n    if (options.fromFailure && selection.filter((x) => !isFailed(x)).length > 0) {\n      setOptions({...options, fromFailure: false});\n    }\n  };\n\n  const counts = countsByState(\n    range.map((key) => ({\n      partitionKey: key,\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      state: runStatusData[key]!,\n    })),\n  );\n\n  return (\n    <>\n      <DialogBody>\n        <Box flex={{direction: 'column', gap: 24}}>\n          <Section\n            title={\n              <Box flex={{justifyContent: 'space-between'}}>\n                <div>Partitions</div>\n                {refreshing && (\n                  <Box flex={{gap: 4, alignItems: 'center'}}>\n                    <Spinner purpose=\"body-text\" />\n                    <Body2 color={Colors.textLight()}>Refreshing...</Body2>\n                  </Box>\n                )}\n              </Box>\n            }\n          >\n            <Box>\n              Select partitions to materialize. Click and drag to select a range on the timeline.\n            </Box>\n\n            <DimensionRangeWizard\n              selected={range}\n              setSelected={setRange}\n              health={{runStatusForPartitionKey: (key) => runStatusData[key]}}\n              partitionKeys={partitionNames}\n              dimensionType={\n                isTimeseriesPartition(partitionNames[0])\n                  ? PartitionDefinitionType.TIME_WINDOW\n                  : PartitionDefinitionType.STATIC\n              }\n              showQuickSelectOptionsForStatuses={false}\n            />\n\n            <PartitionRunStatusCheckboxes\n              value={stateFilters}\n              onChange={setStateFilters}\n              counts={counts}\n              allowed={\n                options.fromFailure\n                  ? [RunStatus.FAILURE]\n                  : [\n                      RunStatus.NOT_STARTED,\n                      RunStatus.FAILURE,\n                      RunStatus.QUEUED,\n                      RunStatus.STARTED,\n                      RunStatus.SUCCESS,\n                    ]\n              }\n            />\n          </Section>\n\n          {failedPartitions.length ? (\n            <Section title=\"Reexecution\">\n              <Checkbox\n                checked={options.fromFailure}\n                disabled={!selected.every(isFailed)}\n                onChange={() => {\n                  const next = {\n                    ...options,\n                    fromFailure: !options.fromFailure,\n                    reexecute: !options.reexecute,\n                  };\n\n                  if (next.fromFailure) {\n                    setStateFilters([RunStatus.FAILURE]);\n                  }\n                  setQuery('');\n                  setOptions(next);\n                }}\n                label={\n                  <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n                    <Box margin={{right: 4}}>Re-execute from failures</Box>\n                    <Tooltip\n                      placement=\"top\"\n                      content=\"For each partition, if the most recent run failed, launch a re-execution starting from the steps that failed. Only applies for selections of failed partitions.\"\n                    >\n                      <Icon name=\"info\" color={Colors.accentGray()} />\n                    </Tooltip>\n                  </Box>\n                }\n              />\n            </Section>\n          ) : null}\n\n          <Section\n            title={\n              <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n                <Box margin={{right: 4}}>Step subset</Box>\n                <Tooltip\n                  placement=\"top\"\n                  content=\"Applies a step-selection to each run for the requested partitions.\"\n                >\n                  <Icon name=\"info\" color={Colors.accentGray()} />\n                </Tooltip>\n              </Box>\n            }\n          >\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n              <GraphQueryInput\n                disabled={options.fromFailure}\n                width={520}\n                items={solids}\n                value={query}\n                placeholder=\"Type a step subset\"\n                onChange={setQuery}\n                autoApplyChanges={true}\n              />\n              {query ? (\n                <div style={{color: Colors.textLight()}}>\n                  {stepRows.length} step{stepRows.length === 1 ? '' : 's'} selected\n                </div>\n              ) : null}\n            </Box>\n          </Section>\n\n          <Section title=\"Tags\">\n            <TagEditor\n              tagsFromSession={tags}\n              onChange={setTags}\n              open={tagEditorOpen}\n              onRequestClose={() => setTagEditorOpen(false)}\n            />\n            {tags.length ? (\n              <div\n                style={{border: `1px solid ${Colors.borderDefault()}`, borderRadius: 8, padding: 3}}\n              >\n                <TagContainer tagsFromSession={tags} onRequestEdit={() => setTagEditorOpen(true)} />\n              </div>\n            ) : (\n              <div>\n                <Button onClick={() => setTagEditorOpen(true)}>Add tags to backfill runs</Button>\n              </div>\n            )}\n          </Section>\n\n          <Box flex={{direction: 'column', gap: 16}}>\n            {!isBackfillDaemonHealthy(instance) ? <DaemonNotRunningAlert /> : null}\n\n            <UsingDefaultLauncherAlert instance={instance} />\n          </Box>\n        </Box>\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"none\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <LaunchBackfillButton\n          partitionNames={selected}\n          partitionSetName={partitionSetName}\n          reexecutionSteps={\n            !options.fromFailure && solidsFiltered.all.length < solids.length\n              ? stepRows.map((step) => step.name)\n              : undefined\n          }\n          fromFailure={options.fromFailure}\n          tags={tags}\n          onSubmit={onSubmit}\n          onSuccess={onSuccess}\n          onError={onError}\n          repoAddress={repoAddress}\n        />\n      </DialogFooter>\n    </>\n  );\n};\n\nconst LaunchBackfillButton = ({\n  partitionSetName,\n  partitionNames,\n  reexecutionSteps,\n  fromFailure,\n  tags,\n  onSuccess,\n  onError,\n  onSubmit,\n  repoAddress,\n}: {\n  partitionSetName: string;\n  partitionNames: string[];\n  reexecutionSteps?: string[];\n  fromFailure?: boolean;\n  tags?: PipelineRunTag[];\n  onSuccess?: (backfillId: string, isPureAssetBackfill: boolean) => void;\n  onError: (data: LaunchPartitionBackfillMutation | null | undefined) => void;\n  onSubmit: () => void;\n  repoAddress: RepoAddress;\n}) => {\n  const repositorySelector = repoAddressToSelector(repoAddress);\n  const mounted = React.useRef(true);\n  const [launchBackfill, {loading}] = useMutation<\n    LaunchPartitionBackfillMutation,\n    LaunchPartitionBackfillMutationVariables\n  >(LAUNCH_PARTITION_BACKFILL_MUTATION);\n\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [onSuccess]);\n\n  const onLaunch = async () => {\n    onSubmit();\n    const {data} = await launchBackfill({\n      variables: {\n        backfillParams: {\n          selector: {\n            partitionSetName,\n            repositorySelector,\n          },\n          partitionNames,\n          reexecutionSteps,\n          fromFailure,\n          tags: tagsWithUIExecutionTags(tags),\n        },\n      },\n    });\n\n    if (!mounted.current) {\n      return;\n    }\n\n    if (data && data.launchPartitionBackfill.__typename === 'LaunchBackfillSuccess') {\n      onSuccess?.(data.launchPartitionBackfill.backfillId, false);\n    } else {\n      onError?.(data);\n    }\n  };\n\n  const count = partitionNames.length;\n  const reexecutionCount = reexecutionSteps?.length;\n\n  const title = () => {\n    if (loading) {\n      return `Submitting ${count} ${count === 1 ? 'run' : 'runs'}…`;\n    }\n\n    if (count) {\n      return `Submit ${count} ${count === 1 ? 'run' : 'runs'}`;\n    }\n\n    return 'Select partitions to submit';\n  };\n\n  const subtitle = () => {\n    return !loading && reexecutionCount\n      ? `(${reexecutionCount} selected ${reexecutionCount === 1 ? 'step' : 'steps'})`\n      : '';\n  };\n\n  const buttonTitle = [title(), subtitle()].join(' ');\n\n  return (\n    <LaunchButton\n      runCount={count}\n      config={{\n        title: buttonTitle,\n        icon: 'open_in_new',\n        disabled: !count || loading,\n        onClick: onLaunch,\n      }}\n    />\n  );\n};\n\nconst BACKFILL_SELECTOR_QUERY = gql`\n  query BackfillSelectorQuery($pipelineSelector: PipelineSelector!) {\n    pipelineSnapshotOrError(activePipelineSelector: $pipelineSelector) {\n      ... on PipelineSnapshot {\n        id\n        name\n        solidHandles {\n          handleID\n          solid {\n            name\n            definition {\n              name\n            }\n            inputs {\n              dependsOn {\n                solid {\n                  name\n                }\n              }\n            }\n            outputs {\n              dependedBy {\n                solid {\n                  name\n                }\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n      }\n    }\n    instance {\n      id\n      ...UsingDefaultLauncherAlertInstanceFragment\n      ...DaemonNotRunningAlertInstanceFragment\n    }\n  }\n\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${DAEMON_NOT_RUNNING_ALERT_INSTANCE_FRAGMENT}\n  ${USING_DEFAULT_LAUNCHER_ALERT_INSTANCE_FRAGMENT}\n`;\n\nconst Section = ({\n  title,\n  children,\n}: {\n  title: string | React.ReactNode;\n  children: React.ReactNode;\n}) => (\n  <Box flex={{direction: 'column', gap: 4}}>\n    <Subheading>{title}</Subheading>\n    <Box flex={{direction: 'column', gap: 8}} padding={{top: 16}} border=\"top\">\n      {children}\n    </Box>\n  </Box>\n);\n","import {Box, Button, Colors, FontFamily, NonIdealState} from '@dagster-io/ui-components';\nimport {CategoryScale, ChartEvent, Chart as ChartJS, LinearScale} from 'chart.js';\nimport React, {useCallback, useMemo, useRef, useState} from 'react';\nimport {Line} from 'react-chartjs-2';\nimport styled from 'styled-components';\n\nimport {colorHash} from '../app/Util';\nimport {useRGBColorsForTheme} from '../app/useRGBColorsForTheme';\nimport {numberFormatter} from '../ui/formatters';\n\nChartJS.register(LinearScale, CategoryScale);\n\ntype PointValue = number | null | undefined;\ntype Point = {x: string; y: PointValue};\n\ninterface PartitionGraphProps {\n  partitionNames: string[];\n  jobDataByPartition?: {[partitionName: string]: PointValue};\n  stepDataByPartition?: {[partitionName: string]: {[key: string]: PointValue[]}};\n  title?: string;\n  yLabel?: string;\n  isJob: boolean;\n  hiddenStepKeys?: string[];\n}\n\nexport const PartitionGraph = React.memo(\n  ({\n    partitionNames,\n    jobDataByPartition,\n    stepDataByPartition,\n    title,\n    yLabel,\n    isJob,\n    hiddenStepKeys,\n  }: PartitionGraphProps) => {\n    const [hiddenPartitions, setHiddenPartitions] = useState<{[name: string]: boolean}>(() => ({}));\n    const chart = useRef<any>(null);\n\n    const rgbColors = useRGBColorsForTheme();\n\n    const [_showLargeGraphMessage, setShowLargeGraphMessage] = useState(\n      partitionNames.length > 1000,\n    );\n    const showLargeGraphMessage = _showLargeGraphMessage && partitionNames.length > 1000;\n\n    const onGraphClick = useCallback((event: ChartEvent) => {\n      const instance = chart.current;\n      if (!instance) {\n        return;\n      }\n      const xAxis = instance.scales['x-axis-0'];\n      if (!xAxis) {\n        return;\n      }\n\n      const nativeEvent = event.native;\n      if (!(nativeEvent instanceof MouseEvent)) {\n        return;\n      }\n\n      const {offsetX, offsetY} = nativeEvent;\n\n      const isChartClick =\n        nativeEvent.type === 'click' &&\n        offsetX <= instance.chartArea.right &&\n        offsetX >= instance.chartArea.left &&\n        offsetY <= instance.chartArea.bottom &&\n        offsetY >= instance.chartArea.top;\n\n      if (!isChartClick || !nativeEvent.shiftKey) {\n        return;\n      }\n\n      // category scale returns index here for some reason\n      const labelIndex = xAxis.getValueForPixel(offsetX);\n      const partitionName = instance.data.labels[labelIndex];\n      setHiddenPartitions((current) => ({\n        ...current,\n        [partitionName]: !current[partitionName],\n      }));\n    }, []);\n\n    const defaultOptions = useMemo(() => {\n      if (showLargeGraphMessage) {\n        return null;\n      }\n      const titleOptions = title ? {display: true, text: title} : undefined;\n      const scales = yLabel\n        ? {\n            y: {\n              id: 'y',\n              title: {display: true, text: yLabel, color: rgbColors[Colors.textLighter()]},\n              grid: {\n                color: rgbColors[Colors.keylineDefault()],\n              },\n              ticks: {\n                color: rgbColors[Colors.textLighter()],\n                font: {\n                  size: 12,\n                  family: FontFamily.monospace,\n                },\n              },\n            },\n            x: {\n              id: 'x',\n              title: {display: true, text: title, color: rgbColors[Colors.textLighter()]},\n              grid: {\n                color: rgbColors[Colors.keylineDefault()],\n              },\n              ticks: {\n                color: rgbColors[Colors.textLighter()],\n                font: {\n                  size: 12,\n                  family: FontFamily.monospace,\n                },\n              },\n            },\n          }\n        : undefined;\n\n      return {\n        title: titleOptions,\n        animation: false as const,\n        scales,\n        plugins: {\n          legend: {\n            display: false,\n            onClick: (_e: ChartEvent, _legendItem: any) => {},\n          },\n        },\n        onClick: onGraphClick,\n        maintainAspectRatio: false,\n      };\n    }, [onGraphClick, rgbColors, showLargeGraphMessage, title, yLabel]);\n\n    const {jobData, stepData} = useMemo(() => {\n      if (showLargeGraphMessage) {\n        return {jobData: [], stepData: {}};\n      }\n      const jobData: Point[] = [];\n      const stepData = {};\n\n      partitionNames.forEach((partitionName) => {\n        const hidden = !!hiddenPartitions[partitionName];\n        if (jobDataByPartition) {\n          jobData.push({\n            x: partitionName,\n            y: !hidden ? jobDataByPartition[partitionName] : undefined,\n          });\n        }\n\n        if (stepDataByPartition) {\n          const stepDataByKey = stepDataByPartition[partitionName];\n          Object.entries(stepDataByKey || {}).forEach(([stepKey, step]) => {\n            if (hiddenStepKeys?.includes(stepKey) || !step) {\n              return;\n            }\n            (stepData as any)[stepKey] = [\n              ...((stepData as any)[stepKey] || []),\n              {\n                x: partitionName,\n                y: !hidden ? step : undefined,\n              },\n            ];\n          });\n        }\n      });\n\n      // stepData may have holes due to missing runs or missing steps.  For these to\n      // render properly, fill in the holes with `undefined` values.\n      Object.keys(stepData).forEach((stepKey) => {\n        (stepData as any)[stepKey] = _fillPartitions(partitionNames, (stepData as any)[stepKey]);\n      });\n\n      return {jobData, stepData};\n    }, [\n      hiddenPartitions,\n      hiddenStepKeys,\n      jobDataByPartition,\n      partitionNames,\n      showLargeGraphMessage,\n      stepDataByPartition,\n    ]);\n\n    const allLabel = isJob ? 'Total job' : 'Total pipeline';\n    const graphData = useMemo(\n      () =>\n        showLargeGraphMessage\n          ? null\n          : {\n              labels: partitionNames,\n              datasets: [\n                ...(!jobDataByPartition || (hiddenStepKeys && hiddenStepKeys.includes(allLabel))\n                  ? []\n                  : [\n                      {\n                        label: allLabel,\n                        data: jobData,\n                        borderColor: rgbColors[Colors.borderDefault()],\n                        backgroundColor: rgbColors[Colors.dataVizBlurple()],\n                      },\n                    ]),\n                ...Object.keys(stepData).map((stepKey) => ({\n                  label: stepKey,\n                  data: stepData[stepKey as keyof typeof stepData],\n                  borderColor: colorHash(stepKey),\n                  backgroundColor: rgbColors[Colors.dataVizBlurple()],\n                })),\n              ],\n            },\n      [\n        allLabel,\n        hiddenStepKeys,\n        jobData,\n        jobDataByPartition,\n        partitionNames,\n        rgbColors,\n        showLargeGraphMessage,\n        stepData,\n      ],\n    );\n\n    if (graphData && defaultOptions) {\n      // Passing graphData as a closure prevents ChartJS from trying to isEqual, which is fairly\n      // unlikely to save a render and is time consuming given the size of the data structure.\n      // We have a useMemo around the entire <PartitionGraphSet /> and there aren't many extra renders.\n      return (\n        <PartitionGraphContainer>\n          <Line data={graphData} height={300} options={defaultOptions} ref={chart} />\n        </PartitionGraphContainer>\n      );\n    }\n    return (\n      <NonIdealState\n        icon=\"warning\"\n        title=\"Large number of data points\"\n        description={\n          <Box flex={{direction: 'column', gap: 8}}>\n            There are {numberFormatter.format(partitionNames.length)} datapoints in this graph. This\n            might crash the browser.\n            <div>\n              <Button\n                intent=\"primary\"\n                onClick={() => {\n                  setShowLargeGraphMessage(false);\n                }}\n              >\n                Show anyway\n              </Button>\n            </div>\n          </Box>\n        }\n      />\n    );\n  },\n);\n\nconst _fillPartitions = (partitionNames: string[], points: Point[]) => {\n  const pointData = {};\n  points.forEach((point) => {\n    (pointData as any)[point.x] = point.y;\n  });\n\n  return partitionNames.map((partitionName) => ({\n    x: partitionName,\n    y: (pointData as any)[partitionName],\n  }));\n};\n\nconst PartitionGraphContainer = styled.div`\n  display: flex;\n  color: ${Colors.textLight()};\n  padding: 24px 12px;\n  text-decoration: none;\n`;\n","import {\n  Box,\n  Button,\n  Dialog,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Subheading,\n  Tooltip,\n  useViewport,\n} from '@dagster-io/ui-components';\nimport React, {useCallback, useEffect, useLayoutEffect, useMemo, useState} from 'react';\n\nimport {BackfillPartitionSelector} from './BackfillSelector';\nimport {JobBackfillsTable} from './JobBackfillsTable';\nimport {PartitionGraph} from './PartitionGraph';\nimport {PartitionStatus} from './PartitionStatus';\nimport {PartitionPerOpStatus, getVisibleItemCount} from './PartitionStepStatus';\nimport {GRID_FLOATING_CONTAINER_WIDTH} from './RunMatrixUtils';\nimport {\n  OpJobPartitionSetFragment,\n  OpJobPartitionStatusFragment,\n  PartitionsStatusQuery,\n  PartitionsStatusQueryVariables,\n} from './types/OpJobPartitionsView.types';\nimport {PartitionRuns} from './useMatrixData';\nimport {usePartitionStepQuery} from './usePartitionStepQuery';\nimport {QueryResult, gql, useQuery} from '../apollo-client';\nimport {usePermissionsForLocation} from '../app/Permissions';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {RunStatus} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ntype PartitionStatus = OpJobPartitionStatusFragment;\n\nconst simpleCache = new Map<\n  string,\n  QueryResult<PartitionsStatusQuery, PartitionsStatusQueryVariables>\n>();\n\nexport const OpJobPartitionsView = React.memo(\n  ({partitionSetName, repoAddress}: {partitionSetName: string; repoAddress: RepoAddress}) => {\n    const repositorySelector = repoAddressToSelector(repoAddress);\n    const variables = useMemo(\n      () => ({partitionSetName, repositorySelector}),\n      [partitionSetName, repositorySelector],\n    );\n    const cacheKey = useMemo(() => JSON.stringify(variables), [variables]);\n    const cachedResult = useMemo(() => simpleCache.get(cacheKey), [cacheKey]);\n    const currentQueryResult = useQuery<PartitionsStatusQuery, PartitionsStatusQueryVariables>(\n      PARTITIONS_STATUS_QUERY,\n      {\n        variables: {partitionSetName, repositorySelector},\n        notifyOnNetworkStatusChange: true,\n        fetchPolicy: 'no-cache',\n      },\n    );\n\n    useLayoutEffect(() => {\n      if (currentQueryResult) {\n        simpleCache.set(cacheKey, currentQueryResult);\n      }\n    }, [cacheKey, currentQueryResult]);\n    const queryResult = currentQueryResult.data\n      ? currentQueryResult\n      : (cachedResult ?? currentQueryResult);\n    const {data, loading} = queryResult;\n\n    if (!data) {\n      if (loading) {\n        return (\n          <Box padding={32} flex={{direction: 'column', alignItems: 'center'}}>\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <Spinner purpose=\"body-text\" />\n              <div>Loading partitions…</div>\n            </Box>\n          </Box>\n        );\n      }\n\n      return (\n        <Box padding={32}>\n          <NonIdealState\n            icon=\"error\"\n            title=\"An error occurred\"\n            description=\"An unexpected error occurred.\"\n          />\n        </Box>\n      );\n    }\n\n    const {partitionSetOrError} = data;\n    if (partitionSetOrError.__typename === 'PartitionSetNotFoundError') {\n      return (\n        <Box padding={32}>\n          <NonIdealState\n            icon=\"search\"\n            title=\"Partition set not found\"\n            description={partitionSetOrError.message}\n          />\n        </Box>\n      );\n    }\n\n    if (partitionSetOrError.__typename === 'PythonError') {\n      return (\n        <Box padding={32}>\n          <PythonErrorInfo error={partitionSetOrError} />\n        </Box>\n      );\n    }\n\n    if (partitionSetOrError.partitionsOrError.__typename === 'PythonError') {\n      return (\n        <Box padding={32}>\n          <PythonErrorInfo error={partitionSetOrError.partitionsOrError} />\n        </Box>\n      );\n    }\n\n    const partitionNames = partitionSetOrError.partitionsOrError.results.map(({name}) => name);\n\n    return (\n      <OpJobPartitionsViewContent\n        partitionNames={partitionNames}\n        partitionSet={partitionSetOrError}\n        repoAddress={repoAddress}\n        partitionsQueryResult={currentQueryResult}\n      />\n    );\n  },\n);\n\nexport function usePartitionDurations(partitions: PartitionRuns[]) {\n  return useMemo(() => {\n    const stepDurationData: {[name: string]: {[key: string]: (number | undefined)[]}} = {};\n    const runDurationData: {[name: string]: number | undefined} = {};\n\n    partitions.forEach((p) => {\n      if (!p.runsLoaded || p.runs.length === 0) {\n        return;\n      }\n      const sortedRuns = p.runs.sort((a, b) => a.startTime || 0 - (b.startTime || 0));\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const lastRun = sortedRuns[sortedRuns.length - 1]!;\n      stepDurationData[p.name] = {};\n      runDurationData[p.name] =\n        lastRun?.endTime && lastRun?.startTime ? lastRun.endTime - lastRun.startTime : undefined;\n\n      lastRun.stepStats.forEach((s) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        stepDurationData[p.name]![s.stepKey] = [\n          s.endTime && s.startTime ? s.endTime - s.startTime : undefined,\n        ];\n      });\n    });\n\n    return {runDurationData, stepDurationData};\n  }, [partitions]);\n}\n\nexport const OpJobPartitionsViewContent = React.memo(\n  ({\n    partitionSet,\n    partitionNames,\n    repoAddress,\n    partitionsQueryResult,\n  }: {\n    partitionNames: string[];\n    partitionSet: OpJobPartitionSetFragment;\n    repoAddress: RepoAddress;\n    partitionsQueryResult: QueryResult<PartitionsStatusQuery, PartitionsStatusQueryVariables>;\n  }) => {\n    const {\n      permissions: {canLaunchPartitionBackfill},\n      disabledReasons,\n    } = usePermissionsForLocation(repoAddress.location);\n    const {viewport, containerProps} = useViewport();\n\n    const [pageSize, setPageSize] = useState(60);\n    const [offset, setOffset] = useState<number>(0);\n    const [showSteps, setShowSteps] = useState(false);\n    const [showBackfillSetup, setShowBackfillSetup] = useState(false);\n    const [blockDialog, setBlockDialog] = useState(false);\n    const repositorySelector = repoAddressToSelector(repoAddress);\n    const [backfillRefetchCounter, setBackfillRefetchCounter] = useState(0);\n\n    const partitions = usePartitionStepQuery({\n      partitionSetName: partitionSet.name,\n      partitionTagName: DagsterTag.Partition,\n      partitionNames,\n      pageSize,\n      runsFilter: [],\n      repositorySelector,\n      jobName: partitionSet.pipelineName,\n      offset,\n      skipQuery: !showSteps,\n    });\n\n    useEffect(() => {\n      if (viewport.width && !showSteps) {\n        // magical numbers to approximate the size of the window, which is calculated in the step\n        // status component.  This approximation is to make sure that the window does not jump as\n        // the pageSize gets recalculated\n        const approxPageSize = getVisibleItemCount(viewport.width - GRID_FLOATING_CONTAINER_WIDTH);\n        setPageSize(approxPageSize);\n      }\n    }, [viewport.width, showSteps, setPageSize]);\n\n    const selectedPartitions = useMemo(() => {\n      return showSteps\n        ? partitionNames.slice(\n            Math.max(0, partitionNames.length - 1 - offset - pageSize),\n            partitionNames.length - offset,\n          )\n        : partitionNames;\n    }, [offset, pageSize, partitionNames, showSteps]);\n\n    const stepDurationData = usePartitionDurations(partitions).stepDurationData;\n\n    const onSubmit = useCallback(() => setBlockDialog(true), []);\n\n    const selectPartitionNamesSet = useMemo(\n      () => new Set(selectedPartitions),\n      [selectedPartitions],\n    );\n\n    const {partitionStatusesOrError} = partitionSet;\n    const partitionStatuses = useMemo(() => {\n      return partitionStatusesOrError.__typename === 'PartitionStatuses'\n        ? partitionStatusesOrError.results\n        : [];\n    }, [partitionStatusesOrError]);\n\n    const {runStatusData, runDurationData} = useMemo(() => {\n      // Note: This view reads \"run duration\" from the `partitionStatusesOrError` GraphQL API,\n      // rather than looking at the duration of the most recent run returned in `partitions` above\n      // so that the latter can be loaded when you click \"Show per-step status\" only.\n      const runStatusData: {[name: string]: RunStatus} = {};\n      const runDurationData: {[name: string]: number | undefined} = {};\n\n      partitionStatuses.forEach((p) => {\n        runStatusData[p.partitionName] = p.runStatus || RunStatus.NOT_STARTED;\n        if (selectPartitionNamesSet.has(p.partitionName)) {\n          runDurationData[p.partitionName] = p.runDuration || undefined;\n        }\n      });\n      return {runStatusData, runDurationData};\n    }, [partitionStatuses, selectPartitionNamesSet]);\n\n    const health = useMemo(() => {\n      return {runStatusForPartitionKey: (name: string) => runStatusData[name]};\n    }, [runStatusData]);\n\n    return (\n      <div>\n        <Dialog\n          canEscapeKeyClose={!blockDialog}\n          canOutsideClickClose={!blockDialog}\n          onClose={() => setShowBackfillSetup(false)}\n          style={{width: 800, zIndex: 1000}}\n          title={`Launch ${partitionSet.pipelineName} backfill`}\n          isOpen={showBackfillSetup}\n        >\n          {showBackfillSetup && (\n            <BackfillPartitionSelector\n              partitionSetName={partitionSet.name}\n              partitionNames={partitionNames}\n              runStatusData={runStatusData}\n              refreshing={partitionsQueryResult.loading}\n              pipelineName={partitionSet.pipelineName}\n              onCancel={() => setShowBackfillSetup(false)}\n              onLaunch={(_backfillId, _stepQuery) => {\n                setBackfillRefetchCounter(backfillRefetchCounter + 1);\n                setShowBackfillSetup(false);\n              }}\n              onSubmit={onSubmit}\n              repoAddress={repoAddress}\n            />\n          )}\n        </Dialog>\n\n        <Box\n          flex={{justifyContent: 'space-between', direction: 'row', alignItems: 'center'}}\n          border=\"bottom\"\n          padding={{vertical: 16, horizontal: 24}}\n        >\n          <Subheading>Status</Subheading>\n          <Box flex={{gap: 8}}>\n            <Button onClick={() => setShowSteps(!showSteps)}>\n              {showSteps ? 'Hide per-step status' : 'Show per-step status'}\n            </Button>\n            <Button\n              onClick={() => partitionsQueryResult.refetch()}\n              loading={partitionsQueryResult.loading}\n              disabled={partitionsQueryResult.loading}\n            >\n              Refresh\n            </Button>\n            {canLaunchPartitionBackfill ? (\n              <Button\n                icon={<Icon name=\"add_circle\" />}\n                onClick={() => {\n                  void partitionsQueryResult.refetch();\n                  setShowBackfillSetup(!showBackfillSetup);\n                }}\n              >\n                Launch backfill…\n              </Button>\n            ) : (\n              <Tooltip content={disabledReasons.canLaunchPartitionBackfill}>\n                <Button icon={<Icon name=\"add_circle\" />} disabled>\n                  Launch backfill…\n                </Button>\n              </Tooltip>\n            )}\n          </Box>\n        </Box>\n        <Box flex={{direction: 'row', alignItems: 'center'}} border=\"bottom\" padding={{left: 8}}>\n          <CountBox count={partitionNames.length} label=\"Total partitions\" />\n          <CountBox\n            count={useMemo(\n              () => partitionNames.filter((x) => runStatusData[x] === RunStatus.FAILURE).length,\n              [partitionNames, runStatusData],\n            )}\n            label=\"Failed partitions\"\n          />\n          <CountBox\n            count={useMemo(\n              () =>\n                partitionNames.filter(\n                  (x) => !runStatusData[x] || runStatusData[x] === RunStatus.NOT_STARTED,\n                ).length,\n              [partitionNames, runStatusData],\n            )}\n            label=\"Missing partitions\"\n          />\n        </Box>\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <div {...containerProps}>\n            <PartitionStatus\n              partitionNames={partitionNames}\n              health={health}\n              selected={showSteps ? selectedPartitions : undefined}\n              selectionWindowSize={pageSize}\n              onClick={useCallback(\n                (partitionName: string) => {\n                  const maxIdx = partitionNames.length - 1;\n                  const selectedIdx = partitionNames.indexOf(partitionName);\n                  const nextOffset = Math.min(\n                    maxIdx,\n                    Math.max(0, maxIdx - selectedIdx - 0.5 * pageSize),\n                  );\n                  setOffset(nextOffset);\n                  if (!showSteps) {\n                    setShowSteps(true);\n                  }\n                },\n                [pageSize, partitionNames, showSteps],\n              )}\n              tooltipMessage=\"Click to view per-step status\"\n            />\n          </div>\n          {showSteps ? (\n            <Box margin={{top: 16}}>\n              <PartitionPerOpStatus\n                partitionNames={partitionNames}\n                partitions={partitions}\n                pipelineName={partitionSet.pipelineName}\n                repoAddress={repoAddress}\n                setPageSize={setPageSize}\n                offset={offset}\n                setOffset={setOffset}\n              />\n            </Box>\n          ) : null}\n        </Box>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top-and-bottom\">\n          <Subheading>Run duration</Subheading>\n        </Box>\n        <Box margin={24}>\n          <PartitionGraph\n            isJob={true}\n            title=\"Execution time by partition\"\n            yLabel=\"Execution time (secs)\"\n            partitionNames={showSteps ? selectedPartitions : partitionNames}\n            jobDataByPartition={runDurationData}\n          />\n        </Box>\n        {showSteps ? (\n          <>\n            <Box padding={{horizontal: 24, vertical: 16}}>\n              <Subheading>Step duration</Subheading>\n            </Box>\n            <Box margin={24}>\n              <PartitionGraph\n                isJob={true}\n                title=\"Execution time by partition\"\n                yLabel=\"Execution time (secs)\"\n                partitionNames={selectedPartitions}\n                stepDataByPartition={stepDurationData}\n              />\n            </Box>\n          </>\n        ) : null}\n        <Box\n          padding={{horizontal: 24, vertical: 16}}\n          border=\"top-and-bottom\"\n          style={{marginBottom: -1}}\n        >\n          <Subheading>Backfill history</Subheading>\n        </Box>\n        <Box margin={{bottom: 20}}>\n          <JobBackfillsTable\n            partitionSetName={partitionSet.name}\n            repositorySelector={repositorySelector}\n            partitionNames={partitionNames}\n            refetchCounter={backfillRefetchCounter}\n          />\n        </Box>\n      </div>\n    );\n  },\n);\n\nexport const CountBox = ({count, label}: {count: number; label: string}) => (\n  <Box padding={16} style={{flex: 1}} border=\"right\">\n    <div style={{fontSize: 18, marginBottom: 4}}>\n      <strong>{count}</strong>\n    </div>\n    <div>{label}</div>\n  </Box>\n);\n\nconst PARTITIONS_STATUS_QUERY = gql`\n  query PartitionsStatusQuery(\n    $partitionSetName: String!\n    $repositorySelector: RepositorySelector!\n  ) {\n    partitionSetOrError(\n      repositorySelector: $repositorySelector\n      partitionSetName: $partitionSetName\n    ) {\n      ... on PartitionSet {\n        id\n        ...OpJobPartitionSet\n      }\n      ... on PartitionSetNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment OpJobPartitionSet on PartitionSet {\n    id\n    name\n    pipelineName\n    partitionsOrError {\n      ... on Partitions {\n        results {\n          name\n        }\n      }\n      ...PythonErrorFragment\n    }\n    partitionStatusesOrError {\n      ... on PartitionStatuses {\n        results {\n          id\n          ...OpJobPartitionStatus\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment OpJobPartitionStatus on PartitionStatus {\n    id\n    partitionName\n    runStatus\n    runDuration\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Box, Button, Subheading, useViewport} from '@dagster-io/ui-components';\nimport React, {useEffect, useMemo, useState} from 'react';\n\nimport {JobBackfillsTable} from './JobBackfillsTable';\nimport {CountBox, usePartitionDurations} from './OpJobPartitionsView';\nimport {PartitionGraph} from './PartitionGraph';\nimport {PartitionStatus} from './PartitionStatus';\nimport {PartitionPerAssetStatus, getVisibleItemCount} from './PartitionStepStatus';\nimport {GRID_FLOATING_CONTAINER_WIDTH} from './RunMatrixUtils';\nimport {allPartitionsRange} from './SpanRepresentation';\nimport {usePartitionStepQuery} from './usePartitionStepQuery';\nimport {toGraphId} from '../asset-graph/Utils';\nimport {useAssetGraphData} from '../asset-graph/useAssetGraphData';\nimport {AssetPartitionStatus} from '../assets/AssetPartitionStatus';\nimport {LaunchAssetExecutionButton} from '../assets/LaunchAssetExecutionButton';\nimport {\n  explodePartitionKeysInSelectionMatching,\n  isTimeseriesDimension,\n  mergedAssetHealth,\n} from '../assets/MultipartitioningSupport';\nimport {keyCountInSelections, usePartitionHealthData} from '../assets/usePartitionHealthData';\nimport {RepositorySelector} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nexport const AssetJobPartitionsView = React.memo(\n  ({\n    partitionSetName,\n    repoAddress,\n    pipelineName,\n  }: {\n    pipelineName: string;\n    partitionSetName: string;\n    repoAddress: RepoAddress;\n  }) => {\n    const {viewport, containerProps} = useViewport();\n    const repositorySelector = repoAddressToSelector(repoAddress);\n\n    const pipelineSelector = useMemo(\n      () => ({\n        pipelineName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      }),\n      [pipelineName, repoAddress.location, repoAddress.name],\n    );\n\n    const assetGraph = useAssetGraphData('*', {pipelineSelector});\n\n    const assetKeysWithPartitions = useMemo(() => {\n      return assetGraph.graphAssetKeys.filter((key) => {\n        return assetGraph.assetGraphData?.nodes[toGraphId(key)]?.definition.isPartitioned;\n      });\n    }, [assetGraph]);\n\n    const assetHealth = usePartitionHealthData(\n      assetKeysWithPartitions.length\n        ? assetKeysWithPartitions\n        : assetGraph.graphAssetKeys[0]\n          ? [assetGraph.graphAssetKeys[0]]\n          : [],\n    );\n\n    const {total, missing, merged} = useMemo(() => {\n      const merged = mergedAssetHealth(assetHealth.filter((h) => h.dimensions.length > 0));\n      const selection = merged.dimensions.map((d) => ({\n        selectedKeys: d.partitionKeys,\n        selectedRanges: [allPartitionsRange(d)],\n        dimension: d,\n      }));\n      const missing = explodePartitionKeysInSelectionMatching(selection, (dIdxs) =>\n        merged.stateForKeyIdx(dIdxs).includes(AssetPartitionStatus.MISSING),\n      );\n\n      return {\n        merged,\n        total: keyCountInSelections(selection),\n        missing: missing.length,\n      };\n    }, [assetHealth]);\n\n    const [pageSize, setPageSize] = useState(60);\n    const [offset, setOffset] = useState<number>(0);\n    const [showAssets, setShowAssets] = useState(false);\n\n    useEffect(() => {\n      if (viewport.width) {\n        // magical numbers to approximate the size of the window, which is calculated in the step\n        // status component.  This approximation is to make sure that the window does not jump as\n        // the pageSize gets recalculated\n        const approxPageSize = getVisibleItemCount(viewport.width - GRID_FLOATING_CONTAINER_WIDTH);\n        setPageSize(approxPageSize);\n      }\n    }, [viewport.width, setPageSize]);\n\n    const {selectedDimensionKeys, dimensionIdx, dimension, dimensionKeys} = useMemo(() => {\n      let dimensionIdx = merged.dimensions.findIndex(isTimeseriesDimension);\n      if (dimensionIdx === -1) {\n        dimensionIdx = 0; // may as well show something\n      }\n      const dimension = merged.dimensions[dimensionIdx] ? merged.dimensions[dimensionIdx] : null;\n      const dimensionKeys = dimension?.partitionKeys || [];\n      return {\n        selectedDimensionKeys: dimensionKeys.slice(\n          Math.max(0, dimensionKeys.length - 1 - offset - pageSize),\n          dimensionKeys.length - offset,\n        ),\n        dimensionIdx,\n        dimension,\n        dimensionKeys,\n      };\n    }, [merged.dimensions, offset, pageSize]);\n\n    return (\n      <div>\n        <Box\n          flex={{justifyContent: 'space-between', direction: 'row', alignItems: 'center'}}\n          border=\"bottom\"\n          padding={{vertical: 16, horizontal: 24}}\n        >\n          <Subheading>Status</Subheading>\n          <Box flex={{gap: 8}}>\n            <Button onClick={() => setShowAssets(!showAssets)}>\n              {showAssets ? 'Hide per-asset status' : 'Show per-asset status'}\n            </Button>\n            <LaunchAssetExecutionButton\n              scope={{all: assetGraph.graphQueryItems.map((g) => g.node), skipAllTerm: true}}\n              preferredJobName={pipelineName}\n            />\n          </Box>\n        </Box>\n        <Box flex={{direction: 'row', alignItems: 'center'}} border=\"bottom\" padding={{left: 8}}>\n          <CountBox count={total} label=\"Total partitions\" />\n          <CountBox count={missing} label=\"Missing partitions\" />\n        </Box>\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <div {...containerProps}>\n            <PartitionStatus\n              partitionNames={dimensionKeys}\n              splitPartitions={dimension ? !isTimeseriesDimension(dimension) : false}\n              health={{ranges: merged.rangesForSingleDimension(dimensionIdx)}}\n              selected={selectedDimensionKeys}\n              selectionWindowSize={pageSize}\n              tooltipMessage=\"Click to view per-asset status\"\n              onClick={(partitionName) => {\n                const maxIdx = dimensionKeys.length - 1;\n                const selectedIdx = dimensionKeys.indexOf(partitionName);\n                const nextOffset = Math.min(\n                  maxIdx,\n                  Math.max(0, maxIdx - selectedIdx - 0.5 * pageSize),\n                );\n                setOffset(nextOffset);\n              }}\n            />\n          </div>\n          {showAssets && dimension && (\n            <Box margin={{top: 16}}>\n              <PartitionPerAssetStatus\n                rangeDimensionIdx={dimensionIdx}\n                rangeDimension={dimension}\n                assetHealth={assetHealth}\n                assetQueryItems={assetGraph.graphQueryItems}\n                pipelineName={pipelineName}\n                setPageSize={setPageSize}\n                offset={offset}\n                setOffset={setOffset}\n              />\n            </Box>\n          )}\n        </Box>\n        {showAssets && (\n          <AssetJobPartitionGraphs\n            repositorySelector={repositorySelector}\n            pipelineName={pipelineName}\n            partitionSetName={partitionSetName}\n            multidimensional={(merged?.dimensions.length || 0) > 1}\n            dimensionName={dimension ? dimension.name : null}\n            dimensionKeys={dimensionKeys}\n            selected={selectedDimensionKeys}\n            offset={offset}\n            pageSize={pageSize}\n          />\n        )}\n        <Box\n          padding={{horizontal: 24, vertical: 16}}\n          border=\"top-and-bottom\"\n          style={{marginBottom: -1}}\n        >\n          <Subheading>Backfill history</Subheading>\n        </Box>\n        <Box margin={{bottom: 20}}>\n          <JobBackfillsTable\n            partitionSetName={partitionSetName}\n            repositorySelector={repositorySelector}\n            partitionNames={dimensionKeys}\n            refetchCounter={1}\n          />\n        </Box>\n      </div>\n    );\n  },\n);\n\nconst AssetJobPartitionGraphs = React.memo(\n  ({\n    repositorySelector,\n    dimensionKeys,\n    dimensionName,\n    selected,\n    pageSize,\n    partitionSetName,\n    multidimensional,\n    pipelineName,\n    offset,\n  }: {\n    repositorySelector: RepositorySelector;\n    pipelineName: string;\n    partitionSetName: string;\n    multidimensional: boolean;\n    dimensionName: string | null;\n    dimensionKeys: string[];\n    selected: string[];\n    pageSize: number;\n    offset: number;\n  }) => {\n    const partitions = usePartitionStepQuery({\n      partitionSetName,\n      partitionTagName: multidimensional\n        ? `${DagsterTag.Partition}/${dimensionName}`\n        : DagsterTag.Partition,\n      partitionNames: dimensionKeys,\n      repositorySelector,\n      pageSize,\n      runsFilter: [],\n      jobName: pipelineName,\n      offset,\n      skipQuery: !dimensionName,\n    });\n\n    const {stepDurationData, runDurationData} = usePartitionDurations(partitions);\n\n    return (\n      <>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top-and-bottom\">\n          <Subheading>Run duration</Subheading>\n        </Box>\n\n        <Box margin={24}>\n          <PartitionGraph\n            isJob={true}\n            title=\"Execution time by partition\"\n            yLabel=\"Execution time (secs)\"\n            partitionNames={selected}\n            jobDataByPartition={runDurationData}\n          />\n        </Box>\n        <Box padding={{horizontal: 24, vertical: 16}} border=\"top-and-bottom\">\n          <Subheading>Step durations</Subheading>\n        </Box>\n        <Box margin={24}>\n          <PartitionGraph\n            isJob={true}\n            title=\"Execution time by partition\"\n            yLabel=\"Execution time (secs)\"\n            partitionNames={selected}\n            stepDataByPartition={stepDurationData}\n          />\n        </Box>\n      </>\n    );\n  },\n);\n","import {useMemo} from 'react';\n\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  AssetJobPartitionSetsQuery,\n  AssetJobPartitionSetsQueryVariables,\n} from './types/usePartitionNameForPipeline.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {RepoAddress} from '../workspace/types';\n\nexport function usePartitionNameForPipeline(repoAddress: RepoAddress, pipelineName: string) {\n  const queryResult = useQuery<AssetJobPartitionSetsQuery, AssetJobPartitionSetsQueryVariables>(\n    ASSET_JOB_PARTITION_SETS_QUERY,\n    {\n      skip: !pipelineName,\n      variables: {\n        repositoryLocationName: repoAddress.location,\n        repositoryName: repoAddress.name,\n        pipelineName,\n      },\n    },\n  );\n\n  const {data: partitionSetsData} = queryResult;\n\n  return useMemo(\n    () => ({\n      partitionSet:\n        partitionSetsData?.partitionSetsOrError.__typename === 'PartitionSets'\n          ? partitionSetsData.partitionSetsOrError.results[0]\n          : undefined,\n      partitionSetError:\n        partitionSetsData?.partitionSetsOrError.__typename === 'PipelineNotFoundError' ||\n        partitionSetsData?.partitionSetsOrError.__typename === 'PythonError'\n          ? partitionSetsData.partitionSetsOrError\n          : undefined,\n    }),\n    [partitionSetsData],\n  );\n}\n\nexport const ASSET_JOB_PARTITION_SETS_QUERY = gql`\n  query AssetJobPartitionSetsQuery(\n    $pipelineName: String!\n    $repositoryName: String!\n    $repositoryLocationName: String!\n  ) {\n    partitionSetsOrError(\n      pipelineName: $pipelineName\n      repositorySelector: {\n        repositoryName: $repositoryName\n        repositoryLocationName: $repositoryLocationName\n      }\n    ) {\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PartitionSets {\n        results {\n          id\n          name\n          mode\n          solidSelection\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Box, NonIdealState} from '@dagster-io/ui-components';\nimport {useParams} from 'react-router-dom';\n\nimport {AssetJobPartitionsView} from './AssetJobPartitionsView';\nimport {OpJobPartitionsView} from './OpJobPartitionsView';\nimport {usePartitionNameForPipeline} from '../assets/usePartitionNameForPipeline';\nimport {explorerPathFromString, useStripSnapshotFromPath} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {LoadingSpinner} from '../ui/Loading';\nimport {useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelinePartitionsRoot = (props: Props) => {\n  const {repoAddress} = props;\n  const params = useParams<{pipelinePath: string}>();\n  const {pipelinePath} = params;\n\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const pipelineInfo = repo?.repository.pipelines.find(\n    (pipelineOrJob) => pipelineOrJob.name === pipelineName,\n  );\n  const isJob = !!pipelineInfo?.isJob;\n  const isAssetJob = !!pipelineInfo?.isAssetJob;\n\n  useJobTitle(explorerPath, isJob);\n  useStripSnapshotFromPath(params);\n\n  const {partitionSet, partitionSetError} = usePartitionNameForPipeline(repoAddress, pipelineName);\n\n  if (!partitionSet && !partitionSetError) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n  if (partitionSetError) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState icon=\"error\" title=\"Partitions\" description={partitionSetError.message} />\n      </Box>\n    );\n  }\n\n  if (!partitionSet) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"Partitions\"\n          description={\n            <div>\n              There are no partition sets defined for {isJob ? 'job' : 'pipeline'}{' '}\n              <code>{pipelineName}</code>.\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  return isAssetJob ? (\n    <AssetJobPartitionsView\n      pipelineName={pipelineName}\n      partitionSetName={partitionSet.name}\n      repoAddress={repoAddress}\n    />\n  ) : (\n    <OpJobPartitionsView partitionSetName={partitionSet.name} repoAddress={repoAddress} />\n  );\n};\n","import {Redirect, Switch} from 'react-router-dom';\nimport {JobFallthroughRoot} from 'shared/pipelines/JobFallthroughRoot.oss';\n\nimport {PipelineOrJobDisambiguationRoot} from './PipelineOrJobDisambiguationRoot';\nimport {PipelineRunsFeedRoot} from './PipelineRunsFeedRoot';\nimport {Route} from '../app/Route';\nimport {JobOrAssetLaunchpad} from '../launchpad/LaunchpadRoot';\nimport {LaunchpadSetupFromRunRoot} from '../launchpad/LaunchpadSetupFromRunRoot';\nimport {LaunchpadSetupRoot} from '../launchpad/LaunchpadSetupRoot';\nimport {PipelineNav} from '../nav/PipelineNav';\nimport {PipelinePartitionsRoot} from '../partitions/PipelinePartitionsRoot';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const PipelineRoot = (props: Props) => {\n  const {repoAddress} = props;\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <PipelineNav repoAddress={repoAddress} />\n      <Switch>\n        <Route path=\"/locations/:repoPath/pipeline_or_job/:pipelinePath(/?.*)\">\n          <PipelineOrJobDisambiguationRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/playground/setup',\n            '/locations/:repoPath/jobs/:pipelinePath/playground/setup',\n          ]}\n        >\n          <LaunchpadSetupRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/playground/setup-from-run/:runId',\n            '/locations/:repoPath/jobs/:pipelinePath/playground/setup-from-run/:runId',\n          ]}\n        >\n          <LaunchpadSetupFromRunRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/playground',\n            '/locations/:repoPath/jobs/:pipelinePath/playground',\n          ]}\n        >\n          <JobOrAssetLaunchpad repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/runs/:runId',\n            '/locations/:repoPath/jobs/:pipelinePath/runs/:runId',\n          ]}\n          render={(props) => <Redirect to={`/runs/${props.match.params.runId}`} />}\n        />\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/runs',\n            '/locations/:repoPath/jobs/:pipelinePath/runs',\n          ]}\n        >\n          <PipelineRunsFeedRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/partitions',\n            '/locations/:repoPath/jobs/:pipelinePath/partitions',\n          ]}\n        >\n          <PipelinePartitionsRoot repoAddress={repoAddress} />\n        </Route>\n        <Route\n          path={[\n            '/locations/:repoPath/pipelines/:pipelinePath/overview',\n            '/locations/:repoPath/jobs/:pipelinePath/overview',\n          ]}\n          render={(props) => (\n            <Redirect to={`/locations/${props.match.url.replace(/\\/overview$/i, '')}`} />\n          )}\n        />\n        <Route path={['/locations/:repoPath/pipelines/(/?.*)', '/locations/:repoPath/jobs/(/?.*)']}>\n          <JobFallthroughRoot repoAddress={repoAddress} />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n","import {RepoAddress} from '../workspace/types';\n\nexport interface Props {\n  repoAddress: RepoAddress;\n  scheduleName: string;\n}\n\nexport const ScheduleAlertDetails = (_props: Props) => null;\n","import {ButtonLink, Caption, Colors, Group} from '@dagster-io/ui-components';\nimport qs from 'qs';\nimport {memo, useCallback, useMemo} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {gql, useLazyQuery} from '../apollo-client';\nimport {\n  SchedulePartitionStatusFragment,\n  SchedulePartitionStatusQuery,\n  SchedulePartitionStatusQueryVariables,\n  SchedulePartitionStatusResultFragment,\n} from './types/SchedulePartitionStatus.types';\nimport {ScheduleFragment} from './types/ScheduleUtils.types';\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../graphql/types';\nimport {StatusTable} from '../instigation/InstigationUtils';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nconst RUN_STATUSES = ['Succeeded', 'Failed', 'Missing', 'Pending'];\n\nconst calculateDisplayStatus = (partition: SchedulePartitionStatusResultFragment) => {\n  switch (partition.runStatus) {\n    case null:\n      return 'Missing';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n      return 'Failed';\n    case RunStatus.MANAGED:\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.STARTED:\n    case RunStatus.STARTING:\n      return 'Pending';\n    default:\n      return assertUnreachable(partition.runStatus);\n  }\n};\n\ninterface Props {\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n}\n\nexport const SchedulePartitionStatus = memo((props: Props) => {\n  const {repoAddress, schedule} = props;\n  const repo = useRepository(repoAddress);\n  const {name: scheduleName, partitionSet, pipelineName} = schedule;\n\n  const partitionSetName = partitionSet?.name;\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  const partitionPath = useMemo(() => {\n    const query = partitionSetName\n      ? qs.stringify(\n          {\n            partitionSet: partitionSetName,\n          },\n          {addQueryPrefix: true},\n        )\n      : '';\n    return `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/partitions${query}`;\n  }, [partitionSetName, isJob, pipelineName]);\n\n  const partitionURL = workspacePathFromAddress(repoAddress, partitionPath);\n\n  const [retrievePartitionStatus, {data, loading}] = useLazyQuery<\n    SchedulePartitionStatusQuery,\n    SchedulePartitionStatusQueryVariables\n  >(SCHEDULE_PARTITION_STATUS_QUERY, {\n    variables: {\n      scheduleSelector: {\n        scheduleName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      },\n    },\n  });\n\n  const onClick = useCallback(() => retrievePartitionStatus(), [retrievePartitionStatus]);\n\n  const loadable = () => {\n    if (loading) {\n      return <Caption style={{color: Colors.textLight()}}>Loading…</Caption>;\n    }\n\n    if (!data) {\n      return (\n        <ButtonLink onClick={onClick}>\n          <Caption>Show coverage</Caption>\n        </ButtonLink>\n      );\n    }\n\n    const partitionFragment = data.scheduleOrError;\n    if (partitionFragment.__typename === 'Schedule') {\n      return (\n        <RetrievedSchedulePartitionStatus\n          schedule={partitionFragment}\n          partitionURL={partitionURL}\n        />\n      );\n    }\n\n    return <Caption style={{color: Colors.textRed()}}>Partition set not found!</Caption>;\n  };\n\n  return (\n    <Group direction=\"column\" spacing={4}>\n      <Link to={partitionURL}>{partitionSetName}</Link>\n      {loadable()}\n    </Group>\n  );\n});\n\nconst RetrievedSchedulePartitionStatus = ({\n  schedule,\n  partitionURL,\n}: {\n  schedule: SchedulePartitionStatusFragment;\n  partitionURL: string;\n}) => {\n  const {partitionSet} = schedule;\n\n  if (!partitionSet || partitionSet.partitionStatusesOrError.__typename !== 'PartitionStatuses') {\n    return <span style={{color: Colors.textLight()}}>None</span>;\n  }\n\n  const partitions = partitionSet.partitionStatusesOrError.results;\n  const partitionsByType = {};\n  partitions.forEach((partition) => {\n    const displayStatus = calculateDisplayStatus(partition);\n    (partitionsByType as any)[displayStatus] = [\n      ...((partitionsByType as any)[displayStatus] || []),\n      partition,\n    ];\n  });\n\n  return (\n    <StatusTable>\n      <tbody>\n        {RUN_STATUSES.map((status) => {\n          if (!(status in partitionsByType)) {\n            return null;\n          }\n          return (\n            <tr key={status}>\n              <td style={{width: '100px'}}>{status}</td>\n              <td>\n                {status === 'Failed' || status === 'Missing' ? (\n                  <Link\n                    to={`${partitionURL}?showFailuresAndGapsOnly=true`}\n                    style={{color: Colors.textDefault()}}\n                  >\n                    {(partitionsByType as any)[status].length}\n                  </Link>\n                ) : (\n                  (partitionsByType as any)[status].length\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StatusTable>\n  );\n};\n\nconst SCHEDULE_PARTITION_STATUS_QUERY = gql`\n  query SchedulePartitionStatusQuery($scheduleSelector: ScheduleSelector!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        ...SchedulePartitionStatusFragment\n      }\n    }\n  }\n\n  fragment SchedulePartitionStatusFragment on Schedule {\n    id\n    mode\n    pipelineName\n    partitionSet {\n      id\n      name\n      partitionStatusesOrError {\n        ... on PartitionStatuses {\n          results {\n            id\n            ...SchedulePartitionStatusResult\n          }\n        }\n      }\n    }\n  }\n\n  fragment SchedulePartitionStatusResult on PartitionStatus {\n    id\n    partitionName\n    runStatus\n  }\n`;\n","import {Button, Tooltip} from '@dagster-io/ui-components';\nimport * as React from 'react';\n\nimport {RESET_SCHEDULE_MUTATION, displayScheduleMutationErrors} from './ScheduleMutations';\nimport {useMutation} from '../apollo-client';\nimport {\n  ResetScheduleMutation,\n  ResetScheduleMutationVariables,\n} from './types/ScheduleMutations.types';\nimport {ScheduleFragment} from './types/ScheduleUtils.types';\nimport {DEFAULT_DISABLED_REASON, usePermissionsForLocation} from '../app/Permissions';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n}\n\nexport const ScheduleResetButton = ({repoAddress, schedule}: Props) => {\n  const {\n    permissions: {canStartSchedule, canStopRunningSchedule},\n  } = usePermissionsForLocation(repoAddress.location);\n\n  const {name} = schedule;\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName: name,\n  };\n\n  const [resetSchedule, {loading: toggleOnInFlight}] = useMutation<\n    ResetScheduleMutation,\n    ResetScheduleMutationVariables\n  >(RESET_SCHEDULE_MUTATION, {\n    onCompleted: displayScheduleMutationErrors,\n  });\n  const onClick = () => {\n    resetSchedule({variables: {scheduleSelector}});\n  };\n\n  const hasPermission = canStartSchedule && canStopRunningSchedule;\n  const disabled = toggleOnInFlight || !hasPermission;\n  const tooltipContent = hasPermission\n    ? `In code, a default status for \"${name}\" has been set to \"${schedule.defaultStatus}\". Click here to reset the schedule status to track the status set in code.`\n    : DEFAULT_DISABLED_REASON;\n\n  return (\n    <Tooltip\n      content={<div style={{maxWidth: '500px', wordBreak: 'break-word'}}>{tooltipContent}</div>}\n      display=\"flex\"\n    >\n      <Button disabled={disabled} onClick={onClick}>\n        Reset schedule status\n      </Button>\n    </Tooltip>\n  );\n};\n","import {\n  Box,\n  Button,\n  Colors,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Mono,\n  NonIdealState,\n  NonIdealStateWrapper,\n  Popover,\n  Spinner,\n  Subheading,\n  Tag,\n  Tooltip,\n  useViewport,\n} from '@dagster-io/ui-components';\nimport {useCallback, useContext, useMemo, useRef, useState} from 'react';\nimport styled from 'styled-components';\n\nimport {RunRequestTable} from './DryRunRequestTable';\nimport {RUN_REQUEST_FRAGMENT} from './RunRequestFragment';\nimport {gql, useMutation, useQuery} from '../apollo-client';\nimport {\n  GetScheduleQuery,\n  GetScheduleQueryVariables,\n  ScheduleDryRunMutation,\n  ScheduleDryRunMutationVariables,\n} from './types/EvaluateScheduleDialog.types';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {assertUnreachable} from '../app/Util';\nimport {useTrackEvent} from '../app/analytics';\nimport {TimeContext} from '../app/time/TimeContext';\nimport {timestampToString} from '../app/time/timestampToString';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment.types';\nimport {ScheduleSelector} from '../graphql/types';\nimport {useLaunchMultipleRunsWithTelemetry} from '../launchpad/useLaunchMultipleRunsWithTelemetry';\nimport {testId} from '../testing/testId';\nimport {buildExecutionParamsListSchedule} from '../util/buildExecutionParamsList';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nexport type ScheduleDryRunInstigationTick = Extract<\n  ScheduleDryRunMutation['scheduleDryRun'],\n  {__typename: 'DryRunInstigationTick'}\n>;\n\nconst locale = navigator.language;\n\ntype Props = {\n  repoAddress: RepoAddress;\n  name: string;\n  onClose: () => void;\n  isOpen: boolean;\n  jobName: string;\n};\n\nexport const EvaluateScheduleDialog = (props: Props) => {\n  return (\n    <Dialog\n      {...props}\n      style={{width: '70vw', display: 'flex'}}\n      title={\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          <Icon name=\"preview_tick\" />\n          <span>Preview tick result for {props.name}</span>\n        </Box>\n      }\n    >\n      <EvaluateSchedule {...props} />\n    </Dialog>\n  );\n};\n\nconst EvaluateSchedule = ({repoAddress, name, onClose, jobName}: Props) => {\n  const trackEvent = useTrackEvent();\n\n  const [selectedTimestamp, setSelectedTimestamp] = useState<{ts: number; label: string}>();\n  const scheduleSelector: ScheduleSelector = useMemo(\n    () => ({\n      repositoryLocationName: repoAddress.location,\n      repositoryName: repoAddress.name,\n      scheduleName: name,\n    }),\n    [repoAddress, name],\n  );\n\n  // query to get the schedule initially\n  const {data: getScheduleData} = useQuery<GetScheduleQuery, GetScheduleQueryVariables>(\n    GET_SCHEDULE_QUERY,\n    {\n      variables: {\n        scheduleSelector,\n      },\n    },\n  );\n\n  // mutation to evaluate the schedule\n  const [scheduleDryRunMutation, {loading: scheduleDryRunMutationLoading}] = useMutation<\n    ScheduleDryRunMutation,\n    ScheduleDryRunMutationVariables\n  >(SCHEDULE_DRY_RUN_MUTATION);\n\n  // mutation to launch all runs\n  const launchMultipleRunsWithTelemetry = useLaunchMultipleRunsWithTelemetry();\n\n  const {\n    timezone: [userTimezone],\n  } = useContext(TimeContext);\n  const [isTickSelectionOpen, setIsTickSelectionOpen] = useState<boolean>(false);\n  const selectedTimestampRef = useRef<{ts: number; label: string} | null>(null);\n  const {viewport, containerProps} = useViewport();\n  const [launching, setLaunching] = useState(false);\n\n  const [scheduleExecutionError, setScheduleExecutionError] = useState<PythonErrorFragment | null>(\n    null,\n  );\n  const [scheduleExecutionData, setScheduleExecutionData] =\n    useState<ScheduleDryRunInstigationTick | null>(null);\n\n  const canSubmitTest = useMemo(() => {\n    return getScheduleData && !scheduleDryRunMutationLoading;\n  }, [getScheduleData, scheduleDryRunMutationLoading]);\n\n  // handle clicking Evaluate button\n  const submitTest = useCallback(async () => {\n    if (!canSubmitTest) {\n      return;\n    }\n\n    const repositorySelector = repoAddressToSelector(repoAddress);\n\n    const result = await scheduleDryRunMutation({\n      variables: {\n        selectorData: {\n          ...repositorySelector,\n          scheduleName: name,\n        },\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        timestamp: selectedTimestampRef.current!.ts,\n      },\n    });\n\n    const data = result.data?.scheduleDryRun;\n\n    if (data) {\n      if (data?.__typename === 'DryRunInstigationTick') {\n        if (data.evaluationResult?.error) {\n          setScheduleExecutionError(data.evaluationResult.error);\n        } else {\n          setScheduleExecutionData(data);\n        }\n      } else if (data?.__typename === 'ScheduleNotFoundError') {\n        showCustomAlert({\n          title: 'Schedule not found',\n          body: `Could not find a schedule named: ${name}`,\n        });\n      } else {\n        setScheduleExecutionError(data);\n      }\n    } else {\n      assertUnreachable('scheduleDryRun Mutation returned no data??' as never);\n    }\n  }, [canSubmitTest, scheduleDryRunMutation, repoAddress, name]);\n\n  const executionParamsList = useMemo(\n    () =>\n      scheduleExecutionData && scheduleSelector\n        ? buildExecutionParamsListSchedule(scheduleExecutionData, scheduleSelector, jobName)\n        : [],\n    [scheduleSelector, scheduleExecutionData, jobName],\n  );\n\n  const canLaunchAll = useMemo(() => {\n    return executionParamsList != null && executionParamsList.length > 0;\n  }, [executionParamsList]);\n\n  // handle clicking Launch all button\n  const onLaunchAll = useCallback(async () => {\n    if (!canLaunchAll) {\n      return;\n    }\n\n    trackEvent('launch-all-schedule');\n    setLaunching(true);\n\n    try {\n      if (executionParamsList) {\n        await launchMultipleRunsWithTelemetry({executionParamsList}, 'toast');\n      }\n    } catch (e) {\n      console.error(e);\n    }\n\n    setLaunching(false);\n    onClose();\n  }, [canLaunchAll, executionParamsList, launchMultipleRunsWithTelemetry, onClose, trackEvent]);\n\n  const content = useMemo(() => {\n    // launching all runs state\n    if (launching) {\n      return (\n        <Box flex={{direction: 'row', gap: 8, justifyContent: 'center', alignItems: 'center'}}>\n          <Spinner purpose=\"body-text\" />\n          <div>Launching runs</div>\n        </Box>\n      );\n    }\n\n    // initial loading state when schedule data hasn't been queried yet\n    if (!getScheduleData) {\n      return (\n        <Box padding={{vertical: 48}} flex={{alignItems: 'center', justifyContent: 'center'}}>\n          <Spinner purpose=\"page\" />\n        </Box>\n      );\n    }\n\n    // error states after getting schedule data\n    if (getScheduleData.scheduleOrError.__typename === 'PythonError') {\n      return <PythonErrorInfo error={getScheduleData.scheduleOrError} />;\n    }\n\n    if (getScheduleData.scheduleOrError.__typename === 'ScheduleNotFoundError') {\n      return (\n        <NonIdealState\n          icon=\"error\"\n          title=\"Schedule not found\"\n          description={`Could not find a schedule named: ${name}`}\n        />\n      );\n    }\n\n    // handle showing results page after clicking Evaluate\n    if (scheduleExecutionData || scheduleExecutionError) {\n      return (\n        <EvaluateScheduleResult\n          repoAddress={repoAddress}\n          name={name}\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          timestamp={selectedTimestampRef.current!.ts}\n          jobName={jobName}\n          scheduleExecutionData={scheduleExecutionData}\n          scheduleExecutionError={scheduleExecutionError}\n        />\n      );\n    }\n\n    // loading state for evaluating\n    if (scheduleDryRunMutationLoading) {\n      return (\n        <Box flex={{direction: 'row', gap: 8, justifyContent: 'center', alignItems: 'center'}}>\n          <Spinner purpose=\"body-text\" />\n          <div>Evaluating schedule</div>\n        </Box>\n      );\n    } else {\n      // tick selection page\n      const timestamps = getScheduleData.scheduleOrError.potentialTickTimestamps.map((ts) => ({\n        ts,\n        label: timestampToString({\n          timestamp: {unix: ts},\n          locale,\n          timezone: userTimezone,\n          timeFormat: {\n            showTimezone: true,\n          },\n        }),\n      }));\n      selectedTimestampRef.current = selectedTimestamp || timestamps[0] || null;\n      return (\n        <Box flex={{direction: 'column', gap: 8}}>\n          <ScheduleDescriptor>Select an evaluation time to simulate</ScheduleDescriptor>\n          <Popover\n            isOpen={isTickSelectionOpen}\n            position=\"bottom-left\"\n            fill={true}\n            content={\n              <Menu style={{maxHeight: '400px', overflow: 'scroll', width: `${viewport.width}px`}}>\n                {timestamps.map((timestamp) => (\n                  <MenuItem\n                    key={timestamp.ts}\n                    text={<div data-testid={testId(`tick-${timestamp.ts}`)}>{timestamp.label}</div>}\n                    onClick={() => {\n                      setSelectedTimestamp(timestamp);\n                      setIsTickSelectionOpen(false);\n                    }}\n                  />\n                ))}\n              </Menu>\n            }\n          >\n            <div {...containerProps}>\n              <Button\n                style={{flex: 1, width: '100%'}}\n                rightIcon={<Icon name=\"arrow_drop_down\" />}\n                onClick={() => setIsTickSelectionOpen((isOpen) => !isOpen)}\n                data-testid={testId('tick-selection')}\n              >\n                {selectedTimestampRef.current?.label}\n              </Button>\n            </div>\n          </Popover>\n          <div>\n            Each evaluation of a schedule is called a tick, which is an opportunity for one or more\n            runs to be launched. Ticks kick off runs, which either materialize a selection of assets\n            or execute a <a href=\"https://docs.dagster.io/concepts/ops-jobs-graphs/jobs\">job</a>.\n            You can preview the result for a given tick in the next step.\n          </div>\n          <div>\n            <a href=\"https://docs.dagster.io/concepts/automation/schedules\">Learn more</a> about\n            schedules\n          </div>\n        </Box>\n      );\n    }\n  }, [\n    launching,\n    getScheduleData,\n    scheduleExecutionData,\n    scheduleExecutionError,\n    scheduleDryRunMutationLoading,\n    repoAddress,\n    name,\n    jobName,\n    selectedTimestamp,\n    isTickSelectionOpen,\n    viewport.width,\n    containerProps,\n    userTimezone,\n  ]);\n\n  const leftButtons = useMemo(() => {\n    if (launching) {\n      return null;\n    }\n\n    if (scheduleExecutionData || scheduleExecutionError) {\n      return (\n        <Button\n          icon={<Icon name=\"settings_backup_restore\" />}\n          data-testid={testId('try-again')}\n          onClick={() => {\n            setScheduleExecutionData(null);\n            setScheduleExecutionError(null);\n          }}\n        >\n          Try again\n        </Button>\n      );\n    } else {\n      return null;\n    }\n  }, [launching, scheduleExecutionData, scheduleExecutionError]);\n\n  const rightButtons = useMemo(() => {\n    if (launching) {\n      return <Box flex={{direction: 'row', gap: 8}}></Box>;\n    }\n\n    if (scheduleExecutionData || scheduleExecutionError) {\n      const runRequests = scheduleExecutionData?.evaluationResult?.runRequests;\n      const numRunRequests = runRequests?.length || 0;\n      const didSkip = !scheduleExecutionError && numRunRequests === 0;\n\n      if (scheduleExecutionError || didSkip) {\n        return (\n          <Box flex={{direction: 'row', gap: 8}}>\n            <Button onClick={onClose}>Close</Button>\n          </Box>\n        );\n      } else {\n        return (\n          <Box flex={{direction: 'row', gap: 8}}>\n            <Button onClick={onClose}>Close</Button>\n            <Tooltip\n              canShow={!canLaunchAll || launching}\n              content=\"Launches all runs and commits tick result\"\n              placement=\"top-end\"\n            >\n              <Button\n                icon={<Icon name=\"check_filled\" />}\n                intent=\"primary\"\n                disabled={!canLaunchAll || launching}\n                onClick={onLaunchAll}\n                data-testid={testId('launch-all')}\n              >\n                <div>Launch all & commit tick result</div>\n              </Button>\n            </Tooltip>\n          </Box>\n        );\n      }\n    }\n\n    if (scheduleDryRunMutationLoading) {\n      return (\n        <Box flex={{direction: 'row', gap: 8}}>\n          <Button onClick={onClose}>Close</Button>\n        </Box>\n      );\n    } else {\n      return (\n        <>\n          <Button onClick={onClose}>Close</Button>\n          <Button\n            data-testid={testId('continue')}\n            intent=\"primary\"\n            disabled={!canSubmitTest}\n            onClick={() => {\n              submitTest();\n            }}\n          >\n            Continue\n          </Button>\n        </>\n      );\n    }\n  }, [\n    canLaunchAll,\n    canSubmitTest,\n    launching,\n    onClose,\n    onLaunchAll,\n    scheduleExecutionData,\n    scheduleExecutionError,\n    submitTest,\n    scheduleDryRunMutationLoading,\n  ]);\n\n  return (\n    <>\n      <DialogBody>\n        <div style={{minHeight: '300px'}}>{content}</div>\n      </DialogBody>\n      <DialogFooter topBorder left={leftButtons}>\n        {rightButtons}\n      </DialogFooter>\n    </>\n  );\n};\n\nexport const GET_SCHEDULE_QUERY = gql`\n  query getSchedule(\n    $scheduleSelector: ScheduleSelector!\n    $startTimestamp: Float\n    $ticksAfter: Int\n    $ticksBefore: Int\n  ) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on PythonError {\n        message\n        stack\n      }\n      ... on Schedule {\n        id\n        name\n        potentialTickTimestamps(\n          startTimestamp: $startTimestamp\n          upperLimit: $ticksAfter\n          lowerLimit: $ticksBefore\n        )\n      }\n    }\n  }\n`;\n\n// FE for showing result of evaluating schedule (error, skipped, or success state)\nconst EvaluateScheduleResult = ({\n  repoAddress,\n  name,\n  timestamp,\n  jobName,\n  scheduleExecutionData,\n  scheduleExecutionError,\n}: {\n  repoAddress: RepoAddress;\n  name: string;\n  timestamp: number;\n  jobName: string;\n  scheduleExecutionData: ScheduleDryRunInstigationTick | null;\n  scheduleExecutionError: PythonErrorFragment | null;\n}) => {\n  const {\n    timezone: [userTimezone],\n  } = useContext(TimeContext);\n\n  const evaluationResult = scheduleExecutionData?.evaluationResult;\n\n  const innerContent = () => {\n    if (scheduleExecutionError) {\n      return <PythonErrorInfo error={scheduleExecutionError} />;\n    }\n\n    const data = scheduleExecutionData;\n\n    if (!data || !evaluationResult) {\n      return (\n        <NonIdealState\n          title=\"An unknown error occurred\"\n          description={\n            <span>\n              File an issue on{' '}\n              <a href=\"https://github.com/dagster-io/dagster\" target=\"_blank\" rel=\"noreferrer\">\n                Github\n              </a>{' '}\n              if you think this is a bug\n            </span>\n          }\n          icon=\"error\"\n        />\n      );\n    } else if (evaluationResult.error) {\n      return <PythonErrorInfo error={evaluationResult.error} />;\n    }\n    if (!evaluationResult.runRequests?.length) {\n      return (\n        <Box flex={{direction: 'column', gap: 8}}>\n          <Subheading style={{marginBottom: 8}}>Requested runs (0)</Subheading>\n          <div>\n            <SkipReasonNonIdealStateWrapper>\n              <NonIdealState\n                icon=\"missing\"\n                title=\"No runs requested\"\n                description={\n                  <>\n                    <span>\n                      The schedule function was successfully evaluated but didn&apos;t return any\n                      run requests.\n                    </span>\n                    <span>\n                      <br />\n                      Skip reason:{' '}\n                      {evaluationResult?.skipReason\n                        ? `\"${evaluationResult.skipReason}\"`\n                        : 'No skip reason was output'}\n                    </span>\n                  </>\n                }\n              />\n            </SkipReasonNonIdealStateWrapper>\n          </div>\n        </Box>\n      );\n    } else {\n      return (\n        <Box flex={{direction: 'column', gap: 8}}>\n          <Subheading>Requested runs ({numRunRequests})</Subheading>\n          <RunRequestTable\n            runRequests={evaluationResult.runRequests}\n            repoAddress={repoAddress}\n            isJob={true}\n            jobName={jobName}\n            name={name}\n          />\n        </Box>\n      );\n    }\n  };\n\n  const numRunRequests = evaluationResult?.runRequests?.length;\n  const error = scheduleExecutionError || evaluationResult?.error;\n\n  return (\n    <Box flex={{direction: 'column', gap: 8}}>\n      <Box>\n        <Grid>\n          <div>\n            <Subheading>Result</Subheading>\n            <Box flex={{grow: 1, alignItems: 'center'}}>\n              <div>\n                {error ? (\n                  <Tag intent=\"danger\">Failed</Tag>\n                ) : numRunRequests ? (\n                  <Tag intent=\"success\">{numRunRequests} run requests</Tag>\n                ) : (\n                  <Tag intent=\"warning\">Skipped</Tag>\n                )}\n              </div>\n            </Box>\n          </div>\n          <div>\n            <Subheading>Tick</Subheading>\n            <Box flex={{grow: 1, alignItems: 'center'}}>\n              <Mono>\n                {timestampToString({\n                  timestamp: {unix: timestamp},\n                  locale,\n                  timezone: userTimezone,\n                  timeFormat: {\n                    showTimezone: true,\n                  },\n                })}\n              </Mono>\n            </Box>\n          </div>\n        </Grid>\n      </Box>\n      {innerContent()}\n    </Box>\n  );\n};\n\nexport const SCHEDULE_DRY_RUN_MUTATION = gql`\n  mutation ScheduleDryRunMutation($selectorData: ScheduleSelector!, $timestamp: Float) {\n    scheduleDryRun(selectorData: $selectorData, timestamp: $timestamp) {\n      ...PythonErrorFragment\n      ... on DryRunInstigationTick {\n        timestamp\n        evaluationResult {\n          runRequests {\n            ...RunRequestFragment\n          }\n          skipReason\n          error {\n            ...PythonErrorFragment\n          }\n        }\n      }\n      ... on ScheduleNotFoundError {\n        scheduleName\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_REQUEST_FRAGMENT}\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  padding-bottom: 12px;\n  border-bottom: 1px solid ${Colors.keylineDefault()};\n  margin-bottom: 12px;\n  ${Subheading} {\n    padding-bottom: 4px;\n    display: block;\n  }\n  pre {\n    margin: 0;\n  }\n  button {\n    margin-top: 4px;\n  }\n`;\n\nconst ScheduleDescriptor = styled.div`\n  padding-bottom: 2px;\n`;\n\nconst SkipReasonNonIdealStateWrapper = styled.div`\n  ${NonIdealStateWrapper} {\n    margin: auto !important;\n    width: unset !important;\n    max-width: unset !important;\n  }\n`;\n","import {Box, Button, Icon} from '@dagster-io/ui-components';\nimport {useState} from 'react';\n\nimport {EvaluateScheduleDialog} from './EvaluateScheduleDialog';\nimport {RepoAddress} from '../workspace/types';\n\ninterface EvaluateTickButtonScheduleProps {\n  name: string;\n  repoAddress: RepoAddress;\n  jobName: string;\n}\n\nexport const EvaluateTickButtonSchedule = ({\n  name,\n  repoAddress,\n  jobName,\n}: EvaluateTickButtonScheduleProps) => {\n  const [showTestTickDialog, setShowTestTickDialog] = useState(false);\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n      <Button\n        icon={<Icon name=\"preview_tick\" />}\n        onClick={() => {\n          setShowTestTickDialog(true);\n        }}\n      >\n        Preview tick result\n      </Button>\n      <EvaluateScheduleDialog\n        isOpen={showTestTickDialog}\n        onClose={() => {\n          setShowTestTickDialog(false);\n        }}\n        name={name}\n        repoAddress={repoAddress}\n        jobName={jobName}\n      />\n    </Box>\n  );\n};\n","import {\n  Box,\n  Code,\n  Group,\n  MetadataTableWIP,\n  PageHeader,\n  Subtitle1,\n  Tag,\n} from '@dagster-io/ui-components';\nimport {Link} from 'react-router-dom';\nimport {ScheduleAlertDetails} from 'shared/schedules/ScheduleAlertDetails.oss';\nimport styled from 'styled-components';\n\nimport {SchedulePartitionStatus} from './SchedulePartitionStatus';\nimport {ScheduleResetButton} from './ScheduleResetButton';\nimport {ScheduleSwitch} from './ScheduleSwitch';\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {humanCronString} from './humanCronString';\nimport {ScheduleFragment} from './types/ScheduleUtils.types';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {AutomationTargetList} from '../automation/AutomationTargetList';\nimport {AutomationAssetSelectionFragment} from '../automation/types/AutomationAssetSelectionFragment.types';\nimport {InstigationStatus} from '../graphql/types';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {EvaluateTickButtonSchedule} from '../ticks/EvaluateTickButtonSchedule';\nimport {TickStatusTag} from '../ticks/TickStatusTag';\nimport {RepoAddress} from '../workspace/types';\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: true};\n\nexport const ScheduleDetails = (props: {\n  schedule: ScheduleFragment;\n  repoAddress: RepoAddress;\n  refreshState: QueryRefreshState;\n  assetSelection: AutomationAssetSelectionFragment | null;\n}) => {\n  const {repoAddress, schedule, refreshState, assetSelection} = props;\n  const {cronSchedule, executionTimezone, futureTicks, name, partitionSet, pipelineName} = schedule;\n  const {scheduleState} = schedule;\n  const {status, ticks} = scheduleState;\n  const latestTick = ticks.length > 0 ? ticks[0] : null;\n  const running = status === InstigationStatus.RUNNING;\n\n  return (\n    <>\n      <PageHeader\n        title={\n          <Subtitle1 style={{display: 'flex', flexDirection: 'row', gap: 4}}>\n            <Link to=\"/automation\">Automation</Link>\n            <span>/</span>\n            {name}\n          </Subtitle1>\n        }\n        tags={\n          <Tag icon=\"schedule\">\n            Schedule in <RepositoryLink repoAddress={repoAddress} />\n          </Tag>\n        }\n        right={\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n            <QueryRefreshCountdown refreshState={refreshState} />\n            <EvaluateTickButtonSchedule\n              name={schedule.name}\n              repoAddress={repoAddress}\n              jobName={pipelineName}\n            />\n          </Box>\n        }\n      />\n      <MetadataTableWIP>\n        <tbody>\n          {schedule.description ? (\n            <tr>\n              <td>Description</td>\n              <td>{schedule.description}</td>\n            </tr>\n          ) : null}\n          <tr>\n            <td>Latest tick</td>\n            <td>\n              {latestTick ? (\n                <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                  <TimestampDisplay\n                    timestamp={latestTick.timestamp}\n                    timezone={executionTimezone}\n                    timeFormat={TIME_FORMAT}\n                  />\n                  <TickStatusTag tick={latestTick} tickResultType=\"runs\" />\n                </Group>\n              ) : (\n                'Schedule has never run'\n              )}\n            </td>\n          </tr>\n          {futureTicks.results[0] && running && (\n            <tr>\n              <td>Next tick</td>\n              <td>\n                <TimestampDisplay\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  timestamp={futureTicks.results[0].timestamp!}\n                  timezone={executionTimezone}\n                  timeFormat={TIME_FORMAT}\n                />\n              </td>\n            </tr>\n          )}\n          {schedule.pipelineName || assetSelection ? (\n            <tr>\n              <td>Target</td>\n              <TargetCell>\n                <AutomationTargetList\n                  targets={schedule.pipelineName ? [{pipelineName: schedule.pipelineName}] : null}\n                  repoAddress={repoAddress}\n                  assetSelection={assetSelection || null}\n                  automationType=\"schedule\"\n                />\n              </TargetCell>\n            </tr>\n          ) : null}\n          <tr>\n            <td>\n              <Box flex={{alignItems: 'center'}} style={{height: '32px'}}>\n                Running\n              </Box>\n            </td>\n            <td>\n              <Box\n                flex={{direction: 'row', gap: 12, alignItems: 'center'}}\n                style={{height: '32px'}}\n              >\n                <ScheduleSwitch repoAddress={repoAddress} schedule={schedule} />\n                {schedule.canReset && (\n                  <ScheduleResetButton repoAddress={repoAddress} schedule={schedule} />\n                )}\n              </Box>\n            </td>\n          </tr>\n          <tr>\n            <td>Partition set</td>\n            <td>\n              {partitionSet ? (\n                <SchedulePartitionStatus schedule={schedule} repoAddress={repoAddress} />\n              ) : (\n                'None'\n              )}\n            </td>\n          </tr>\n          <tr>\n            <td>Schedule</td>\n            <td>\n              {cronSchedule ? (\n                <Group direction=\"row\" spacing={8}>\n                  <span>\n                    {humanCronString(cronSchedule, {\n                      longTimezoneName: executionTimezone || 'UTC',\n                    })}\n                  </span>\n                  <Code>({cronSchedule})</Code>\n                </Group>\n              ) : (\n                <div>&mdash;</div>\n              )}\n            </td>\n          </tr>\n          {executionTimezone ? (\n            <tr>\n              <td>Execution timezone</td>\n              <td>{executionTimezone}</td>\n            </tr>\n          ) : null}\n          <ScheduleAlertDetails repoAddress={repoAddress} scheduleName={name} />\n        </tbody>\n      </MetadataTableWIP>\n    </>\n  );\n};\n\nconst TargetCell = styled.td`\n  button {\n    line-height: 20px;\n  }\n`;\n","import {gql} from '../apollo-client';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\n\nexport const SCHEDULE_FRAGMENT = gql`\n  fragment ScheduleFragment on Schedule {\n    id\n    name\n    cronSchedule\n    executionTimezone\n    pipelineName\n    solidSelection\n    mode\n    description\n    partitionSet {\n      id\n      name\n    }\n    defaultStatus\n    canReset\n    scheduleState {\n      id\n      ...InstigationStateFragment\n    }\n    futureTicks(limit: 5) {\n      results {\n        timestamp\n      }\n    }\n  }\n\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {Page, Tab, Tabs} from '@dagster-io/ui-components';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {SCHEDULE_ASSET_SELECTIONS_QUERY} from './ScheduleAssetSelectionsQuery';\nimport {ScheduleDetails} from './ScheduleDetails';\nimport {SCHEDULE_FRAGMENT} from './ScheduleUtils';\nimport {SchedulerInfo} from './SchedulerInfo';\nimport {gql, useQuery} from '../apollo-client';\nimport {\n  ScheduleAssetSelectionQuery,\n  ScheduleAssetSelectionQueryVariables,\n} from './types/ScheduleAssetSelectionsQuery.types';\nimport {ScheduleRootQuery, ScheduleRootQueryVariables} from './types/ScheduleRoot.types';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useMergedRefresh, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {RunsFilter} from '../graphql/types';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {TicksTable} from '../instigation/TickHistory';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunsFeedTableWithFilters} from '../runs/RunsFeedTable';\nimport {Loading} from '../ui/Loading';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\ninterface Props {\n  repoAddress: RepoAddress;\n}\n\nexport const ScheduleRoot = (props: Props) => {\n  useTrackPageView();\n\n  const {repoAddress} = props;\n  const {scheduleName} = useParams<{scheduleName: string}>();\n\n  useDocumentTitle(`Schedule: ${scheduleName}`);\n\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName,\n  };\n\n  const [selectedTab, setSelectedTab] = React.useState<string>('ticks');\n\n  const queryResult = useQuery<ScheduleRootQuery, ScheduleRootQueryVariables>(SCHEDULE_ROOT_QUERY, {\n    variables: {\n      scheduleSelector,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const selectionQueryResult = useQuery<\n    ScheduleAssetSelectionQuery,\n    ScheduleAssetSelectionQueryVariables\n  >(SCHEDULE_ASSET_SELECTIONS_QUERY, {\n    variables: {scheduleSelector},\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const refreshState1 = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n  const refreshState2 = useQueryRefreshAtInterval(selectionQueryResult, FIFTEEN_SECONDS);\n  const refreshState = useMergedRefresh(refreshState1, refreshState2);\n\n  const tabs = (\n    <Tabs selectedTabId={selectedTab} onChange={setSelectedTab}>\n      <Tab id=\"ticks\" title=\"Tick history\" />\n      <Tab id=\"runs\" title=\"Run history\" />\n    </Tabs>\n  );\n\n  const assetSelection =\n    selectionQueryResult.data?.scheduleOrError.__typename === 'Schedule'\n      ? selectionQueryResult.data.scheduleOrError.assetSelection\n      : null;\n\n  const runsFilter: RunsFilter = React.useMemo(\n    () => ({\n      tags: [\n        {key: DagsterTag.ScheduleName, value: scheduleName},\n        {key: DagsterTag.RepositoryLabelTag, value: repoAddressAsTag(repoAddress)},\n      ],\n    }),\n    [repoAddress, scheduleName],\n  );\n\n  return (\n    <Loading queryResult={queryResult} allowStaleData={true}>\n      {({scheduleOrError, instance}) => {\n        if (scheduleOrError.__typename !== 'Schedule') {\n          return null;\n        }\n\n        const showDaemonWarning = !instance.daemonHealth.daemonStatus.healthy;\n\n        return (\n          <Page>\n            <ScheduleDetails\n              repoAddress={repoAddress}\n              schedule={scheduleOrError}\n              refreshState={refreshState}\n              assetSelection={assetSelection}\n            />\n            {showDaemonWarning ? (\n              <SchedulerInfo\n                daemonHealth={instance.daemonHealth}\n                padding={{vertical: 16, horizontal: 24}}\n              />\n            ) : null}\n            {selectedTab === 'ticks' ? (\n              <TicksTable\n                tabs={tabs}\n                tickResultType=\"runs\"\n                repoAddress={repoAddress}\n                name={scheduleOrError.name}\n              />\n            ) : (\n              <RunsFeedTableWithFilters\n                filter={runsFilter}\n                actionBarComponents={tabs}\n                includeRunsFromBackfills={true}\n              />\n            )}\n          </Page>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst SCHEDULE_ROOT_QUERY = gql`\n  query ScheduleRootQuery($scheduleSelector: ScheduleSelector!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        ...ScheduleFragment\n      }\n      ... on ScheduleNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n    instance {\n      id\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"SCHEDULER\") {\n          id\n          healthy\n        }\n      }\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${SCHEDULE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Box, MainContent, NonIdealState, SpinnerWithText} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {Redirect, Switch, useParams} from 'react-router-dom';\n\nimport {GraphRoot} from './GraphRoot';\nimport {WorkspaceContext} from './WorkspaceContext/WorkspaceContext';\nimport {repoAddressAsHumanString} from './repoAddressAsString';\nimport {repoAddressFromPath} from './repoAddressFromPath';\nimport {workspacePathFromAddress} from './workspacePath';\nimport {Route} from '../app/Route';\nimport {AssetGroupRoot} from '../assets/AssetGroupRoot';\nimport {CodeLocationDefinitionsRoot} from '../code-location/CodeLocationDefinitionsRoot';\nimport {CodeLocationDocsRoot} from '../code-location/CodeLocationDocsRoot';\nimport CodeLocationOverviewRoot from '../code-location/CodeLocationOverviewRoot';\nimport {PipelineRoot} from '../pipelines/PipelineRoot';\nimport {ResourceRoot} from '../resources/ResourceRoot';\nimport {ScheduleRoot} from '../schedules/ScheduleRoot';\nimport {SensorRoot} from '../sensors/SensorRoot';\n\nconst RepoRouteContainer = () => {\n  const {repoPath} = useParams<{repoPath: string}>();\n  const workspaceState = useContext(WorkspaceContext);\n  const addressForPath = repoAddressFromPath(repoPath);\n\n  const {loadingNonAssets: loading} = workspaceState;\n\n  // A RepoAddress could not be created for this path, which means it's invalid.\n  if (!addressForPath) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"Invalid code location path\"\n          description={\n            <div>\n              <div>\n                <strong>{repoPath}</strong>\n              </div>\n              {'  is not a valid code location path.'}\n            </div>\n          }\n        />\n      </Box>\n    );\n  }\n\n  const matchingRepo = workspaceState.allRepos.find(\n    (repo) =>\n      repo.repository.name === addressForPath.name &&\n      repo.repositoryLocation.name === addressForPath.location,\n  );\n\n  // If we don't have any active code locations, or if our active repo does not match\n  // the repo path in the URL, it means we aren't able to load this repo.\n  if (!matchingRepo) {\n    if (loading) {\n      return (\n        <Box padding={{vertical: 64}} flex={{direction: 'row', justifyContent: 'center'}}>\n          <SpinnerWithText label={`Loading ${repoAddressAsHumanString(addressForPath)}…`} />\n        </Box>\n      );\n    }\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/locations/:repoPath/graphs/(/?.*)\">\n        <GraphRoot repoAddress={addressForPath} />\n      </Route>\n      <Route\n        path={[\n          '/locations/:repoPath/pipelines/(/?.*)',\n          '/locations/:repoPath/jobs/(/?.*)',\n          '/locations/:repoPath/pipeline_or_job/(/?.*)',\n        ]}\n      >\n        <PipelineRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/schedules/:scheduleName/:runTab?\">\n        <ScheduleRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/sensors/:sensorName\">\n        <SensorRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/resources/:resourceName\">\n        <ResourceRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path={['/locations/:repoPath/asset-groups/:groupName/list(/?.*)']}>\n        <AssetGroupRoot repoAddress={addressForPath} tab=\"list\" />\n      </Route>\n      <Route\n        path={[\n          '/locations/:repoPath/asset-groups/:groupName/(/?.*)',\n          '/locations/:repoPath/asset-groups/:groupName',\n        ]}\n      >\n        <AssetGroupRoot repoAddress={addressForPath} tab=\"lineage\" />\n      </Route>\n      <Route path=\"/locations/:repoPath\" exact>\n        <CodeLocationOverviewRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/definitions\" exact>\n        <Redirect to={workspacePathFromAddress(addressForPath, '/assets')} />\n      </Route>\n      <Route path=\"/locations/:repoPath/docs\" exact>\n        <CodeLocationDocsRoot repoAddress={addressForPath} />\n      </Route>\n      <Route path=\"/locations/:repoPath/docs/packages/:packageName?/:componentName?\">\n        <CodeLocationDocsRoot repoAddress={addressForPath} />\n      </Route>\n      {/* Avoid trying to render a definitions route if there is no actual repo available. */}\n      {matchingRepo ? (\n        <Route\n          path={[\n            '/locations/:repoPath/assets',\n            '/locations/:repoPath/jobs',\n            '/locations/:repoPath/resources',\n            '/locations/:repoPath/schedules',\n            '/locations/:repoPath/sensors',\n            '/locations/:repoPath/graphs',\n            '/locations/:repoPath/ops/:name?',\n          ]}\n          exact\n        >\n          <CodeLocationDefinitionsRoot\n            repoAddress={addressForPath}\n            repository={matchingRepo.repository}\n          />\n        </Route>\n      ) : null}\n      <Route path={['/locations/:repoPath/*', '/locations/:repoPath/']}>\n        <Redirect to={workspacePathFromAddress(addressForPath, '/assets')} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport const WorkspaceRoot = () => {\n  return (\n    <MainContent>\n      <Switch>\n        <Route path=\"/locations/:repoPath\">\n          <RepoRouteContainer />\n        </Route>\n      </Switch>\n    </MainContent>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default WorkspaceRoot;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ComponentTags_tags__h3vCZ\",\"tag\":\"ComponentTags_tag__YugkU\",\"authorTag\":\"ComponentTags_authorTag__xtZui\"};","import {\n  Button,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Menu,\n  MenuItem,\n  Popover,\n  Table,\n} from '@dagster-io/ui-components';\nimport {StyledRawCodeMirror} from '@dagster-io/ui-components/editor';\nimport {useMemo, useState} from 'react';\nimport * as yaml from 'yaml';\n\nimport {WorkspaceRepositoryLocationNode} from './WorkspaceContext/WorkspaceContext';\n\nexport const CodeLocationMenu = ({\n  locationNode,\n}: {\n  locationNode: WorkspaceRepositoryLocationNode;\n}) => {\n  const [configIsOpen, setConfigIsOpen] = useState(false);\n  const [libsIsOpen, setLibsIsOpen] = useState(false);\n\n  let libsMenuItem = null;\n  let libsDialog = null;\n  if (\n    locationNode.locationOrLoadError?.__typename === 'RepositoryLocation' &&\n    locationNode.locationOrLoadError.dagsterLibraryVersions !== null\n  ) {\n    libsMenuItem = (\n      <MenuItem icon=\"info\" text=\"View Dagster libraries\" onClick={() => setLibsIsOpen(true)} />\n    );\n    libsDialog = (\n      <DagsterLibrariesDialog\n        libraries={locationNode.locationOrLoadError.dagsterLibraryVersions}\n        isOpen={libsIsOpen}\n        setIsOpen={setLibsIsOpen}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-left\"\n        content={\n          <Menu>\n            <MenuItem icon=\"info\" text=\"View configuration\" onClick={() => setConfigIsOpen(true)} />\n            {libsMenuItem}\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />}></Button>\n      </Popover>\n      <CodeLocationConfigDialog\n        metadata={locationNode.displayMetadata}\n        isOpen={configIsOpen}\n        setIsOpen={setConfigIsOpen}\n      />\n      {libsDialog}\n    </>\n  );\n};\n\nexport const CodeLocationConfigDialog = ({\n  isOpen,\n  setIsOpen,\n  metadata,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  metadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  return (\n    <Dialog\n      title=\"Code location configuration\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <CodeLocationConfig displayMetadata={metadata} />\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const DagsterLibrariesDialog = ({\n  isOpen,\n  setIsOpen,\n  libraries,\n}: {\n  isOpen: boolean;\n  setIsOpen: (next: boolean) => void;\n  libraries: {name: string; version: string}[];\n}) => {\n  return (\n    <Dialog\n      title=\"Dagster library versions\"\n      icon=\"info\"\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      style={{width: '600px'}}\n    >\n      <Table>\n        <thead>\n          <tr>\n            <th>Library</th>\n            <th>Version</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraries.map((library) => (\n            <tr key={library.name}>\n              <td>{library.name}</td>\n              <td>{library.version}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <DialogFooter topBorder>\n        <Button onClick={() => setIsOpen(false)} intent=\"primary\">\n          Done\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst CodeLocationConfig = ({\n  displayMetadata,\n}: {\n  displayMetadata: WorkspaceRepositoryLocationNode['displayMetadata'];\n}) => {\n  const yamlString = useMemo(() => {\n    const kvPairs = displayMetadata.reduce(\n      (accum, item) => {\n        accum[item.key] = item.value;\n        return accum;\n      },\n      {} as Record<string, string>,\n    );\n    return yaml.stringify(kvPairs);\n  }, [displayMetadata]);\n\n  return (\n    <StyledRawCodeMirror\n      value={yamlString}\n      options={{readOnly: true, lineNumbers: true, mode: 'yaml'}}\n      theme={['config-editor']}\n    />\n  );\n};\n","import {Box, Icon, NonIdealState} from '@dagster-io/ui-components';\n\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {\n  isThisThingAnAssetJob,\n  isThisThingAnExternalJob,\n  useRepository,\n} from '../workspace/WorkspaceContext/util';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\ninterface EmptyStateProps {\n  repoAddress: RepoAddress | null;\n  jobName: string;\n  jobPath: string;\n  anyFilter: boolean;\n}\n\nexport const PipelineRunsEmptyState = (props: EmptyStateProps) => {\n  const {repoAddress, anyFilter, jobName, jobPath} = props;\n\n  const repo = useRepository(repoAddress);\n  const isAssetJob = isThisThingAnAssetJob(repo, jobName);\n  const isExternalJob = isThisThingAnExternalJob(repo, jobName);\n\n  const description = () => {\n    if (!repoAddress) {\n      return <div>You have not launched any runs for this job.</div>;\n    }\n\n    if (isExternalJob) {\n      return (\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this external job.'}\n        </div>\n      );\n    }\n\n    if (isAssetJob) {\n      return (\n        <Box flex={{direction: 'column', gap: 12}}>\n          <div>\n            {anyFilter\n              ? 'There are no matching runs for these filters.'\n              : 'You have not materialized any assets with this job yet.'}\n          </div>\n          <div>\n            <AnchorButton\n              icon={<Icon name=\"materialization\" />}\n              to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}`)}\n            >\n              Materialize an asset\n            </AnchorButton>\n          </div>\n        </Box>\n      );\n    }\n\n    return (\n      <Box flex={{direction: 'column', gap: 12}}>\n        <div>\n          {anyFilter\n            ? 'There are no matching runs for these filters.'\n            : 'You have not launched any runs for this job yet.'}\n        </div>\n        <div>\n          <AnchorButton\n            icon={<Icon name=\"add_circle\" />}\n            to={workspacePathFromAddress(repoAddress, `/jobs/${jobPath}/playground`)}\n          >\n            Launch a run\n          </AnchorButton>\n        </div>\n      </Box>\n    );\n  };\n\n  return (\n    <Box padding={{vertical: 64}}>\n      <NonIdealState icon=\"run\" title=\"No runs found\" description={description()} />\n    </Box>\n  );\n};\n","import {Box, ButtonLink, Tag, TokenizingFieldValue, tokenToString} from '@dagster-io/ui-components';\nimport {useCallback, useMemo} from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PipelineRunsEmptyState} from './PipelineRunsEmptyState';\nimport {useJobTitle} from './useJobTitle';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {useTrackPageView} from '../app/analytics';\nimport {RunsFeedView, RunsFilter} from '../graphql/types';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunsQueryRefetchContext} from '../runs/RunUtils';\nimport {RunsFeedError} from '../runs/RunsFeedError';\nimport {RunsFeedTable} from '../runs/RunsFeedTable';\nimport {\n  RunFilterToken,\n  RunFilterTokenType,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  useRunsFilterInput,\n} from '../runs/RunsFilterInput';\nimport {useRunsFeedEntries} from '../runs/useRunsFeedEntries';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext/util';\nimport {repoAddressAsTag} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\n\nconst ENABLED_FILTERS: RunFilterTokenType[] = [\n  'status',\n  'tag',\n  'id',\n  'created_date_before',\n  'created_date_after',\n];\n\nexport const PipelineRunsFeedRoot = (props: {repoAddress?: RepoAddress}) => {\n  useTrackPageView();\n\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n  const {repoAddress = null} = props;\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters(ENABLED_FILTERS);\n\n  const permanentTokens = useMemo(() => {\n    return [\n      isJob ? {token: 'job', value: pipelineName} : {token: 'pipeline', value: pipelineName},\n      snapshotId ? {token: 'snapshotId', value: snapshotId} : null,\n    ].filter(Boolean) as TokenizingFieldValue[];\n  }, [isJob, pipelineName, snapshotId]);\n\n  const runsFilter: RunsFilter = useMemo(() => {\n    const allTokens = [...filterTokens, ...permanentTokens];\n    if (repoAddress) {\n      const repoToken = {\n        token: 'tag',\n        value: `${DagsterTag.RepositoryLabelTag}=${repoAddressAsTag(repoAddress)}`,\n      };\n      allTokens.push(repoToken);\n    }\n    return {...runsFilterForSearchTokens(allTokens), pipelineName, snapshotId};\n  }, [filterTokens, permanentTokens, pipelineName, repoAddress, snapshotId]);\n\n  const onAddTag = useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!filterTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokens([...filterTokens, token]);\n      }\n    },\n    [filterTokens, setFilterTokens],\n  );\n\n  const {entries, paginationProps, queryResult} = useRunsFeedEntries({\n    filter: runsFilter,\n    skip: false,\n    view: RunsFeedView.RUNS,\n  });\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  const {button, activeFiltersJsx} = useRunsFilterInput({\n    enabledFilters: ENABLED_FILTERS,\n    tokens: filterTokens,\n    onChange: setFilterTokens,\n    loading: queryResult.loading,\n  });\n\n  const actionBarComponents = (\n    <Box\n      flex={{direction: 'row', gap: 8, alignItems: 'center'}}\n      style={{width: '100%'}}\n      padding={{right: 16}}\n    >\n      {button}\n      <div style={{flex: 1}} />\n      <QueryRefreshCountdown refreshState={refreshState} />\n    </Box>\n  );\n\n  const belowActionBarComponents = (\n    <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n      {permanentTokens.map(({token, value}) => (\n        <Tag key={token}>{`${token}:${value}`}</Tag>\n      ))}\n      {activeFiltersJsx}\n      {activeFiltersJsx.length > 0 && (\n        <ButtonLink onClick={() => setFilterTokens([])}>Clear all</ButtonLink>\n      )}\n    </Box>\n  );\n\n  function content() {\n    if (queryResult.error) {\n      return <RunsFeedError error={queryResult.error} />;\n    }\n\n    return (\n      <div style={{minHeight: 0}}>\n        <RunsFeedTable\n          entries={entries}\n          loading={queryResult.loading}\n          onAddTag={onAddTag}\n          refetch={refreshState.refetch}\n          actionBarComponents={actionBarComponents}\n          belowActionBarComponents={belowActionBarComponents}\n          paginationProps={paginationProps}\n          filter={runsFilter}\n          emptyState={() => (\n            <PipelineRunsEmptyState\n              repoAddress={repoAddress}\n              anyFilter={filterTokens.length > 0}\n              jobName={pipelineName}\n              jobPath={pipelinePath}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <RunsQueryRefetchContext.Provider value={{refetch: refreshState.refetch}}>\n      {content()}\n    </RunsQueryRefetchContext.Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"schemaContainer\":\"ComponentSchema_schemaContainer__6rYYb\",\"schemaTitle\":\"ComponentSchema_schemaTitle__hWZJk\",\"propertyContainer\":\"ComponentSchema_propertyContainer__Vntq5\",\"chevronContainer\":\"ComponentSchema_chevronContainer__MvSIz\",\"expandButton\":\"ComponentSchema_expandButton__aWQDj\",\"expanded\":\"ComponentSchema_expanded__b68L0\",\"chevron\":\"ComponentSchema_chevron__xbSbs\",\"expansionContainer\":\"ComponentSchema_expansionContainer__VdcFC\",\"property\":\"ComponentSchema_property__N6_2_\",\"propertyNameAndTypes\":\"ComponentSchema_propertyNameAndTypes__dkdx6\",\"propertyName\":\"ComponentSchema_propertyName__GOlu_\",\"propertyDescriptionContainer\":\"ComponentSchema_propertyDescriptionContainer__meGAo\",\"propertyDescription\":\"ComponentSchema_propertyDescription__pS8uc\",\"propertyDefault\":\"ComponentSchema_propertyDefault__U6kfs\",\"propertyDefaultValue\":\"ComponentSchema_propertyDefaultValue__oDIwt\",\"propertyExamples\":\"ComponentSchema_propertyExamples__GotnC\",\"propertyExamplesValue\":\"ComponentSchema_propertyExamplesValue__fxM9x\",\"required\":\"ComponentSchema_required__6RnJN\",\"anyOf\":\"ComponentSchema_anyOf__B_RPR\",\"anyOfLabel\":\"ComponentSchema_anyOfLabel__QAYwb\",\"expansion\":\"ComponentSchema_expansion__pGyym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PackagePageDetails_container__SRrkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ComponentExample_container__yHiZF\",\"code\":\"ComponentExample_code__kXo4_\",\"buttonContainer\":\"ComponentExample_buttonContainer__HtWoM\"};","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PackageDetails_container__0JGnM\",\"componentItem\":\"PackageDetails_componentItem__yAqel\"};"],"names":["PipelineExplorerSnapshotRoot","useTrackPageView","params","useParams","explorerPath","explorerPathFromString","pipelineName","snapshotId","history","useHistory","openInNewTab","useOpenInNewTab","useDocumentTitle","slice","PipelineExplorerContainer","onChangeExplorerPath","path","mode","explorerPathToString","onNavigateToSourceAssetNode","e","assetKey","assetDetailsPathForKey","metaKey","push","repoAddress","props","job","useJob","options","setOptions","useState","explodeComposites","preferAssetRendering","isExternal","externalJobSource","useEffect","hideEdgesToNodesOutsideQuery","setHideEdgesToNodesOutsideQuery","useStateWithStorage","json","isAssetJob","pipelineSelector","buildPipelineSelector","AssetGraphExplorer","fetchOptions","viewType","AssetGraphViewType","JOB","PipelineOpGraphExplorer","isGraph","parentNames","opNames","length","pipelineResult","useQuery","PIPELINE_EXPLORER_ROOT_QUERY","variables","snapshotPipelineSelector","undefined","rootHandleID","join","requestScopeHandleID","Loading","queryResult","pipelineSnapshotOrError","result","__typename","NonIdealPipelineQueryResult","parentHandle","solidHandle","displayedHandles","explodeCompositesInHandleGraph","solidHandles","assetNodesPresent","some","h","solid","definition","assetNodes","GraphExplorer","container","handles","getInvocations","filter","s","name","definitionName","map","handleID","gql","METADATA_ENTRY_FRAGMENT","GRAPH_EXPLORER_FRAGMENT","GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT","GRAPH_EXPLORER_ASSET_NODE_FRAGMENT","PYTHON_ERROR_FRAGMENT","ImageName","metadata","copy","useCopyToClipboard","didCopy","setDidCopy","imageKV","find","key","value","onClick","useCallback","timer","setTimeout","clearTimeout","ImageNameBox","span","style","fontWeight","marginRight","CaptionMono","Tooltip","content","placement","UnstyledButton","Icon","size","styled","Box","Colors","ModuleOrPackageOrFile","flex","direction","gap","width","color","fontSize","div","MetadataValueButtonStyle","MiddleTruncate","text","locationOrError","locationStatus","showDialog","setShowDialog","reloadFn","useMemo","buildReloadFnForLocation","reloading","tryReload","useRepositoryLocationReload","scope","loadStatus","Tag","minimal","intent","versionKey","locationOrLoadError","alignItems","ButtonLink","RepositoryLocationNonBlockingErrorDialog","location","isOpen","error","onDismiss","onTryReload","ReloadRepositoryLocationButton","ChildComponent","hasReloadPermission","NO_RELOAD_PERMISSION_TEXT","canShow","useDisabledButtonTooltipFix","Button","icon","disabled","loading","display","fontFamily","FontFamily","monospace","GraphRoot","title","height","flexDirection","PageHeader","Subtitle1","tags","RepositoryLink","border","minHeight","GraphExplorerRoot","graphResult","GRAPH_EXPLORER_ROOT_QUERY","graphSelector","repositoryName","repositoryLocationName","graphName","graphOrError","NonIdealState","description","message","fullPath","workspacePathFromAddress","replace","AutomaterializeDaemonStatusTag","paused","useAutomaterializeDaemonStatus","Link","to","outline","AssetGroupRoot","tab","groupName","groupPath","groupSelector","pathname","search","node","encodeURIComponent","view","React","lineageOptions","Page","paddingBottom","right","ReloadAllButton","label","AssetGroupTags","tabs","justifyContent","margin","Tabs","selectedTabId","TabLink","id","AssetGlobalLineageLink","GROUP","AssetsCatalogTable","prefixPath","split","decodeURIComponent","Boolean","setPrefixPath","automaterializeSensorsFlagState","useAutoMaterializeSensorFlag","data","ASSET_GROUP_METADATA_QUERY","selector","sensorTag","a","automationCondition","CodeLocationPageHeaderTitle","repoAddressAsHumanString","CodeLocationPageHeader","locationEntries","loadingNonAssets","useContext","WorkspaceContext","locationEntry","entry","JoinedButtons","ReloadButton","CodeLocationMenu","locationNode","CODE_LOCATION_HAS_DOCS_QUERY","findRepositoryInLocation","repositories","repo","CodeLocationTabs","selectedTab","repositorySelector","repoAddressToSelector","fetchPolicy","hasDocs","repositoryOrError","hasLocationDocs","repository","Tab","CodeLocationSearchableList","items","placeholder","nameFilter","renderRow","searchValue","setSearchValue","onChange","target","trimmedValue","trim","toLowerCase","filteredItems","item","containerRef","useRef","rowVirtualizer","useVirtualizer","count","getScrollElement","current","estimateSize","ROW_HEIGHT","overscan","totalHeight","getTotalSize","virtualItems","getVirtualItems","overflow","padding","vertical","horizontal","TextInput","Container","ref","HeaderRow","templateColumns","sticky","HeaderCell","Inner","$totalHeight","index","start","Row","$height","$start","top","strong","iconName","ListLink","useSanitizedAssetSearch","useAssetSearch","assets","sanitizedSearch","tokenForAssetKey","includes","REPO_ASSET_TABLE_FRAGMENT","ASSET_TABLE_DEFINITION_FRAGMENT","validateExpandedKeys","Array","isArray","parsed","usePersistedExpansionState","basePath","AppContext","expandedKeys","setExpandedKeys","storageKey","onToggle","nextExpandedKeys","Set","has","delete","add","from","repoKey","ASSET_GROUPS_EXPANSION_STATE_STORAGE_KEY","grouped","groups","asset","UNGROUPED_NAME","Object","values","forEach","group","sort","b","COMMON_COLLATOR","compare","displayNameForAssetKey","flattened","flat","entries","aName","bName","assetsForGroup","type","assetCount","repoName","queryResultOverview","WORKSPACE_ASSETS_QUERY","filteredBySearch","useFlattenedGroupedAssetList","SpinnerWithText","GroupNameRow","expanded","SearchableListRow","ClickableRow","$open","tabIndex","onKeyDown","code","preventDefault","background","IconWrapper","REPOSITORY_GRAPHS_FRAGMENT","WORSKPACE_GRAPHS_QUERY","pipelines","p","isJob","isHiddenAssetGroupJob","usedSolids","invocation","invocations","pipeline","graphs","extractGraphsForRepo","repoString","PythonErrorInfo","graph","OpCard","inputDefinitions","outputDefinitions","layout","layoutOp","inputs","d","dependsOn","outputs","dependedBy","x","y","OpCardContainer","bounds","OpNode","minified","onDoubleClick","onEnterComposite","onHighlightEdges","selected","focused","highlightedEdges","dim","OP_NODE_DEFINITION_FRAGMENT","UsedSolidDetails","onClickInvocation","USED_SOLID_DETAILS_QUERY","usedSolid","SidebarOpDefinition","showingSubgraph","i","OP_CARD_SOLID_DEFINITION_FRAGMENT","SIDEBAR_OP_DEFINITION_FRAGMENT","OpDetailScrollContainer","flatUniq","arrs","results","arr","keys","localeCompare","OpsRootWithData","useLocation","q","typeExplorer","qs","ignoreQueryPrefix","suggestions","searchSuggestionsForOps","token","solids","displayName","tokenizedValuesFromString","filtered","filterSolidsWithSearch","startsWith","sorted","onSearch","stringFromValue","onClickOp","defName","SplitPanelContainer","identifier","firstInitialPercent","firstMinSize","first","OpListColumnContainer","TokenizingField","suggestionProviders","OpList","second","selectedIndex","findIndex","OpListItem","$selected","OPS_ROOT_QUERY","OP_TYPE_SIGNATURE_FRAGMENT","CodeLocationOpsView","Switch","Route","CodeLocationAssetsList","CodeLocationJobsList","CodeLocationSensorsList","CodeLocationSchedulesList","CodeLocationResourcesList","CodeLocationGraphsList","jobs","sensors","sensor","schedules","schedule","resources","allTopLevelResourceDetails","resource","SideNavItem","active","rightElement","tooltip","left","className","StyledSideNavButton","$active","StyledSideNavLink","css","sharedSideNavItemStyle","CodeLocationDefinitionsNav","assetGroupCount","assetGroups","jobCount","scheduleCount","sensorCount","resourceCount","numberFormatter","format","bottom","grow","overflowY","CodeLocationDefinitionsMain","Redirect","CopyButton","copied","setCopied","handleCopy","navigator","clipboard","writeText","console","svg","viewBox","fill","xmlns","button","styles","ComponentExample","yaml","highlightedYaml","hljs","highlight","language","pre","dangerouslySetInnerHTML","__html","registerLanguage","hljsYaml","ComponentTags","owners","clsx","owner","tag","ComponentHeader","config","descriptionStyle","displayedDescription","markdownToPlaintext","str","h1","Markdown","remarkPlugins","remarkGfm","components","componentsMinusLinks","children","Remark","remark","use","strip","processSync","md","toString","ComponentScaffolding","componentName","command","ArrayTag","defs","itemName","getItemName","$ref","refName","pop","basicTypes","TypeTag","ComponentSchema","schema","JSON","parse","jsonSchema","SchemaRoot","$defs","properties","property","Property","setExpanded","anyOf","required","examples","expandable","isExpandableProperty","filterSchema","firstExample","defaultValue","default","onToggleExpansion","PropertyRef","PropertyType","PropertyAnyOf","Chevron","stringify","ExpandedRoot","ii","propertyTypeToString","typeName","String","ComponentDetails","h2","href","example","ComponentPageContents","componentConfig","ol","li","ListView","contents","renderLink","allComponents","pkg","componentTypes","component","packageName","PackageDetails","Fragment","PackagePageDetails","extractFromPathname","selectedPkg","selectedComponent","PackageTree","expandedPkgs","setExpandedPkgs","useLayoutEffect","setSearch","onTogglePkg","prev","input","listContent","TempFolderIcon","componentType","isSelected","TempIcon","CodeLocationDocsPackageTree","rest","url","repoAddressAsURLString","CODE_LOCATION_DOCS_QUERY","CodeLocationDocsRoot","QueryfulCodeLocationDocs","memo","locationDocsJsonOrError","mainContent","matchingPackage","CodeLocationAlertsSection","locationName","_","CodeLocationDefsStateComparison","latestDefsStateInfo","defsStateInfo","comparisonData","currentKeys","keyStateInfo","latestEntry","currentEntry","latestVersion","info","version","latestTimestamp","createTimestamp","currentVersion","currentTimestamp","truncateVersion","substring","renderVersionCell","timestamp","TimeFromNow","unixTimestamp","renderStatusCell","Table","thead","tr","th","textAlign","borderBottom","tbody","td","CODE_LOCATION_DEFS_STATE_QUERY","Subheading","workspaceLocationEntryOrError","CodeLocationOverviewSectionHeader","CodeLocationNotFound","wordBreak","RIGHT_COLUMN_WIDTH","CodeLocationOverviewRoot","displayMetadata","metadataForDetails","image","metadataAsYaml","fromEntries","libraryVersions","dagsterLibraryVersions","onClickCopy","tableLayout","minWidth","verticalAlign","LocationStatus","whiteSpace","updateTimestamp","CodeLocationServerSection","Mono","CodeLocationDefsStateComparisonSection","CodeLocationMetadataStyle","StyledRawCodeMirror","readOnly","lineNumbers","theme","QueryfulCodeLocationOverviewRoot","locationStatuses","createGlobalStyle","PipelineOverviewRoot","pathStr","useRepository","isThisThingAJob","useJobTitle","useStripSnapshotFromPath","pipelinePath","action","jobName","opsQuery","JobFallthroughRoot","PipelineOrJobDisambiguationRoot","permissionsLoading","PermissionsContext","useBlockTraceUntilTrue","pipelineOrJobName","replacedPath","LaunchpadSetupFromRunRoot","permissions","canLaunchPipelineExecution","usePermissionsForLocation","repoPath","runId","LaunchpadSetupFromRunAllowedRoot","onSave","useExecutionSessionStorage","CONFIG_FOR_RUN_QUERY","onCompleted","runOrError","run","runConfigYaml","solidSelection","newSession","solidSelectionValue","solidSelectionQuery","applyCreateSession","storageData","LaunchpadSessionLoading","LaunchpadSessionError","LaunchpadSetupRoot","LaunchpadSetupAllowedRoot","queryString","window","assetSelection","DEFAULT_JOB_TAB_ORDER","matchingTab","explorerPathForTab","pathComponent","isHidden","getPermissionsResult","permissionsResult","enabled","disabledReason","hasLaunchpad","hasPartitionSet","overview","playground","permissionResultForKey","permissionsState","runs","partitions","tabConfigs","buildJobTabMap","tabId","TIME_FORMAT","showSeconds","showTimezone","LatestRunTag","lastRunQuery","LATEST_RUN_TAG_QUERY","runsFilter","DagsterTag","RepositoryLabelTag","repoAddressAsTag","notifyOnNetworkStatusChange","useQueryRefreshAtInterval","FIFTEEN_SECONDS","runsOrError","pipelineRunsOrError","stats","startTime","end","endTime","status","RunStatus","SUCCESS","CANCELED","CANCELING","FAILURE","RunStatusIndicator","StyledTable","TimestampDisplay","timeFormat","timingStringForStatus","RunTime","RUN_TIME_FRAGMENT","JobMetadata","useJobNavMetadata","JOB_METADATA_QUERY","pipelineOrError","runsForAssetScan","JobScheduleOrSensorTag","RelatedAssetsTag","relatedAssets","getRelatedAssets","uniq","flatMap","r","matchingSchedules","matchingSensors","ScheduleOrSensorTag","open","setOpen","Dialog","canOutsideClickClose","canEscapeKeyClose","onClose","maxWidth","DialogFooter","topBorder","SCHEDULE_SWITCH_FRAGMENT","SENSOR_SWITCH_FRAGMENT","match","useRouteMatch","repoJobEntry","pipelineOrJob","partitionSets","buildJobTabs","partitionSet","wrap","JobTabs","BackfillTable","showBackfillTarget","allPartitions","backfills","refetch","partitionsRequestedBackfill","setPartitionsRequestedBackfill","BackfillRow","backfill","onShowPartitionsRequested","BackfillPartitionsRequestedDialog","backfillId","BACKFILL_ACTIONS_BACKFILL_FRAGMENT","PARTITION_SET_FOR_BACKFILL_TABLE_FRAGMENT","JobBackfillsTable","partitionSetName","partitionNames","refetchCounter","cursorStack","setCursorStack","cursor","setCursor","JOB_BACKFILLS_QUERY","limit","BACKFILL_PAGE_SIZE","partitionSetOrError","paginationProps","hasPrevCursor","hasNextCursor","popCursor","nextStack","advanceCursor","nextCursor","reset","CursorPaginationControls","BACKFILL_TABLE_FRAGMENT","PartitionRunStatusCheckboxes","counts","allowed","Checkbox","data-testid","testId","marginBottom","marginLeft","checked","runStatusToBackfillStateString","v","BackfillPartitionSelector","onLaunch","onCancel","onSubmit","runStatusData","refreshing","range","_setRange","k","stateFilters","setStateFilters","NOT_STARTED","tagEditorOpen","setTagEditorOpen","setTags","query","setQuery","reexecute","fromFailure","BACKFILL_SELECTOR_QUERY","mounted","Spinner","purpose","pipelineSnapshot","instance","solidsFiltered","filterByQuery","stepRows","buildLayout","nodes","all","GanttChartMode","FLAT","boxes","box","isFailed","failedPartitions","countsByState","QUEUED","STARTED","partitionKeysForCounts","state","partitionKey","DialogBody","Section","Body2","DimensionRangeWizard","setSelected","setRange","selectionSet","selection","health","runStatusForPartitionKey","partitionKeys","dimensionType","isTimeseriesPartition","PartitionDefinitionType","TIME_WINDOW","STATIC","showQuickSelectOptionsForStatuses","every","next","GraphQueryInput","autoApplyChanges","TagEditor","tagsFromSession","onRequestClose","borderRadius","TagContainer","onRequestEdit","isBackfillDaemonHealthy","DaemonNotRunningAlert","UsingDefaultLauncherAlert","LaunchBackfillButton","reexecutionSteps","step","onSuccess","showBackfillSuccessToast","onError","showBackfillErrorToast","launchBackfill","useMutation","LAUNCH_PARTITION_BACKFILL_MUTATION","backfillParams","tagsWithUIExecutionTags","launchPartitionBackfill","reexecutionCount","buttonTitle","LaunchButton","runCount","DAEMON_NOT_RUNNING_ALERT_INSTANCE_FRAGMENT","USING_DEFAULT_LAUNCHER_ALERT_INSTANCE_FRAGMENT","ChartJS","register","LinearScale","CategoryScale","PartitionGraph","jobDataByPartition","stepDataByPartition","yLabel","hiddenStepKeys","hiddenPartitions","setHiddenPartitions","chart","rgbColors","useRGBColorsForTheme","_showLargeGraphMessage","setShowLargeGraphMessage","showLargeGraphMessage","onGraphClick","xAxis","scales","nativeEvent","event","native","MouseEvent","offsetX","offsetY","isChartClick","chartArea","shiftKey","labelIndex","getValueForPixel","partitionName","labels","defaultOptions","titleOptions","animation","grid","ticks","font","family","plugins","legend","_e","_legendItem","maintainAspectRatio","jobData","stepData","hidden","stepKey","_fillPartitions","allLabel","graphData","datasets","borderColor","backgroundColor","colorHash","PartitionGraphContainer","Line","points","pointData","point","simpleCache","Map","OpJobPartitionsView","cacheKey","cachedResult","get","currentQueryResult","PARTITIONS_STATUS_QUERY","set","partitionsOrError","OpJobPartitionsViewContent","partitionsQueryResult","usePartitionDurations","stepDurationData","runDurationData","runsLoaded","sortedRuns","lastRun","stepStats","canLaunchPartitionBackfill","disabledReasons","viewport","containerProps","useViewport","pageSize","setPageSize","offset","setOffset","showSteps","setShowSteps","showBackfillSetup","setShowBackfillSetup","blockDialog","setBlockDialog","backfillRefetchCounter","setBackfillRefetchCounter","usePartitionStepQuery","partitionTagName","Partition","skipQuery","getVisibleItemCount","GRID_FLOATING_CONTAINER_WIDTH","selectedPartitions","Math","max","selectPartitionNamesSet","partitionStatusesOrError","partitionStatuses","runStatus","runDuration","zIndex","_backfillId","_stepQuery","CountBox","PartitionStatus","selectionWindowSize","maxIdx","min","nextOffset","indexOf","selectedIdx","tooltipMessage","PartitionPerOpStatus","AssetJobPartitionsView","assetGraph","useAssetGraphData","assetKeysWithPartitions","graphAssetKeys","assetGraphData","toGraphId","isPartitioned","assetHealth","usePartitionHealthData","total","missing","merged","mergedAssetHealth","dimensions","selectedKeys","selectedRanges","allPartitionsRange","dimension","explodePartitionKeysInSelectionMatching","dIdxs","stateForKeyIdx","AssetPartitionStatus","MISSING","keyCountInSelections","showAssets","setShowAssets","selectedDimensionKeys","dimensionIdx","dimensionKeys","isTimeseriesDimension","LaunchAssetExecutionButton","graphQueryItems","g","skipAllTerm","preferredJobName","splitPartitions","ranges","rangesForSingleDimension","PartitionPerAssetStatus","rangeDimensionIdx","rangeDimension","assetQueryItems","AssetJobPartitionGraphs","multidimensional","dimensionName","ASSET_JOB_PARTITION_SETS_QUERY","pipelineInfo","partitionSetError","usePartitionNameForPipeline","partitionSetsData","skip","partitionSetsOrError","LoadingSpinner","PipelineNav","JobOrAssetLaunchpad","render","PipelineRunsFeedRoot","PipelinePartitionsRoot","ScheduleAlertDetails","RUN_STATUSES","calculateDisplayStatus","partition","MANAGED","STARTING","assertUnreachable","SchedulePartitionStatus","scheduleName","partitionPath","addQueryPrefix","partitionURL","retrievePartitionStatus","useLazyQuery","SCHEDULE_PARTITION_STATUS_QUERY","scheduleSelector","Group","spacing","loadable","Caption","partitionFragment","scheduleOrError","RetrievedSchedulePartitionStatus","partitionsByType","displayStatus","StatusTable","ScheduleResetButton","canStartSchedule","canStopRunningSchedule","resetSchedule","toggleOnInFlight","RESET_SCHEDULE_MUTATION","displayScheduleMutationErrors","hasPermission","tooltipContent","defaultStatus","DEFAULT_DISABLED_REASON","locale","EvaluateScheduleDialog","EvaluateSchedule","trackEvent","useTrackEvent","selectedTimestamp","setSelectedTimestamp","getScheduleData","GET_SCHEDULE_QUERY","scheduleDryRunMutation","scheduleDryRunMutationLoading","SCHEDULE_DRY_RUN_MUTATION","launchMultipleRunsWithTelemetry","useLaunchMultipleRunsWithTelemetry","timezone","userTimezone","TimeContext","isTickSelectionOpen","setIsTickSelectionOpen","selectedTimestampRef","launching","setLaunching","scheduleExecutionError","setScheduleExecutionError","scheduleExecutionData","setScheduleExecutionData","canSubmitTest","submitTest","selectorData","ts","scheduleDryRun","evaluationResult","showCustomAlert","body","executionParamsList","buildExecutionParamsListSchedule","canLaunchAll","onLaunchAll","EvaluateScheduleResult","timestamps","potentialTickTimestamps","timestampToString","unix","ScheduleDescriptor","Popover","position","Menu","maxHeight","MenuItem","rightIcon","leftButtons","rightButtons","runRequests","numRunRequests","didSkip","Grid","innerContent","RunRequestTable","SkipReasonNonIdealStateWrapper","br","skipReason","rel","RUN_REQUEST_FRAGMENT","NonIdealStateWrapper","EvaluateTickButtonSchedule","showTestTickDialog","setShowTestTickDialog","ScheduleDetails","refreshState","cronSchedule","executionTimezone","futureTicks","scheduleState","latestTick","running","InstigationStatus","RUNNING","QueryRefreshCountdown","MetadataTableWIP","TickStatusTag","tick","tickResultType","TargetCell","AutomationTargetList","targets","automationType","ScheduleSwitch","canReset","humanCronString","longTimezoneName","Code","SCHEDULE_FRAGMENT","INSTIGATION_STATE_FRAGMENT","ScheduleRoot","selectionQueryResult","setSelectedTab","SCHEDULE_ROOT_QUERY","SCHEDULE_ASSET_SELECTIONS_QUERY","refreshState1","refreshState2","useMergedRefresh","ScheduleName","allowStaleData","showDaemonWarning","daemonHealth","daemonStatus","healthy","SchedulerInfo","TicksTable","RunsFeedTableWithFilters","actionBarComponents","includeRunsFromBackfills","INSTANCE_HEALTH_FRAGMENT","RepoRouteContainer","workspaceState","addressForPath","repoAddressFromPath","matchingRepo","allRepos","repositoryLocation","PipelineRoot","SensorRoot","ResourceRoot","exact","CodeLocationDefinitionsRoot","WorkspaceRoot","MainContent","configIsOpen","setConfigIsOpen","libsIsOpen","setLibsIsOpen","libsMenuItem","libsDialog","DagsterLibrariesDialog","libraries","setIsOpen","CodeLocationConfigDialog","CodeLocationConfig","library","yamlString","kvPairs","reduce","accum","PipelineRunsEmptyState","anyFilter","jobPath","isThisThingAnAssetJob","isExternalJob","isThisThingAnExternalJob","AnchorButton","ENABLED_FILTERS","filterTokens","setFilterTokens","useQueryPersistedRunFilters","permanentTokens","allTokens","repoToken","runsFilterForSearchTokens","onAddTag","tokenAsString","tokenToString","useRunsFeedEntries","RunsFeedView","RUNS","activeFiltersJsx","useRunsFilterInput","enabledFilters","tokens","belowActionBarComponents","RunsQueryRefetchContext","Provider","RunsFeedError","RunsFeedTable","emptyState"],"sourceRoot":"","ignoreList":[]}
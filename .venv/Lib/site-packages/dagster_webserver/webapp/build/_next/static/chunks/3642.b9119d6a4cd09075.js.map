{"version":3,"file":"static/chunks/3642.b9119d6a4cd09075.js","mappings":"mPAoBA,IAAMA,EAA6B,KAEjC,GAAM,UAACC,CAAQ,CAAEC,iBAAkBC,CAAO,iBAAEC,CAAe,CAAC,CADnCC,CAAAA,CACsCC,CADtCD,EAAAA,UAAAA,CAAUA,CAACE,EAAAA,EAAgBA,EAGpD,GAAIJ,EACF,MACE,UAACK,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOC,eAAgB,QAAQ,EAAGC,MAAO,CAACC,WAAY,OAAO,WAClF,WAACL,EAAAA,CAAGA,CAAAA,CAACC,KAAM,CAACC,UAAW,MAAOI,WAAY,SAAUC,IAAK,EAAE,YACzD,UAACC,EAAAA,CAAOA,CAAAA,CAACC,QAAQ,YACjB,UAACC,MAAAA,CAAIN,MAAO,CAACO,MAAOC,EAAAA,EAAgB,EAAE,WAAG,8BAQjD,GAAIhB,EAAgBiB,MAAM,EAAwB,GAAG,CAAvBpB,EAASoB,MAAM,CAC3C,MAAO,UAACC,EAAAA,EAAQA,CAAAA,CAACC,GAAG,eAItB,IAAMC,EAAiB,OAAC,YAACC,CAAU,CAAoB,GACrD,OAAOA,EAAWC,SAAS,CAACC,IAAI,CAAC,OAAC,MAACC,CAAI,CAAC,SAAK,CAACC,CAAAA,EAAAA,EAAAA,EAAAA,CAAqBA,CAACD,IACtE,EAEA,GADgC3B,CAC5B6B,CADqCH,IAAI,CAAC,GAAOH,EAAeO,IAElE,MAAO,IADoB,CACpB,KAACT,EAAAA,EAAQA,CAAAA,CAACC,GAAG,cAKtB,GADmBtB,CACf+B,CADwBL,IAAI,CAAC,GAAOI,EAAEN,CAC1B,SADoC,CAACC,SAAS,CAACL,MAAM,CAAG,GAEtE,MAAO,UAACC,EAAAA,EAAQA,CAAAA,CAACC,GAAG,mDAItB,IAAMU,EAAqBhC,EAASiC,IAAI,CAAC,GAAOH,EAAEN,UAAU,CAACU,WAAW,CAACd,MAAM,EAC/E,GAAIY,EAAoB,CACtB,GAAM,CAACR,YAAU,oBAAEW,CAAkB,CAAC,CAAGH,EACnCI,EAAaZ,EAAWU,WAAW,CAAC,EAAE,CAC5C,CAD8C,EAC1CE,EACF,MACE,IAFY,CAEZ,KAACf,EAAAA,EAAQA,CAAAA,CACPC,GAAIe,CAAAA,EAAAA,EAAAA,EAAAA,CAAaA,CACfb,EAAWG,IALuE,CAMlFQ,EAAmBR,IAAI,CACvB,iBAAsC,OAArBS,EAAWE,SAAS,IAK/C,CAMA,MAAO,UAACjB,EAAAA,EAAQA,CAAAA,CAACC,GAAG,cACtB,EC7EaiB,EDQsB,IAE/B,UAACC,EAAAA,EAAMA,CAAAA,UACL,MCX4CC,CAAC,CDW7C,EAACC,EAAAA,CAAKA,CAAAA,CAACC,KAAK,IAAIC,cAAc,aAC5B,UAAC7C,EAAAA,CAAAA","sources":["webpack://_N_E/../ui-core/src/app/BaseFallthroughRoot.tsx","webpack://_N_E/../ui-core/src/app/FallthroughRoot.oss.tsx"],"sourcesContent":["import {Box, Colors, Spinner} from '@dagster-io/ui-components';\nimport {useContext} from 'react';\nimport {Redirect, Switch} from 'react-router-dom';\n\nimport {Route} from './Route';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {WorkspaceContext} from '../workspace/WorkspaceContext/WorkspaceContext';\nimport {DagsterRepoOption} from '../workspace/WorkspaceContext/util';\nimport {workspacePath} from '../workspace/workspacePath';\n\nexport const BaseFallthroughRoot = () => {\n  return (\n    <Switch>\n      <Route path=\"*\" isNestingRoute>\n        <FinalRedirectOrLoadingRoot />\n      </Route>\n    </Switch>\n  );\n};\n\nconst FinalRedirectOrLoadingRoot = () => {\n  const workspaceContext = useContext(WorkspaceContext);\n  const {allRepos, loadingNonAssets: loading, locationEntries} = workspaceContext;\n\n  if (loading) {\n    return (\n      <Box flex={{direction: 'row', justifyContent: 'center'}} style={{paddingTop: '100px'}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 16}}>\n          <Spinner purpose=\"section\" />\n          <div style={{color: Colors.textLight()}}>Loading definitionsâ€¦</div>\n        </Box>\n      </Box>\n    );\n  }\n\n  // If we have location entries but no repos, we have no useful objects to show.\n  // Redirect to Workspace overview to surface relevant errors to the user.\n  if (locationEntries.length && allRepos.length === 0) {\n    return <Redirect to=\"/locations\" />;\n  }\n\n  // If there are visible jobs, redirect to overview\n  const anyVisibleJobs = ({repository}: DagsterRepoOption) => {\n    return repository.pipelines.some(({name}) => !isHiddenAssetGroupJob(name));\n  };\n  const anyReposWithVisibleJobs = allRepos.some((r) => anyVisibleJobs(r));\n  if (anyReposWithVisibleJobs) {\n    return <Redirect to=\"/overview\" />;\n  }\n\n  // If there are jobs but they are all hidden, route to the overview timeline grouped by automation.\n  const hasAnyJobs = allRepos.some((r) => r.repository.pipelines.length > 0);\n  if (hasAnyJobs) {\n    return <Redirect to=\"/overview/activity/timeline?groupBy=automation\" />;\n  }\n\n  // If we have no repos with jobs, see if we have an asset group and route to it.\n  const repoWithAssetGroup = allRepos.find((r) => r.repository.assetGroups.length);\n  if (repoWithAssetGroup) {\n    const {repository, repositoryLocation} = repoWithAssetGroup;\n    const assetGroup = repository.assetGroups[0]; // Should always be non-null from the find()\n    if (assetGroup) {\n      return (\n        <Redirect\n          to={workspacePath(\n            repository.name,\n            repositoryLocation.name,\n            `/asset-groups/${assetGroup.groupName}`,\n          )}\n        />\n      );\n    }\n  }\n\n  // Ben note: We only reach here if anyReposWithVisibleJobs is false,\n  // hasAnyJobs is false, AND there is no asset group.\n  //\n  // In this case, the overview would be blank so we go to the locations page.\n  return <Redirect to=\"/locations\" />;\n};\n","import {BaseFallthroughRoot} from './BaseFallthroughRoot';\n\nexport const FallthroughRoot = BaseFallthroughRoot;\n"],"names":["FinalRedirectOrLoadingRoot","allRepos","loadingNonAssets","loading","locationEntries","useContext","workspaceContext","WorkspaceContext","Box","flex","direction","justifyContent","style","paddingTop","alignItems","gap","Spinner","purpose","div","color","Colors","length","Redirect","to","anyVisibleJobs","repository","pipelines","some","name","isHiddenAssetGroupJob","anyReposWithVisibleJobs","r","hasAnyJobs","repoWithAssetGroup","find","assetGroups","repositoryLocation","assetGroup","workspacePath","groupName","FallthroughRoot","Switch","BaseFallthroughRoot","Route","path","isNestingRoute"],"sourceRoot":"","ignoreList":[]}